[{"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/index.tsx":"1","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/reportWebVitals.ts":"2","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/App.tsx":"3","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/theme/index.ts":"4","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/NavBar/navbar.tsx":"5","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Buttons/RegularBtn.tsx":"6","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/index.tsx":"7","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/create-profile-screen/index.tsx":"8","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-up screen/index.tsx":"9","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/set-new-password/index.tsx":"10","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/reset-password/index.tsx":"11","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/welcome screen/index.tsx":"12","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Layouts/Card.tsx":"13","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/TextField.tsx":"14","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/index.ts":"15","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/context.ts":"16","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/firebase.ts":"17","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/PasswordField.tsx":"18","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/Checkbox.tsx":"19","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/UsernameField.tsx":"20","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/AddAvatarBadge.tsx":"21","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/Avatar.tsx":"22","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/AddAvatarIcon.tsx":"23","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/resetpass.tsx":"24","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"25"},{"size":931,"mtime":1609847620221,"results":"26","hashOfConfig":"27"},{"size":467,"mtime":1609847620286,"results":"28","hashOfConfig":"27"},{"size":2908,"mtime":1610447601661,"results":"29","hashOfConfig":"27"},{"size":787,"mtime":1609847620289,"results":"30","hashOfConfig":"27"},{"size":1532,"mtime":1609847620207,"results":"31","hashOfConfig":"27"},{"size":1471,"mtime":1610285293728,"results":"32","hashOfConfig":"27"},{"size":2085,"mtime":1610447326260,"results":"33","hashOfConfig":"27"},{"size":4011,"mtime":1610354494783,"results":"34","hashOfConfig":"27"},{"size":2959,"mtime":1610354494785,"results":"35","hashOfConfig":"27"},{"size":2162,"mtime":1610354494785,"results":"36","hashOfConfig":"27"},{"size":3402,"mtime":1610354494783,"results":"37","hashOfConfig":"27"},{"size":5242,"mtime":1610359831636,"results":"38","hashOfConfig":"27"},{"size":1842,"mtime":1610286268705,"results":"39","hashOfConfig":"27"},{"size":1633,"mtime":1609847620201,"results":"40","hashOfConfig":"27"},{"size":87,"mtime":1609847620221,"results":"41","hashOfConfig":"27"},{"size":230,"mtime":1609847620220,"results":"42","hashOfConfig":"27"},{"size":1923,"mtime":1610306593142,"results":"43","hashOfConfig":"27"},{"size":1801,"mtime":1609847620200,"results":"44","hashOfConfig":"27"},{"size":1348,"mtime":1609847620200,"results":"45","hashOfConfig":"27"},{"size":2529,"mtime":1610354494782,"results":"46","hashOfConfig":"27"},{"size":1795,"mtime":1610094647630,"results":"47","hashOfConfig":"27"},{"size":659,"mtime":1610094647632,"results":"48","hashOfConfig":"27"},{"size":1065,"mtime":1610354494780,"results":"49","hashOfConfig":"27"},{"size":1634,"mtime":1610447915183,"results":"50","hashOfConfig":"27"},{"size":1688,"mtime":1610448340280,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ysaked",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/index.tsx",[],["113","114"],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/reportWebVitals.ts",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/App.tsx",["115","116","117","118"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport WelcomeScreen from './pages/welcome screen';\nimport SignInScreen from './pages/sign-in screen';\nimport SignUpScreen from './pages/sign-up screen';\nimport BottomNavigation from './components/NavBar/navbar';\nimport BackwardBtn from './components/Buttons/BackwardBtn';\nimport TextField from './components/Inputs/TextField';\nimport Card from './components/Layouts/Card';\nimport Checkbox from './components/Inputs/Checkbox';\nimport { RegularBtn } from './components/Buttons/RegularBtn';\nimport CreateProfileScreen from './pages/create-profile-screen';\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Nav />\n                <div style={{ background: 'black' }}>\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\n                </div>\n                <div>\n                    <BottomNavigation />\n                </div>\n                <Switch>\n                    <Route exact path=\"/welcome\">\n                        <WelcomeScreen />\n                    </Route>\n                    <Route exact path=\"/sign-in\">\n                        <SignInScreen />\n                    </Route>\n                    <Route exact path=\"/sign-up\">\n                        <SignUpScreen />\n                    </Route>\n                    <Route exact path=\"/create-profile\">\n                        <CreateProfileScreen />\n                    </Route>\n                    <Route exact path=\"/Set-password\">\n                        <SetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/ReSet-password\">\n                        <ReSetNewPasswordScreen />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nfunction Nav() {\n    return (\n        <div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/welcome\">Welcome</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-in\">Sign-In</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-up\">Sign-Up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/create-profile\">Create Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/Set-password\">Set new password</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ReSet-password\">reset password </Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/theme/index.ts",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/NavBar/navbar.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/index.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/create-profile-screen/index.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-up screen/index.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/set-new-password/index.tsx",["119","120","121","122","123"],"import { colors, Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport './styles.scss';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\n\nexport interface SetNewPassProps {}\n\nexport default class SetNewPasswordScreen extends React.Component<SetNewPassProps> {\n    public render(): JSX.Element {\n        function message() {\n            alert('your password has been sucessfilly reset!');\n        }\n        return (\n            <html>\n                <body>\n                    <div className=\"set-password\">\n                        <Card title=\"Set a new Password\" split={2} background=\"#FFFFFF\">\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <form>\n                                    <PasswordFields/>\n                                    <Setpasswordbutton/>\n                                </form>\n                            </Grid>\n                        </Card>\n                        <br/>\n                    </div>\n                </body>\n            </html>\n        );\n    }\n}\n\nconst PasswordFields = () => {\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%', paddingTop: '30%' }}>\n                <PasswordField />\n            </Grid>\n            <Grid item style={{ width: '100%', paddingBottom: '20%' }}>\n                <PasswordField label=\"Confirm Password\" />\n            </Grid>\n        </Grid>\n    );\n};\n  \nconst Setpasswordbutton=()=>{\n    return(\n        <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center', paddingTop: '10%', paddingBottom: '40%' }}>\n        <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\n            Set password\n        </RegularBtn>\n        </Grid>\n    );\n};\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/reset-password/index.tsx",["124","125","126"],"import { colors, Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport './styles.scss';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\n//import Card1 from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nexport interface ReSetNewPassProps {}\n\n\nexport default class ReSetNewPasswordScreen extends React.Component<ReSetNewPassProps> {\n    public render(): JSX.Element {\n        return (\n            <html>\n                <body>\n                    <div className=\"set-password\">\n                        <Card title=\"Reset your Password\" split={2} background=\"#FFFFFF\">\n                            <br/>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <ReSetpasswordHeader title=\"We just want to confirm your identity...\" split={6}/>\n                                <form>\n                                    <Grid\n                                        item\n                                        container\n                                        spacing={4}\n                                        direction=\"row\"\n                                        alignItems=\"center\"\n                                        justify=\"center\"\n                                    >\n                                    <EmailTextbox/>\n                                    <br/>\n                                    <ReSetpasswordbutton/>\n                                    </Grid>         \n                                    <br/>\n                                    <br/>                      \n                                </form>\n                            </Grid>\n                        </Card>\n                    </div>\n                </body>\n            </html>\n        );\n    }\n}\n\nconst ReSetpasswordHeader = (props: { title: string; split: number }) => {\n    const { title, split } = props;\n    const titleArray = title.split(' ');\n    const tile1 = titleArray.slice(0, split).join(' ');\n    const tile2 = titleArray.slice(split, title.length - 1).join(' ');\n    return (\n        <Grid item xs={12} justify=\"center\" style={{ paddingLeft: '5%' }}>\n            <Typography variant=\"h4\" align=\"left\">\n                <span style={{ color: '#F56920' }}>{tile1}</span> <span style={{ color: 'black' }}>{tile2}</span>\n            </Typography>\n        </Grid>\n    );\n};\n  \n\nconst ReSetpasswordbutton=()=>{\n    return(\n        <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center', paddingTop: '20%', paddingBottom: '25%'}}>\n            <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '50%', borderRadius: '15px', padding: '2%'}}>\n                Send me a link!\n            </RegularBtn>\n        </Grid>\n    );\n};\n\nconst EmailTextbox=()=>{\n    return(\n        <Grid\n            item\n            container\n            spacing={3}\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n        >\n            <Grid item style={{ width: '90%', paddingTop: '20%'}}>\n                    <TextField label=\"Email\"> </TextField>\n            </Grid>\n        </Grid>\n    );\n};\n\n  ",["127","128"],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/welcome screen/index.tsx",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import * as React from 'react';\nimport './styles.scss';\nimport firebase from '../../firebase';\nimport app from 'firebase/app';\nimport SignUpScreen from '../sign-up screen/index';\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\nimport WhiteLogo from './WhiteLogo.svg';\nimport googleButton from './googleButton.svg';\n// import background from './welcome-pg.png';\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { Widgets } from '@material-ui/icons';\ninterface WelcomeProps {}\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             flexGrow: 1,\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//             color: theme.palette.text.secondary,\n//         },\n//     }),\n// );\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\n    // const classes = useStyles();\n    /* var config={\n   apiKey:\"\",\n   authDomain:\"\",\n   databaseURL:\"\",\n   project:\"\",\n   storeageBucket:\"\",\n   messageingSenderid:\"\"\n};*/\n    const GoogleSignin = () => {\n        const fb = new firebase();\n\n        const provider = fb.getGoogleProvider();\n        fb.auth\n            .signInWithPopup(provider)\n            .then(function (result) {\n                console.log(result);\n                console.log('Google account is linked');\n            })\n            .catch(function (err) {\n                console.log(err);\n                console.log('failed to login');\n            });\n    };\n\n    const Submit = () => {\n        alert('error');\n    };\n    var firebaseConfig = {\n        apiKey: 'AIzaSyDIvlHZc4WMB_6IibnMOQc-_D9M2noB57w',\n        authDomain: 'geopick-db.firebaseapp.com',\n        projectId: 'geopick-db',\n        storageBucket: 'geopick-db.appspot.com',\n        messagingSenderId: '165396932142',\n        appId: '1:165396932142:web:e39c9dcd9e80c5d4cfa1bf',\n        measurementId: 'G-XS2DD50LZW',\n    };\n\n    return (\n        <html>\n            <body>\n                {/* <img src ={background} width='auto'> */}\n                <div className=\"welcomepg\">\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                        <Grid item>\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h3\" align=\"center\">\n                                <span>A tool for</span>\n                                <br></br>shutterbugs!\n                            </Typography>\n                        </Grid>\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <Grid\n                                item\n                                xs={2}\n                                alignContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ verticalAlign: 'true' }}\n                            ></Grid>\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                                <Grid item>\n                                    <button onClick={GoogleSignin} className=\"g-btn\">\n                                        <img src={googleButton} width=\"22px\" alt=\"Google\" />\n                                        <p className=\"text\">Sign in</p>\n                                    </button>\n                                    <br></br>\n                                    <hr style={{ width: '500px' }} />\n                                    <div style={{ paddingBottom: '5%' }}>\n                                        <a href=\"/sign-up\">\n                                            <button className=\"sign-btn\">Sign up now!</button>\n                                        </a>\n                                    </div>\n                                    {/* <br></br> */}\n                                    <div style={{ paddingBottom: '20%' }}>\n                                        <a href=\"/sign-in\">\n                                            <button className=\"sign-btn1\">Sign in</button>\n                                        </a>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </body>\n        </html>\n    );\n};\n\nexport default WelcomeScreen;\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Layouts/Card.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/TextField.tsx",["148"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\nfunction TextField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    InputProps={{\n                        ...InputProps,\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n\nexport default TextField;\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/index.ts",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/context.ts",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/firebase/firebase.ts",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/Checkbox.tsx",["149","150","151","152","153"],"import { Checkbox as MatCheckbox, makeStyles, createStyles, Theme, withStyles, CheckboxProps } from '@material-ui/core';\nimport * as React from 'react';\nimport { RadioButtonUncheckedOutlined, RadioButtonCheckedRounded } from '@material-ui/icons';\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             color: theme.palette.type === 'dark' ? 'white' : 'black',\n//             '&$checked': {\n//                 color: theme.palette.type === 'dark' ? 'white' : 'black',\n//             },\n//         },\n//     }),\n// );\n\nconst box = (theme: Theme) => ({\n    root: {\n        color: 'red',\n        '&$checked': {\n            color: 'red',\n        },\n    },\n    checked: {},\n});\n\nconst Custombox = withStyles(box)((props: CheckboxProps) => (\n    <MatCheckbox\n        icon={<RadioButtonUncheckedOutlined />}\n        checkedIcon={<RadioButtonCheckedRounded />}\n        color=\"default\"\n        {...props}\n    />\n));\n\nconst WhiteCheckbox = withStyles({\n    root: {\n        color: 'white',\n        '&$checked': {\n            color: 'white',\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <MatCheckbox color=\"default\" {...props} />);\n\nfunction Checkbox(props: CheckboxProps) {\n    const [checked, setChecked] = React.useState(false);\n    return <WhiteCheckbox />;\n}\n\nexport default Checkbox;\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Inputs/UsernameField.tsx",["154","155","156","157","158"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { InputAdornment } from '@material-ui/core';\nimport Tick from './Tick.svg';\nimport cross from './cross.svg';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\ninterface State {\n    username: string;\n    acceptableUsername: boolean;\n}\n\nexport default function UsernameField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    const [values, setValues] = React.useState<State>({\n        username: '',\n        acceptableUsername: false,\n    });\n\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    \n                    InputProps={{\n                        ...InputProps,\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                {values.acceptableUsername ? <img src={Tick} /> : <img src={cross} />}\n                            </InputAdornment>\n                        ),\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/AddAvatarBadge.tsx",["159","160"],"import React from 'react';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport UploadButton from './AddAvatarIcon';\nimport Avatars from './Avatar';\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n        width: 22,\n        height: 22,\n        border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function BadgeAvatar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                badgeContent={<UploadButton />}\n            >\n                <Avatars />\n            </Badge>\n        </div>\n    );\n}\n","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/Avatar.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/components/Display/AddAvatarIcon.tsx",["161"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAvatar from './AddAvatar.png';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n      width: 22,\n      height: 22,\n      border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nexport default function UploadButton() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\n      <label htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n        <SmallAvatar alt=\"Add Avatar Icon\" src={AddAvatar} />\n        </IconButton>\n      </label>\n    </div>\n  );\n}","/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/Users/jeetsolanki/Desktop/CS Year 3/Semester 1/Software Engineering/GP/GeoPick/src/pages/sign-in screen/setnewpass.tsx",["162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":19},{"ruleId":"168","severity":1,"message":"172","line":9,"column":8,"nodeType":"170","messageId":"171","endLine":9,"endColumn":17},{"ruleId":"168","severity":1,"message":"173","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":12},{"ruleId":"168","severity":1,"message":"174","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":16},{"ruleId":"168","severity":1,"message":"175","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":16},{"ruleId":"168","severity":1,"message":"176","line":1,"column":24,"nodeType":"170","messageId":"171","endLine":1,"endColumn":34},{"ruleId":"168","severity":1,"message":"174","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"168","severity":1,"message":"172","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":17},{"ruleId":"168","severity":1,"message":"177","line":14,"column":18,"nodeType":"170","messageId":"171","endLine":14,"endColumn":25},{"ruleId":"168","severity":1,"message":"175","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":16},{"ruleId":"168","severity":1,"message":"174","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"168","severity":1,"message":"178","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"168","severity":1,"message":"181","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":11},{"ruleId":"168","severity":1,"message":"182","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":20},{"ruleId":"168","severity":1,"message":"183","line":6,"column":27,"nodeType":"170","messageId":"171","endLine":6,"endColumn":33},{"ruleId":"168","severity":1,"message":"184","line":6,"column":35,"nodeType":"170","messageId":"171","endLine":6,"endColumn":40},{"ruleId":"168","severity":1,"message":"185","line":6,"column":42,"nodeType":"170","messageId":"171","endLine":6,"endColumn":48},{"ruleId":"168","severity":1,"message":"186","line":6,"column":50,"nodeType":"170","messageId":"171","endLine":6,"endColumn":54},{"ruleId":"168","severity":1,"message":"187","line":6,"column":56,"nodeType":"170","messageId":"171","endLine":6,"endColumn":69},{"ruleId":"168","severity":1,"message":"188","line":10,"column":10,"nodeType":"170","messageId":"171","endLine":10,"endColumn":22},{"ruleId":"168","severity":1,"message":"189","line":10,"column":30,"nodeType":"170","messageId":"171","endLine":10,"endColumn":40},{"ruleId":"168","severity":1,"message":"190","line":10,"column":42,"nodeType":"170","messageId":"171","endLine":10,"endColumn":47},{"ruleId":"168","severity":1,"message":"191","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":15},{"ruleId":"168","severity":1,"message":"174","line":12,"column":8,"nodeType":"170","messageId":"171","endLine":12,"endColumn":16},{"ruleId":"168","severity":1,"message":"172","line":13,"column":8,"nodeType":"170","messageId":"171","endLine":13,"endColumn":17},{"ruleId":"168","severity":1,"message":"178","line":14,"column":8,"nodeType":"170","messageId":"171","endLine":14,"endColumn":21},{"ruleId":"168","severity":1,"message":"173","line":15,"column":8,"nodeType":"170","messageId":"171","endLine":15,"endColumn":12},{"ruleId":"168","severity":1,"message":"192","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":20},{"ruleId":"168","severity":1,"message":"193","line":17,"column":10,"nodeType":"170","messageId":"171","endLine":17,"endColumn":17},{"ruleId":"168","severity":1,"message":"194","line":58,"column":11,"nodeType":"170","messageId":"171","endLine":58,"endColumn":17},{"ruleId":"168","severity":1,"message":"195","line":61,"column":9,"nodeType":"170","messageId":"171","endLine":61,"endColumn":23},{"ruleId":"168","severity":1,"message":"196","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":12},{"ruleId":"168","severity":1,"message":"189","line":1,"column":35,"nodeType":"170","messageId":"171","endLine":1,"endColumn":45},{"ruleId":"168","severity":1,"message":"188","line":1,"column":47,"nodeType":"170","messageId":"171","endLine":1,"endColumn":59},{"ruleId":"168","severity":1,"message":"197","line":26,"column":7,"nodeType":"170","messageId":"171","endLine":26,"endColumn":16},{"ruleId":"168","severity":1,"message":"198","line":46,"column":12,"nodeType":"170","messageId":"171","endLine":46,"endColumn":19},{"ruleId":"168","severity":1,"message":"199","line":46,"column":21,"nodeType":"170","messageId":"171","endLine":46,"endColumn":31},{"ruleId":"168","severity":1,"message":"196","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":12},{"ruleId":"168","severity":1,"message":"200","line":58,"column":11,"nodeType":"170","messageId":"171","endLine":58,"endColumn":23},{"ruleId":"168","severity":1,"message":"201","line":62,"column":11,"nodeType":"170","messageId":"171","endLine":62,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":76,"column":62,"nodeType":"204","endLine":76,"endColumn":80},{"ruleId":"202","severity":1,"message":"203","line":76,"column":83,"nodeType":"204","endLine":76,"endColumn":102},{"ruleId":"168","severity":1,"message":"205","line":8,"column":7,"nodeType":"170","messageId":"171","endLine":8,"endColumn":18},{"ruleId":"168","severity":1,"message":"206","line":37,"column":7,"nodeType":"170","messageId":"171","endLine":37,"endColumn":18},{"ruleId":"168","severity":1,"message":"207","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":14},{"ruleId":"168","severity":1,"message":"176","line":1,"column":16,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"172","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":17},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'BackwardBtn' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'colors' is defined but never used.","'Typography' is defined but never used.","'message' is defined but never used.","'PasswordField' is defined but never used.",["208"],["209"],"'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'RegularBtn' is defined but never used.","'Widgets' is defined but never used.","'Submit' is assigned a value but never used.","'firebaseConfig' is assigned a value but never used.","'clsx' is defined but never used.","'Custombox' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledBadge' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]