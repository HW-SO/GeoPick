[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"5","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"6","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"7","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx":"8","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"9","/home/ms374/GeoPick/src/pages/sign-in screen/index.tsx":"10","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"11","/home/ms374/GeoPick/src/pages/sign-up screen/index.tsx":"12","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"13","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"14","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"15","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"16","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"17","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"18","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"19","/home/ms374/GeoPick/src/components/Inputs/UsernameField.tsx":"20","/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx":"21","/home/ms374/GeoPick/src/pages/home-screen/header.tsx":"22","/home/ms374/GeoPick/src/firebase/index.ts":"23","/home/ms374/GeoPick/src/firebase/firebase.ts":"24","/home/ms374/GeoPick/src/firebase/context.ts":"25"},{"size":931,"mtime":1609151726850,"results":"26","hashOfConfig":"27"},{"size":467,"mtime":1609151726915,"results":"28","hashOfConfig":"27"},{"size":3189,"mtime":1610523628255,"results":"29","hashOfConfig":"27"},{"size":787,"mtime":1609751277182,"results":"30","hashOfConfig":"27"},{"size":1688,"mtime":1610523628757,"results":"31","hashOfConfig":"27"},{"size":1634,"mtime":1610523628749,"results":"32","hashOfConfig":"27"},{"size":721,"mtime":1610523628312,"results":"33","hashOfConfig":"27"},{"size":1532,"mtime":1609751276788,"results":"34","hashOfConfig":"27"},{"size":1471,"mtime":1610345532488,"results":"35","hashOfConfig":"27"},{"size":2085,"mtime":1610523628733,"results":"36","hashOfConfig":"27"},{"size":5242,"mtime":1610523628773,"results":"37","hashOfConfig":"27"},{"size":3095,"mtime":1610527447585,"results":"38","hashOfConfig":"27"},{"size":4367,"mtime":1610555934409,"results":"39","hashOfConfig":"27"},{"size":1865,"mtime":1610547991502,"results":"40","hashOfConfig":"27"},{"size":1842,"mtime":1610345532515,"results":"41","hashOfConfig":"27"},{"size":3642,"mtime":1610545980305,"results":"42","hashOfConfig":"27"},{"size":688,"mtime":1610547670324,"results":"43","hashOfConfig":"27"},{"size":1633,"mtime":1609751276768,"results":"44","hashOfConfig":"27"},{"size":1801,"mtime":1609751276768,"results":"45","hashOfConfig":"27"},{"size":2529,"mtime":1610015623241,"results":"46","hashOfConfig":"27"},{"size":1348,"mtime":1609751276761,"results":"47","hashOfConfig":"27"},{"size":2066,"mtime":1610523628279,"results":"48","hashOfConfig":"27"},{"size":87,"mtime":1609151726801,"results":"49","hashOfConfig":"27"},{"size":2090,"mtime":1610480437235,"results":"50","hashOfConfig":"27"},{"size":230,"mtime":1609151726788,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1j1dccp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/ms374/GeoPick/src/index.tsx",[],["113","114"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",["115","116","117","118"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport WelcomeScreen from './pages/welcome screen';\nimport SignInScreen from './pages/sign-in screen';\nimport SignUpScreen from './pages/sign-up screen';\nimport BottomNavigation from './components/NavBar/navbar';\nimport BackwardBtn from './components/Buttons/BackwardBtn';\nimport TextField from './components/Inputs/TextField';\nimport Card from './components/Layouts/Card';\nimport Checkbox from './components/Inputs/Checkbox';\nimport { RegularBtn } from './components/Buttons/RegularBtn';\nimport CreateProfileScreen from './pages/create-profile-screen';\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\nimport { HomeScreen } from './pages/home-screen/home';\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Nav />\n                <div style={{ background: 'black' }}>\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\n                </div>\n                <div>\n                    <BottomNavigation />\n                </div>\n                <Switch>\n                    <Route exact path=\"/welcome\">\n                        <WelcomeScreen />\n                    </Route>\n                    <Route exact path=\"/sign-in\">\n                        <SignInScreen />\n                    </Route>\n                    <Route exact path=\"/sign-up\">\n                        <SignUpScreen />\n                    </Route>\n                    <Route exact path=\"/create-profile\">\n                        <CreateProfileScreen />\n                    </Route>\n                    <Route exact path=\"/Set-password\">\n                        <SetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/ReSet-password\">\n                        <ReSetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/home\">\n                        <HomeScreen />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nfunction Nav() {\n    return (\n        <div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/welcome\">Welcome</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-in\">Sign-In</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-up\">Sign-Up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/create-profile\">Create Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/Set-password\">Set new password</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ReSet-password\">reset password </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/home\">Home Screen</Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default App;\n","/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",["119","120"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport './styles.scss';\nexport interface SetNewPassProps {}\n\nexport default class SetNewPass extends React.Component<SetNewPassProps> {\n    public render(): JSX.Element {\n        return (\n            <div>\n                <div className=\"bgnewpass\">\n                    <Card background=\"white\" title=\"Set a new Password\" split={2}>\n                        <Grid container spacing={5} direction=\"row\">\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n                                    <PasswordField> </PasswordField>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <PasswordField> Confirm Password </PasswordField>{' '}\n                                    {/* ask to add the cofirm text in the components */}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\n                                        Set Password\n                                    </RegularBtn>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/home/ms374/GeoPick/src/pages/home-screen/home.tsx",["121"],"import * as React from 'react';\nimport { Component } from 'react';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './homesStyles.scss';\nimport SinglePost from './header';\nimport Picture from './welcome-pg.png';\nexport interface HomeScreenProps {}\nexport interface HomeScreenState {}\n\nexport class HomeScreen extends React.Component<HomeScreenProps, HomeScreenState> {\n    // state = { :  }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b' }}>\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\"></img>\n                <br></br>\n                <SinglePost username=\"mo.kvs_\" date=\"13-01-2021\" postPic={Picture} />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx",[],"/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/index.tsx",[],"/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import * as React from 'react';\nimport './styles.scss';\nimport firebase from '../../firebase';\nimport app from 'firebase/app';\nimport SignUpScreen from '../sign-up screen/index';\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\nimport WhiteLogo from './WhiteLogo.svg';\nimport googleButton from './googleButton.svg';\n// import background from './welcome-pg.png';\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { Widgets } from '@material-ui/icons';\ninterface WelcomeProps {}\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             flexGrow: 1,\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//             color: theme.palette.text.secondary,\n//         },\n//     }),\n// );\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\n    // const classes = useStyles();\n    /* var config={\n   apiKey:\"\",\n   authDomain:\"\",\n   databaseURL:\"\",\n   project:\"\",\n   storeageBucket:\"\",\n   messageingSenderid:\"\"\n};*/\n    const GoogleSignin = () => {\n        const fb = new firebase();\n\n        const provider = fb.getGoogleProvider();\n        fb.auth\n            .signInWithPopup(provider)\n            .then(function (result) {\n                console.log(result);\n                console.log('Google account is linked');\n            })\n            .catch(function (err) {\n                console.log(err);\n                console.log('failed to login');\n            });\n    };\n\n    const Submit = () => {\n        alert('error');\n    };\n    var firebaseConfig = {\n        apiKey: 'AIzaSyDIvlHZc4WMB_6IibnMOQc-_D9M2noB57w',\n        authDomain: 'geopick-db.firebaseapp.com',\n        projectId: 'geopick-db',\n        storageBucket: 'geopick-db.appspot.com',\n        messagingSenderId: '165396932142',\n        appId: '1:165396932142:web:e39c9dcd9e80c5d4cfa1bf',\n        measurementId: 'G-XS2DD50LZW',\n    };\n\n    return (\n        <html>\n            <body>\n                {/* <img src ={background} width='auto'> */}\n                <div className=\"welcomepg\">\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                        <Grid item>\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h3\" align=\"center\">\n                                <span>A tool for</span>\n                                <br></br>shutterbugs!\n                            </Typography>\n                        </Grid>\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <Grid\n                                item\n                                xs={2}\n                                alignContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ verticalAlign: 'true' }}\n                            ></Grid>\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                                <Grid item>\n                                    <button onClick={GoogleSignin} className=\"g-btn\">\n                                        <img src={googleButton} width=\"22px\" alt=\"Google\" />\n                                        <p className=\"text\">Sign in</p>\n                                    </button>\n                                    <br></br>\n                                    <hr style={{ width: '500px' }} />\n                                    <div style={{ paddingBottom: '5%' }}>\n                                        <a href=\"/sign-up\">\n                                            <button className=\"sign-btn\">Sign up now!</button>\n                                        </a>\n                                    </div>\n                                    {/* <br></br> */}\n                                    <div style={{ paddingBottom: '20%' }}>\n                                        <a href=\"/sign-in\">\n                                            <button className=\"sign-btn1\">Sign in</button>\n                                        </a>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </body>\n        </html>\n    );\n};\n\nexport default WelcomeScreen;\n","/home/ms374/GeoPick/src/pages/sign-up screen/index.tsx",["141"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport Checkbox from '../../components/Inputs/Checkbox';\n// import './styles.scss';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport CreateProfileScreen from '../create-profile-screen/index';\n\nexport interface SignUpProps {}\n\nexport default class SignUpScreen extends React.Component<SignUpProps> {\n    \n    public render(): JSX.Element {\n        return (\n            <Card title=\"Sign Up!\" split={1}>\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                    <SignUpHeader title=\"Enter some of your personal Details\"/>\n                    <SignUpForm />\n                </Grid>\n            </Card>\n        );\n    }\n}\n\nconst SignUpHeader = (props: { title: string }) => {\n    return (\n        <Grid item>\n            <Typography variant=\"h5\" style={{ color: 'white', fontWeight: 'unset', textAlign: 'left'}}>\n                {props.title}\n            </Typography>\n        </Grid>\n    );\n};\n\nconst SignUpFields = () => {\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%' }}>\n                <TextField label=\"Email\" />\n            </Grid>\n            <Grid item style={{ width: '100%' }}>\n                <PasswordField />\n            </Grid>\n            <Grid item style={{ width: '100%' }}>\n                <PasswordField label=\"Confirm Password\" />\n            </Grid>\n        </Grid>\n    );\n};\n\nconst SignUpForm = () => {\n    return (\n        <>\n            <form>\n                <SignUpFields />\n                <Grid item container spacing={3}>\n                    <Grid item xs={2} alignContent=\"center\" alignItems=\"center\" style={{ verticalAlign: 'true' }}>\n                        <Checkbox required />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={10}\n                        alignContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\n                    >\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\n                            By signing up I conform that I have read and accepted the terms and conditions of using the\n                            application.\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </form>\n            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                <a href=\"/create-profile\">\n                <RegularBtn colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\n                    Sign Up!\n                </RegularBtn>\n                </a>\n            </Grid>\n        </>\n    );\n};\n","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",["142","143"],"import React from 'react';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport UploadButton from './AddAvatarIcon';\nimport Avatars from './Avatar';\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n        width: 22,\n        height: 22,\n        border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\ninterface Image {\n    src: string\n}\n\nexport default function BadgeAvatar(props: Image) {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                badgeContent={<UploadButton />}\n            >\n                <Avatars imgsrc={props.src}/>\n            </Badge>\n        </div>\n    );\n}\n\n","/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",["144","145","146","147","148","149","150","151","152","153"],"import React, {useState, useEffect} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAvatar from './AddAvatar.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport firebase from '../../firebase';\n// import { storage } from \"../../firebase/firebase\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n      width: 22,\n      height: 22,\n      border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nexport default function UploadButton() {\n  const classes = useStyles();\n  const ipRef = React.useRef<HTMLElement>(null);\n  const avatarInput = {url: ''};\n  const [avatFile, setAvatFile] = useState<any>({});\n  const [avatURL, setAvatURL] = useState(\"\");\n\n  const onButtonClick = () => {\n      console.log(\"inside\")\n      // `current` points to the mounted file input element\n      const ipRef2 = ipRef\n      if(ipRef2 != null){\n        const ipRef2 = ipRef;\n        \n      }\n      ipRef.current?.click();  \n  };\n  // const handleAvatarUpload= (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   // const avat = avatFile!\n  //   // const avatarName = avatFile?['name'];\n  //   const fb = new firebase();\n  //   const db = fb.getStorage();\n  //   const avatRef = db.ref();\n\n  //   if(avatFile){\n  //     const uploadTask = storage.ref(`/Images/User1/${avatFile.name}`).put(avatFile);\n  //      uploadTask.on(\n  //       \"state_changed\",\n  //       error => {\n  //         console.log(error);\n  //       },\n  //       () => {\n  //         storage\n  //           .ref(\"Images\")\n  //           .child(avatFile.name)\n  //           .getDownloadURL()\n  //           .then(avatURL => {\n  //             setAvatURL(avatURL);\n  //           });\n  //       }\n  //     );\n  //     }\n    \n\n  // }\n\n  // const handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const fb = new firebase();\n  //   const db = fb.getApp().firestore();\n  //   const storage = fb.getStorage().ref();\n\n  //   const avatar = (event.target.files == null) ? {} : event.target.files[0];\n    \n  //   setAvatFile(avatar);\n  //   console.log(avatFile);\n\n  //   if(avatFile != {}){\n  //     const uploadRef = storage.child(avatFile.name);\n  //     await uploadRef.put(avatFile);\n  //     setAvatURL(await uploadRef.getDownloadURL());\n  //   }\n\n  //   const email = event.target.email.value;\n  //   if (!email || !avatURL) {\n  //     return;\n  //   }\n\n  //   await db.collection(\"users\").doc(email).set({\n  //     email: email,\n  //     avatar: avatURL,\n  //   });\n    \n  // };\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     const usersCollection = await db.collection(\"users\").get();\n  //     setUsers(\n  //       usersCollection.docs.map((doc) => {\n  //         return doc.data();\n  //       })\n  //     );\n  //   };\n  //   fetchUsers();\n  // }, []);\n  // onChange={handleChange}\n  // onClick={()=>onButtonClick()}\n  \n  return (\n    <div className={classes.root}>\n      {/* <form onSubmit={handleAvatarUpload}> */}\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\n      <label htmlFor=\"icon-button-file\">\n      \n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" >\n      <SmallAvatar alt=\"Add Avatar Icon\" src={AddAvatar} />\n      </IconButton>\n      </label>\n      {/* </form> */}\n    </div>\n  );\n}","/home/ms374/GeoPick/src/components/Display/Avatar.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",["154"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\nfunction TextField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    InputProps={{\n                        ...InputProps,\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n\nexport default TextField;\n","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/UsernameField.tsx",["155","156","157","158","159"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { InputAdornment } from '@material-ui/core';\nimport Tick from './Tick.svg';\nimport cross from './cross.svg';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\ninterface State {\n    username: string;\n    acceptableUsername: boolean;\n}\n\nexport default function UsernameField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    const [values, setValues] = React.useState<State>({\n        username: '',\n        acceptableUsername: false,\n    });\n\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    \n                    InputProps={{\n                        ...InputProps,\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                {values.acceptableUsername ? <img src={Tick} /> : <img src={cross} />}\n                            </InputAdornment>\n                        ),\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n","/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx",["160","161","162","163","164"],"import { Checkbox as MatCheckbox, makeStyles, createStyles, Theme, withStyles, CheckboxProps } from '@material-ui/core';\nimport * as React from 'react';\nimport { RadioButtonUncheckedOutlined, RadioButtonCheckedRounded } from '@material-ui/icons';\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             color: theme.palette.type === 'dark' ? 'white' : 'black',\n//             '&$checked': {\n//                 color: theme.palette.type === 'dark' ? 'white' : 'black',\n//             },\n//         },\n//     }),\n// );\n\nconst box = (theme: Theme) => ({\n    root: {\n        color: 'red',\n        '&$checked': {\n            color: 'red',\n        },\n    },\n    checked: {},\n});\n\nconst Custombox = withStyles(box)((props: CheckboxProps) => (\n    <MatCheckbox\n        icon={<RadioButtonUncheckedOutlined />}\n        checkedIcon={<RadioButtonCheckedRounded />}\n        color=\"default\"\n        {...props}\n    />\n));\n\nconst WhiteCheckbox = withStyles({\n    root: {\n        color: 'white',\n        '&$checked': {\n            color: 'white',\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <MatCheckbox color=\"default\" {...props} />);\n\nfunction Checkbox(props: CheckboxProps) {\n    const [checked, setChecked] = React.useState(false);\n    return <WhiteCheckbox />;\n}\n\nexport default Checkbox;\n","/home/ms374/GeoPick/src/pages/home-screen/header.tsx",[],"/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/firebase/firebase.ts",[],"/home/ms374/GeoPick/src/firebase/context.ts",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":19},{"ruleId":"169","severity":1,"message":"173","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":17},{"ruleId":"169","severity":1,"message":"174","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"175","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":16},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"173","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":17},{"ruleId":"169","severity":1,"message":"177","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":19},{"ruleId":"169","severity":1,"message":"178","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":11},{"ruleId":"169","severity":1,"message":"179","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":20},{"ruleId":"169","severity":1,"message":"180","line":6,"column":27,"nodeType":"171","messageId":"172","endLine":6,"endColumn":33},{"ruleId":"169","severity":1,"message":"181","line":6,"column":35,"nodeType":"171","messageId":"172","endLine":6,"endColumn":40},{"ruleId":"169","severity":1,"message":"182","line":6,"column":42,"nodeType":"171","messageId":"172","endLine":6,"endColumn":48},{"ruleId":"169","severity":1,"message":"183","line":6,"column":50,"nodeType":"171","messageId":"172","endLine":6,"endColumn":54},{"ruleId":"169","severity":1,"message":"184","line":6,"column":56,"nodeType":"171","messageId":"172","endLine":6,"endColumn":69},{"ruleId":"169","severity":1,"message":"185","line":10,"column":10,"nodeType":"171","messageId":"172","endLine":10,"endColumn":22},{"ruleId":"169","severity":1,"message":"186","line":10,"column":30,"nodeType":"171","messageId":"172","endLine":10,"endColumn":40},{"ruleId":"169","severity":1,"message":"187","line":10,"column":42,"nodeType":"171","messageId":"172","endLine":10,"endColumn":47},{"ruleId":"169","severity":1,"message":"188","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":15},{"ruleId":"169","severity":1,"message":"175","line":12,"column":8,"nodeType":"171","messageId":"172","endLine":12,"endColumn":16},{"ruleId":"169","severity":1,"message":"173","line":13,"column":8,"nodeType":"171","messageId":"172","endLine":13,"endColumn":17},{"ruleId":"169","severity":1,"message":"189","line":14,"column":8,"nodeType":"171","messageId":"172","endLine":14,"endColumn":21},{"ruleId":"169","severity":1,"message":"174","line":15,"column":8,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"190","line":16,"column":10,"nodeType":"171","messageId":"172","endLine":16,"endColumn":20},{"ruleId":"169","severity":1,"message":"191","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":17},{"ruleId":"169","severity":1,"message":"192","line":58,"column":11,"nodeType":"171","messageId":"172","endLine":58,"endColumn":17},{"ruleId":"169","severity":1,"message":"193","line":61,"column":9,"nodeType":"171","messageId":"172","endLine":61,"endColumn":23},{"ruleId":"169","severity":1,"message":"194","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":27},{"ruleId":"169","severity":1,"message":"195","line":9,"column":7,"nodeType":"171","messageId":"172","endLine":9,"endColumn":18},{"ruleId":"169","severity":1,"message":"196","line":38,"column":7,"nodeType":"171","messageId":"172","endLine":38,"endColumn":18},{"ruleId":"169","severity":1,"message":"197","line":1,"column":26,"nodeType":"171","messageId":"172","endLine":1,"endColumn":35},{"ruleId":"169","severity":1,"message":"198","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"199","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":16},{"ruleId":"169","severity":1,"message":"200","line":33,"column":9,"nodeType":"171","messageId":"172","endLine":33,"endColumn":20},{"ruleId":"169","severity":1,"message":"201","line":34,"column":10,"nodeType":"171","messageId":"172","endLine":34,"endColumn":18},{"ruleId":"169","severity":1,"message":"202","line":34,"column":20,"nodeType":"171","messageId":"172","endLine":34,"endColumn":31},{"ruleId":"169","severity":1,"message":"203","line":35,"column":10,"nodeType":"171","messageId":"172","endLine":35,"endColumn":17},{"ruleId":"169","severity":1,"message":"204","line":35,"column":19,"nodeType":"171","messageId":"172","endLine":35,"endColumn":29},{"ruleId":"169","severity":1,"message":"205","line":37,"column":9,"nodeType":"171","messageId":"172","endLine":37,"endColumn":22},{"ruleId":"169","severity":1,"message":"206","line":42,"column":15,"nodeType":"171","messageId":"172","endLine":42,"endColumn":21},{"ruleId":"169","severity":1,"message":"207","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"169","severity":1,"message":"207","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"169","severity":1,"message":"208","line":58,"column":11,"nodeType":"171","messageId":"172","endLine":58,"endColumn":23},{"ruleId":"169","severity":1,"message":"209","line":62,"column":11,"nodeType":"171","messageId":"172","endLine":62,"endColumn":34},{"ruleId":"210","severity":1,"message":"211","line":76,"column":62,"nodeType":"212","endLine":76,"endColumn":80},{"ruleId":"210","severity":1,"message":"211","line":76,"column":83,"nodeType":"212","endLine":76,"endColumn":102},{"ruleId":"169","severity":1,"message":"186","line":1,"column":35,"nodeType":"171","messageId":"172","endLine":1,"endColumn":45},{"ruleId":"169","severity":1,"message":"185","line":1,"column":47,"nodeType":"171","messageId":"172","endLine":1,"endColumn":59},{"ruleId":"169","severity":1,"message":"213","line":26,"column":7,"nodeType":"171","messageId":"172","endLine":26,"endColumn":16},{"ruleId":"169","severity":1,"message":"214","line":46,"column":12,"nodeType":"171","messageId":"172","endLine":46,"endColumn":19},{"ruleId":"169","severity":1,"message":"215","line":46,"column":21,"nodeType":"171","messageId":"172","endLine":46,"endColumn":31},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"@typescript-eslint/no-unused-vars","'BackwardBtn' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Component' is defined but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'PasswordField' is defined but never used.","'RegularBtn' is defined but never used.","'Widgets' is defined but never used.","'Submit' is assigned a value but never used.","'firebaseConfig' is assigned a value but never used.","'CreateProfileScreen' is defined but never used.","'StyledBadge' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'firebase' is defined but never used.","'avatarInput' is assigned a value but never used.","'avatFile' is assigned a value but never used.","'setAvatFile' is assigned a value but never used.","'avatURL' is assigned a value but never used.","'setAvatURL' is assigned a value but never used.","'onButtonClick' is assigned a value but never used.","'ipRef2' is assigned a value but never used.","'clsx' is defined but never used.","'handleChange' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Custombox' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]