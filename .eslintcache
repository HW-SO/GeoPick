[{"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx":"1","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\reportWebVitals.ts":"2","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\App.tsx":"3","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\theme\\index.ts":"4","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx":"5","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"6","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx":"7","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"8","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\terms\\index.tsx":"9","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\explore-page\\index.tsx":"10","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\search-page\\index.tsx":"11","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx":"12","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx":"13","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\view-points-screen\\points.tsx":"14","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\camera\\index.tsx":"15","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\upload-image\\index.tsx":"16","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx":"17","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\followers-page\\ViewFollowers.tsx":"18","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Camera.tsx":"19","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"20","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"21","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"22","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx":"23","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\delete-post\\index.tsx":"24","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\accessSetting\\index.tsx":"25","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\post-view\\index.tsx":"26","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notificationset\\index.tsx":"27","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notification\\index.tsx":"28","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-post\\index.tsx":"29","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts":"30","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\auth.ts":"31","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"32","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\tags.tsx":"33","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Places.tsx":"34","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"35","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\uploadIcon.tsx":"36","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\followers-page\\CustomTab.tsx":"37","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\index.ts":"38","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\sharePost.tsx":"39","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Card.tsx":"40","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\profileOverview.tsx":"41","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts":"42","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\avatarSmall.tsx":"43","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\occupation.tsx":"44","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"45","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"46","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\userFeed1.tsx":"47","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew1.tsx":"48","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew.tsx":"49","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\NavBar\\navbar.tsx":"50","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\feed.tsx":"51","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"52","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\Avatar.tsx":"53","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\edit.tsx":"54","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Posts.tsx":"55","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\report.tsx":"56","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Game\\GTLmenu.tsx":"57"},{"size":944,"mtime":1615101605213,"results":"58","hashOfConfig":"59"},{"size":482,"mtime":1615101605443,"results":"60","hashOfConfig":"59"},{"size":7874,"mtime":1615714272704,"results":"61","hashOfConfig":"59"},{"size":821,"mtime":1615101605444,"results":"62","hashOfConfig":"59"},{"size":1647,"mtime":1615101605284,"results":"63","hashOfConfig":"59"},{"size":3984,"mtime":1615101605284,"results":"64","hashOfConfig":"59"},{"size":4692,"mtime":1615369084292,"results":"65","hashOfConfig":"59"},{"size":4623,"mtime":1615365977454,"results":"66","hashOfConfig":"59"},{"size":28443,"mtime":1615101605361,"results":"67","hashOfConfig":"59"},{"size":3262,"mtime":1615101605216,"results":"68","hashOfConfig":"59"},{"size":6257,"mtime":1615709929519,"results":"69","hashOfConfig":"59"},{"size":5692,"mtime":1615610604368,"results":"70","hashOfConfig":"59"},{"size":5907,"mtime":1615101605216,"results":"71","hashOfConfig":"59"},{"size":2676,"mtime":1615101605362,"results":"72","hashOfConfig":"59"},{"size":415,"mtime":1615101605214,"results":"73","hashOfConfig":"59"},{"size":12065,"mtime":1615444151752,"results":"74","hashOfConfig":"59"},{"size":5488,"mtime":1615538899310,"results":"75","hashOfConfig":"59"},{"size":908,"mtime":1615622225060,"results":"76","hashOfConfig":"59"},{"size":1672,"mtime":1615443663994,"results":"77","hashOfConfig":"59"},{"size":5643,"mtime":1615731672596,"results":"78","hashOfConfig":"59"},{"size":8647,"mtime":1615101605215,"results":"79","hashOfConfig":"59"},{"size":5380,"mtime":1615101605363,"results":"80","hashOfConfig":"59"},{"size":3253,"mtime":1615101605218,"results":"81","hashOfConfig":"59"},{"size":9529,"mtime":1615647753740,"results":"82","hashOfConfig":"59"},{"size":4660,"mtime":1615101605214,"results":"83","hashOfConfig":"59"},{"size":15449,"mtime":1615101605282,"results":"84","hashOfConfig":"59"},{"size":2904,"mtime":1615101605282,"results":"85","hashOfConfig":"59"},{"size":1692,"mtime":1615647911918,"results":"86","hashOfConfig":"59"},{"size":12462,"mtime":1615647753774,"results":"87","hashOfConfig":"59"},{"size":3345,"mtime":1615647911918,"results":"88","hashOfConfig":"59"},{"size":969,"mtime":1615101605210,"results":"89","hashOfConfig":"59"},{"size":1457,"mtime":1615101605190,"results":"90","hashOfConfig":"59"},{"size":3165,"mtime":1615647753682,"results":"91","hashOfConfig":"59"},{"size":2089,"mtime":1615709934572,"results":"92","hashOfConfig":"59"},{"size":1523,"mtime":1615101605181,"results":"93","hashOfConfig":"59"},{"size":4430,"mtime":1615443663991,"results":"94","hashOfConfig":"59"},{"size":5236,"mtime":1615624384083,"results":"95","hashOfConfig":"59"},{"size":137,"mtime":1615101605212,"results":"96","hashOfConfig":"59"},{"size":3347,"mtime":1615101605184,"results":"97","hashOfConfig":"59"},{"size":2032,"mtime":1615101605193,"results":"98","hashOfConfig":"59"},{"size":10532,"mtime":1615699471429,"results":"99","hashOfConfig":"59"},{"size":272,"mtime":1615101605210,"results":"100","hashOfConfig":"59"},{"size":1478,"mtime":1615101605183,"results":"101","hashOfConfig":"59"},{"size":2728,"mtime":1615101605193,"results":"102","hashOfConfig":"59"},{"size":896,"mtime":1615101605182,"results":"103","hashOfConfig":"59"},{"size":1808,"mtime":1615101605189,"results":"104","hashOfConfig":"59"},{"size":2018,"mtime":1615538899309,"results":"105","hashOfConfig":"59"},{"size":15674,"mtime":1615621803224,"results":"106","hashOfConfig":"59"},{"size":15672,"mtime":1615463281380,"results":"107","hashOfConfig":"59"},{"size":2894,"mtime":1615543814652,"results":"108","hashOfConfig":"59"},{"size":4624,"mtime":1615101605194,"results":"109","hashOfConfig":"59"},{"size":1284,"mtime":1615101605182,"results":"110","hashOfConfig":"59"},{"size":682,"mtime":1615101605182,"results":"111","hashOfConfig":"59"},{"size":1741,"mtime":1615538899308,"results":"112","hashOfConfig":"59"},{"size":1881,"mtime":1615101605194,"results":"113","hashOfConfig":"59"},{"size":1574,"mtime":1615101605184,"results":"114","hashOfConfig":"59"},{"size":19398,"mtime":1615104015476,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1t5v4mh",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"118"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"142","usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"200","usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"211","usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"237","usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"240","usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"118"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"118"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"118"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"118"},"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx",[],["263","264"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\reportWebVitals.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\App.tsx",["265","266"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\nimport WelcomeScreen from './pages/welcome screen';\r\nimport SignInScreen from './pages/sign-in screen/SignInForm';\r\nimport SignUpScreen from './pages/sign-up screen/SignupForm';\r\nimport CreateProfileScreen from './pages/create-profile-screen';\r\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\r\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\r\nimport { Terms } from './pages/terms/index';\r\nimport { HomeScreen } from './pages/home-screen/home';\r\nimport PostViewScreen from './pages/post-view';\r\nimport EditPostViewScreen from './pages/edit-post';\r\nimport DeletePostViewScreen from './pages/delete-post';\r\nimport HelpandFeedback from './pages/helpandfeedback';\r\nimport SettingsScreen from './pages/settings-screen/SettingsMenu';\r\nimport UserPage from './pages/profile-screen/userPage';\r\nimport SearchScreen from './pages/search-page/index';\r\nimport ExploreScreen from './pages/explore-page/index';\r\n\r\nimport { UploadImage } from './pages/upload-image/index';\r\nimport Accessibility from './pages/accessSetting';\r\nimport Notification from './pages/notificationset';\r\nimport Notificationpg from './pages/notification';\r\nimport Places from './components/Inputs/Places';\r\nimport ViewPoints from './pages/view-points-screen/points';\r\nimport EditProfile from './pages/edit-profile/editProfile';\r\nimport LocationPicker from './components/Inputs/LocationPicker';\r\nimport Camera from './components/Inputs/Camera';\r\nimport ViewFollowers from './pages/followers-page/ViewFollowers';\r\nimport WebCamFun from './pages/camera/index';\r\n// import GTLexpanded from './components/Display/GTLexpanded';\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route exact path=\"/welcome\">\r\n                        <WelcomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-in\">\r\n                        <SignInScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-up\">\r\n                        <SignUpScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/create-profile\">\r\n                        <CreateProfileScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Set-password\">\r\n                        <SetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ReSet-password\">\r\n                        <ReSetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/home\">\r\n                        <HomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/helpnfeedback\">\r\n                        <HelpandFeedback />\r\n                    </Route>\r\n                    <Route exact path=\"/accessibility\">\r\n                        <Accessibility />\r\n                    </Route>\r\n                    <Route exact path=\"/notificationset\">\r\n                        <Notification />\r\n                    </Route>\r\n                    <Route exact path=\"/notification\">\r\n                        <Notificationpg />\r\n                    </Route>\r\n                    <Route exact path=\"/terms\">\r\n                        <Terms />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\">\r\n                        <SettingsScreen />\r\n                    </Route>\r\n                    <Route path=\"/post/:catId\" component={PostViewScreen}></Route>\r\n                    <Route path=\"/editpost/:catId\" component={EditPostViewScreen}></Route>\r\n                    <Route path=\"/deletepost/:catId\" component={DeletePostViewScreen}></Route>\r\n                    <Route path=\"/user/:catId\" component={UserPage}></Route>\r\n                    <Route exact path=\"/upload-image\">\r\n                        <UploadImage />\r\n                    </Route>\r\n                    <Route exact path=\"/search\">\r\n                        <SearchScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ViewPoints\">\r\n                        <ViewPoints />\r\n                    </Route>\r\n                    <Route exact path=\"/EditProfile\">\r\n                        <EditProfile />\r\n                    </Route>\r\n                    <Route exact path=\"/webcam\">\r\n                        <WebCamFun />\r\n                    </Route>\r\n                    <Route exact path=\"/explore\">\r\n                        <ExploreScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Camera\">\r\n                        <Camera />\r\n                    </Route>\r\n                    <Route exact path=\"/ViewFollowers\">\r\n                        <ViewFollowers />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            {/* need to populate the places in this */}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/welcome\">Welcome</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-up\">Sign-Up</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-profile\">Create Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Set-password\">Set new password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ReSet-password\">reset password </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home Screen</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/post\">Post View Screen</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/terms\">Terms and Conditions</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/settings\">Settings</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/helpnfeedback\">Help and Feedback</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ProfilePage\">Profile Page</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/upload-image\">Upload Image</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/accessibility\">Accessibility</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/search\">Search</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/notificationset\">Notifications</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/notification\">NotificationsPage</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ViewPoints\">View points</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/EditProfile\">Edit Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Camera\">camera</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/explore\">Explore</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ViewFollowers\">ViewFollowers</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\theme\\index.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx",["267","268","269","270","271","272"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\nimport { Avatar, IconButton, Toolbar, Box, AppBar, Slide } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport BottomNavigation from '../../components/NavBar/navbar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { auth } from '../../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport AvatarSmall from '../../components/Display/avatarSmall';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any;\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n}\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n    constructor(HomeScreenProps: any) {\r\n        super(HomeScreenProps);\r\n        this.state = {\r\n            posts: [],\r\n            user: {},\r\n            isAuthenticated: false,\r\n            uid: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const auth = checkUserLoggedIn();\r\n        if (auth != undefined) {\r\n            this.getUser().then(\r\n                (user) => {\r\n                    this.setState({ isAuthenticated: true, user: user, uid: auth.uid });\r\n                },\r\n                (error) => {\r\n                    this.setState({ isAuthenticated: true });\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .onSnapshot((snapshot: any) => {\r\n                this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(this.state);\r\n    }\r\n\r\n    // getData = () => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .orderBy('likes_count')\r\n    //         .get()\r\n    //         .then((querySnapshot) => {\r\n    //             querySnapshot.forEach(function () {\r\n    //                 // console.log(doc.id, ' => ', doc.data());\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('Error getting documents: ', err);\r\n    //         });\r\n    // };\r\n\r\n    getUser = () => {\r\n        const auth = checkUserLoggedIn();\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(auth.uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        // this.se\r\n                        if (querySnapshot.data()) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        // console.log(\"hello\");\r\n        if (!this.state.isAuthenticated) return null;\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }}>\r\n                <AppBar position=\"fixed\" style={{ background: '#1b1b1b' }}>\r\n                    <Toolbar style={{ position: 'relative' }}>\r\n                        <Link to=\"/welcome\">\r\n                            <IconButton edge=\"end\" onClick={this.signOut}>\r\n                                <ExitToAppIcon style={{ color: 'white' }} />\r\n                            </IconButton>\r\n                        </Link>\r\n\r\n                        <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                        <AvatarSmall\r\n                            User={this.state.user}\r\n                            uid={this.state.uid}\r\n                            User_name={this.state.user.User_name}\r\n                            Avatar={this.state.user.Avatar}\r\n                            Size=\"small\"\r\n                        />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <SinglePostNew />\r\n                <Feed />\r\n\r\n                <div style={{ padding: '30px' }}></div>\r\n                <BottomNavigation />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\terms\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\explore-page\\index.tsx",["273","274","275","276","277","278","279","280","281"],"import React, { useState, useLayoutEffect, useRef, useEffect } from 'react'\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { Box } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport Button from '@material-ui/core/Button';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport interface SearchProps {}\r\n\r\nexport default function ExploreScreen() {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const firstUpdate = useRef(true);\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 45.4211,\r\n        longitude: -75.6903,\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        zoom: 5\r\n      });\r\n\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return;\r\n        }\r\n    \r\n        // console.log(\"componentDidUpdateFunction\");\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .onSnapshot((snapshot: any) => {\r\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(posts)\r\n      });\r\n\r\n    // useEffect(() => {\r\n        \r\n    // });\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"button\" style={{ float: 'left' }}>\r\n                <ArrowBackRoundedIcon />\r\n            </div>\r\n            <div className=\"image\">\r\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\r\n            </div>\r\n            <div id=\"titleDiv\">\r\n                <Card background=\"#202020\" title=\"Explore\" split={2}>\r\n                <ReactMapGL\r\n                    {...viewport}\r\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n                    mapStyle=\"mapbox://styles/geopick2021/cklr56ufp069x18pss5neglc4\"\r\n                    onViewportChange={(viewport: any) => {\r\n                    setViewport(viewport);\r\n                    }}\r\n                >\r\n                    {posts.map(({id, post}) => (\r\n                        <Marker\r\n                            key={id}\r\n                            latitude={post.coordinates.lat}\r\n                            longitude={post.coordinates.lng}\r\n                        >\r\n                            <Link to={{ pathname: `/post/${id}`, state: post.uid}}>\r\n                                <Avatar alt={post.user_name} src={post.Image} />\r\n                            </Link>\r\n                            \r\n                        </Marker>\r\n                    ))}\r\n\r\n                </ReactMapGL>\r\n                 \r\n                  \r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\search-page\\index.tsx",["282","283","284"],"import React, { useState } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport Button from '@material-ui/core/Button';\r\nimport SinglePostNew1 from '../../components/Display/singlePostNew1';\r\nimport './search.scss';\r\n\r\nexport interface SearchProps {}\r\n\r\nexport default function SearchScreen() {\r\n    const [users, setUsers] = useState(Array());\r\n    const [posts, setPosts] = useState(Array());\r\n    const [userOn, setUserOn] = useState(false);\r\n    const [postOn, setPostOn] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const toggleUser = () => {\r\n        setUserOn(true);\r\n        setPostOn(false);\r\n        firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .where('User_name', '>=', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setUsers(users);\r\n                setPosts([]);\r\n            });\r\n    };\r\n\r\n    const togglePost = () => {\r\n        setUserOn(false);\r\n        setPostOn(true);\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('tags', 'array-contains', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setPosts(posts);\r\n                setUsers([]);\r\n            });\r\n    };\r\n\r\n    const fetchResults = (search: React.ChangeEvent<HTMLInputElement>) => {\r\n        setQuery(search.target.value.toLowerCase());\r\n        if (userOn) {\r\n            toggleUser();\r\n        }\r\n        if (postOn) {\r\n            togglePost();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"button\" style={{ float: 'left' }}>\r\n                <ArrowBackRoundedIcon />\r\n            </div>\r\n            <div className=\"image\">\r\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\r\n            </div>\r\n            <div id=\"titleDiv\">\r\n                <Card background=\"#202020\" title=\"Search\" split={2}>\r\n                    <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Search here...\"\r\n                        onChange={fetchResults}\r\n                    />\r\n                    <br></br>\r\n                    <Box>\r\n                        <Typography variant=\"h5\" style={{ float: 'left', color: '#fafafa' }}>\r\n                            Based on\r\n                        </Typography>\r\n                        <Button variant=\"contained\" className=\"tags-button\" onClick={togglePost}>\r\n                            Tags\r\n                        </Button>\r\n                        <Button variant=\"contained\" className=\"users-button\" onClick={toggleUser}>\r\n                            Users\r\n                        </Button>\r\n                    </Box>\r\n                    <br />\r\n                    <br />\r\n                    {users.length > 0 &&\r\n                        users.map((data) => {\r\n                            // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                    <ProfileOverview\r\n                                        key={data.id}\r\n                                        uid={data.id}\r\n                                        User_name={data.User_name}\r\n                                        Avatar={data.Avatar}\r\n                                        Size=\"small\"\r\n                                        User={data}\r\n                                        followers\r\n                                    />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                    {posts.length > 0 &&\r\n                        posts.map((data) => {\r\n                            // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                    <SinglePostNew1\r\n                                        key={data.id}\r\n                                        id={data.id}\r\n                                        // profileUrl={post.profileUrl}\r\n                                        username={data.user_name}\r\n                                        postPic={data.Image}\r\n                                        uid={data.uid}\r\n                                        // caption={post.caption}\r\n                                        // comments={post.comments}\r\n                                        date={new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                                        likes_count={data.likes_count}\r\n                                        caption={data.caption}\r\n                                        sharedURL={window.location.href}\r\n                                        hidden={false}\r\n                                        comments_count={data.comments_count}\r\n                                    />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx",["285"],"import * as React from 'react';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Component } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './styles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport NotificationImportantRoundedIcon from '@material-ui/icons/NotificationImportantRounded';\r\nimport AccessibilityNewRoundedIcon from '@material-ui/icons/AccessibilityNewRounded';\r\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\r\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface SettingsMenuProps { }\r\nexport interface SettingsMenuState {\r\n    user: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            // backgroundColor: theme.palette.background.paper,\r\n            backgroundColor: '#fafafa',\r\n        },\r\n    }),\r\n);\r\n\r\nconst SettingsMenu = () => {\r\n    const classes = useStyles();\r\n\r\n    // function HomeButton() {\r\n    //     let history = useHistory();\r\n\r\n    function onClick(e: any) {\r\n         e.preventDefault();\r\n        \r\n     }\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%' }}>\r\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n                <ListItem button>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <AccountCircleRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Account Settings\" />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <NotificationImportantRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Notification Settings\" />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <AccessibilityNewRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Accessibility Settings\" />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <HelpRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Help and Feedback\" onClick={e => { history.push(\"/helpnfeedback\") }} />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <GavelRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Terms and Conditions\" />\r\n                </ListItem>\r\n            </List>\r\n            <Box m={5} />\r\n            <div>\r\n                <Typography variant=\"body1\" style={{ color: '#1b1b1b', textAlign: 'center' }}>\r\n                    Designed <span style={{ color: '#f56920' }}>& </span> Developed by<br></br>The Geo\r\n                    <span style={{ color: '#f56920' }}>Pic</span>K team.\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default class SettingsMenuScreen extends Component<SettingsMenuProps, SettingsMenuState> {\r\n    constructor(SettingsMenuProps: any) {\r\n        super(SettingsMenuProps);\r\n        this.state = {\r\n            user: checkUserLoggedIn(),\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n                <Toolbar>\r\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                    <IconButton edge=\"end\">\r\n                        <Avatar alt={this.state.user.User_name} src={this.state.user.Avatar} />\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <div style={{ color: '#fafafa' }}>\r\n                    <Card background=\"#fafafa\" title=\"Settings\" split={1}>\r\n                        <div style={{ color: 'black' }}>\r\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <SettingsMenu />\r\n                            </Grid>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx",["286"],"import { Avatar, Box, Button, Card, CardContent, Divider, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport OccupationSelect from '../../components/Inputs/occupation';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport interface EditProfileProps {}\r\n\r\nexport interface EditProfileState {}\r\n\r\nclass EditProfile extends Component<EditProfileProps, EditProfileState> {\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    handleonclickSubmit() {\r\n        console.log('Profile edit changes!');\r\n    }\r\n    handleonclickChangePassword() {\r\n        console.log('Go to change password screen!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto', paddingBottom: '5em' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        marginBottom: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                        paddingBottom: '1em',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        style={{\r\n                            float: 'right',\r\n                            width: '120px',\r\n                            height: '120px',\r\n                            marginRight: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                    ></Avatar>\r\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                        {/* <Grid container direction=\"column\">\r\n                    <Grid item> */}\r\n\r\n                        <Typography variant=\"h3\" style={{ color: '#fafafa' }}>\r\n                            Hi<br></br>\r\n                            {\r\n                                <Typography variant=\"h4\" style={{ color: '#f56920' }}>\r\n                                    'mo.kvs_'\r\n                                </Typography>\r\n                            }\r\n                            {/* The username comes here */}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <div style={{ margin: '20px', textAlign: 'center' }}>\r\n                        <Box m={2}></Box>\r\n                        <TextField label=\"Name\" color=\"primary\"></TextField>\r\n                        <Box m={2}></Box>\r\n                        <TextField\r\n                            label=\"Something about yourself...\"\r\n                            color=\"primary\"\r\n                            multiline\r\n                            rows={1}\r\n                            rowsMax={4}\r\n                        ></TextField>\r\n                    </div>\r\n                    <Box m={3}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickSubmit}\r\n                        style={{\r\n                            background: '#f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '25px',\r\n                        }}\r\n                    >\r\n                        Submit changes\r\n                    </Button>\r\n\r\n                    <Box m={3}></Box>\r\n                    <Divider style={{ background: '#f56920' }} />\r\n                    <Box m={2}></Box>\r\n                    <Typography variant=\"body2\" style={{ color: '#fafafa' }}>\r\n                        looking for something else?\r\n                    </Typography>\r\n                    <Box m={-1}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickChangePassword}\r\n                        style={{\r\n                            // background: '#f56920',\r\n                            border: '3px solid #f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '5px',\r\n                        }}\r\n                    >\r\n                        Change Password\r\n                    </Button>\r\n                    <br></br>\r\n                    <Box m={-1.5}></Box>\r\n                    <Button\r\n                        style={{\r\n                            background: '#2f4858',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                        onClick={this.signOut}\r\n                    >\r\n                        <Link to=\"/welcome\">\r\n                            <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                                Sign Out\r\n                            </Typography>\r\n                        </Link>\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\view-points-screen\\points.tsx",["287","288","289"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { Avatar, Box, Button, Card, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nexport interface ViewPointsProps {}\r\n\r\nexport interface ViewPointsState {}\r\n\r\nclass ViewPoints extends React.Component<ViewPointsProps, ViewPointsState> {\r\n    handleonclick() {\r\n        console.log('Share with friends!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', paddingTop: '10px', paddingBottom: '50px' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        height: '80%',\r\n                        width: '30em',\r\n                        maxWidth: '70%',\r\n                        margin: 'auto',\r\n                        padding: '20px',\r\n                        borderRadius: '50px',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        src={'avatar comes here'}\r\n                        alt={'username comes here'}\r\n                        style={{ margin: 'auto', width: '100px', height: '100px', marginBottom: '20px' }}\r\n                    ></Avatar>\r\n                    <Typography variant=\"h5\" style={{ color: '#f56920' }}>\r\n                        {'username comes here'}\r\n                    </Typography>\r\n                    <Box m={5}></Box>\r\n\r\n                    <Typography variant=\"h6\">Congratulations, you have</Typography>\r\n                    <Typography variant=\"h1\" style={{ fontWeight: 'bolder' }}>\r\n                        {'10000'}\r\n                    </Typography>\r\n                    <Box m={-2}></Box>\r\n                    <Typography variant=\"h3\" style={{ color: '#f56920' }}>\r\n                        points\r\n                    </Typography>\r\n                    <Box m={3}></Box>\r\n                </Card>\r\n                <Button\r\n                    onClick={this.handleonclick}\r\n                    style={{\r\n                        background: '#f56920',\r\n                        color: '#fafafa',\r\n                        padding: '10px 20px 10px 20px',\r\n                        margin: 'auto',\r\n                        borderRadius: '20px',\r\n                        marginTop: '20px',\r\n                    }}\r\n                >\r\n                    Share it with your friends\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewPoints;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\camera\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\upload-image\\index.tsx",["290","291"],"import { Card, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './Styles.scss';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Box } from '@material-ui/core';\r\nimport UploadIcon from '../../components/Display/uploadIcon';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Tags from '../../components/Inputs/tags';\r\nimport { auth } from '../../firebase';\r\nimport Compress from 'react-image-file-resizer';\r\nimport { storage } from '../../firebase/firebase';\r\nimport Places from '../../components/Inputs/Places';\r\nexport interface UploadImageProps {}\r\n\r\nexport interface UploadImageState {\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    imgurl: string;\r\n    img: any;\r\n    caption: string;\r\n    tags: any;\r\n    height: number;\r\n    width: number;\r\n    rawurl: string;\r\n    location: any;\r\n    check: boolean;\r\n    coordinates: any;\r\n}\r\n\r\nexport class UploadImage extends Component<UploadImageProps, UploadImageState> {\r\n    constructor(UploadImageProps: any) {\r\n        super(UploadImageProps);\r\n        // firebase.auth().onAuthStateChanged(function(user) {\r\n        //     this.setState({ user: user });\r\n        // });\r\n        this.state = {\r\n            user: {},\r\n            isAuthenticated: false,\r\n            imgurl: '',\r\n            img: {},\r\n            caption: '',\r\n            tags: [],\r\n            height: 0,\r\n            width: 0,\r\n            rawurl: 'https://wallpapercave.com/wp/wp3597484.jpg',\r\n            location: {},\r\n            check: false,\r\n            coordinates: {},\r\n        };\r\n    }\r\n\r\n    selectedTags = (tagses: any) => {\r\n        this.setState({ tags: tagses });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n    }\r\n\r\n    getUser = () => {\r\n        const auth = checkUserLoggedIn();\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(auth.uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        if (data) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        const file = this.state.img;\r\n        const user = auth.checkUserLoggedIn();\r\n        const image = new Image();\r\n        let fr = new FileReader();\r\n\r\n        if (!user) return;\r\n\r\n        if (!this.state.check) {\r\n            alert('You must check the condition');\r\n            return;\r\n        }\r\n        fr.onload = async function () {\r\n            if (fr !== null && typeof fr.result == 'string') {\r\n                image.src = fr.result;\r\n                console.log('in frload');\r\n                console.log('frwidg', image.width);\r\n                console.log('frhigg', image.height);\r\n            }\r\n        };\r\n        fr.readAsDataURL(file);\r\n\r\n        var width = 0;\r\n        var height = 0;\r\n\r\n        image.onload = function () {\r\n            height = image.height;\r\n            width = image.width;\r\n        };\r\n\r\n        setTimeout(() => {\r\n            Compress.imageFileResizer(\r\n                file,\r\n                width,\r\n                height,\r\n                'JPEG',\r\n                50,\r\n                0,\r\n                async (uri: any) => {\r\n                    if (typeof uri === 'string') {\r\n                        const urinew = uri.split('base64,')[1];\r\n                        storage\r\n                            .ref(`/Images/${user.uid}/Posts/${file.name}`)\r\n                            .putString(urinew, 'base64')\r\n                            .then((data) => {\r\n                                data.ref.getDownloadURL().then((url) => {\r\n                                    // this.setState({ imgurl: url });\r\n                                    firebase\r\n                                        .firestore()\r\n                                        .collection('Posts/')\r\n                                        .add({\r\n                                            Image: url,\r\n                                            caption: this.state.caption,\r\n                                            comments: [],\r\n                                            comment_count: 0,\r\n                                            likes_count: 0,\r\n                                            uid: user.uid,\r\n                                            username: this.state.user.User_name,\r\n                                            post_time: new Date(),\r\n                                            tags: this.state.tags,\r\n                                            location: this.state.location,\r\n                                            coordinates: this.state.coordinates,\r\n                                        })\r\n                                        .then(function (docRef) {\r\n                                            console.log('Document written with ID: ', docRef.id);\r\n                                        })\r\n                                        .catch(function (error) {\r\n                                            console.error('Error adding document: ', error);\r\n                                        });\r\n                                });\r\n\r\n                                // console.log(this.state.imgurl);\r\n                            });\r\n                    }\r\n                },\r\n                'base64',\r\n            );\r\n        }, 2500);\r\n\r\n        // push('/home');\r\n        // console.log(postRef.documentID);\r\n    };\r\n\r\n    changeImage = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!event.target.files || !event.target.files[0]) return;\r\n        const file = await event.target.files[0];\r\n        this.setState({ img: file, rawurl: URL.createObjectURL(file) });\r\n\r\n        // console.log(this.state.img);\r\n    };\r\n\r\n    updateCaption = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ caption: event.target.value });\r\n    };\r\n\r\n    updateLocation = (address: string) => {\r\n        this.setState({ location: address });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.location);\r\n    };\r\n\r\n    updateCoordinates = (coordinates: any) => {\r\n        const coord = {\r\n            latitude: coordinates.lat,\r\n            longtitude: coordinates.lng,\r\n        };\r\n        this.setState({ coordinates: coordinates });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.coordinates);\r\n    };\r\n\r\n    toggleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ check: !this.state.check });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', padding: '10px' }}>\r\n                <Typography style={{ color: '#fafafa', fontWeight: 'normal' }} variant=\"h2\">\r\n                    <span style={{ color: '#f56920' }}>Upload</span> Image\r\n                </Typography>\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 900,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        // border: '3px solid #fafafa',\r\n                        borderRadius: '20px',\r\n                        boxShadow: 'inherit',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.user.User_name}\r\n                                src={this.state.user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.user.User_name}</Typography>}\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.rawurl}\r\n                        title={`A Photo by ${this.state.user.User_name}`}\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <Box m={-2} />\r\n                    <CardActions disableSpacing>\r\n                        <UploadIcon onChange={this.changeImage} />\r\n                    </CardActions>\r\n                </Card>\r\n                <CardContent>\r\n                    <TextField\r\n                        name=\"caption\"\r\n                        id=\"caption\"\r\n                        label=\"Enter Caption\"\r\n                        type=\"caption\"\r\n                        onChange={this.updateCaption}\r\n                    />\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Tags selectedTags={this.selectedTags} />\r\n                </CardContent>\r\n                <CardContent>\r\n                    {/* <TextField label=\"Add Location\"> */}\r\n                    <Places updateLocation={this.updateLocation} updateCoordinates={this.updateCoordinates} />\r\n                    {/* </TextField> */}\r\n                    {/* </CardContent>\r\n                    <CardContent> */}\r\n                    <br></br>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{\r\n                            color: '#fafafa',\r\n                            textAlign: 'center',\r\n                            fontWeight: 'lighter',\r\n                            width: '90%',\r\n                            margin: 'auto',\r\n                        }}\r\n                    >\r\n                        <label>\r\n                            <input type=\"checkbox\" name=\"Accept\" required onChange={this.toggleCheck} />\r\n                            By checking this box, you confirm that you are aware of the community guidelines and terms\r\n                            of use. Make sure that this post doesn't contain any human face.\r\n                        </label>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <RegularBtn\r\n                        type=\"submit\"\r\n                        colorType=\"white\"\r\n                        style={{ width: '200px', borderRadius: '15px', margin: 'auto' }}\r\n                        onClick={this.onSubmit}\r\n                    >\r\n                        Upload Post!\r\n                    </RegularBtn>\r\n                </CardActions>\r\n                {/* <Places /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx",["292","293","294","295","296","297","298","299","300"],"import { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport UserFeed1 from '../../components/Layouts/userFeed1';\r\n\r\nimport { auth } from '../../firebase';\r\nexport interface UserPageProps {}\r\n\r\nexport interface UserPageState {\r\n    posts: any;\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n}\r\n\r\nclass UserPage extends Component<UserPageProps, UserPageState> {\r\n    constructor(UserPageProps: any) {\r\n        super(UserPageProps);\r\n        this.state = {\r\n            posts: [],\r\n            user: {},\r\n            isAuthenticated: false,\r\n            uid: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, user: user, uid: uid });\r\n                console.log(this.state.user);\r\n                console.log(this.state.uid);\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n\r\n    //     const auth = checkUserLoggedIn();\r\n    //     if(auth != undefined){\r\n\r\n    //     }\r\n\r\n    // }\r\n\r\n    // getData = () => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .orderBy('likes_count')\r\n    //         .get()\r\n    //         .then((querySnapshot) => {\r\n    //             querySnapshot.forEach(function () {\r\n    //                 // console.log(doc.id, ' => ', doc.data());\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('Error getting documents: ', err);\r\n    //         });\r\n    // };\r\n\r\n    getUser = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        const id = querySnapshot.id;\r\n                        if (data) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <ProfileOverview\r\n                    User={this.state.user}\r\n                    User_name={<span style={{ fontSize: 'calc(12px + 2vw)' }}>{this.state.user.User_name}</span>}\r\n                    Avatar={this.state.user.Avatar}\r\n                    Size=\"large\"\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                <Button\r\n                    style={{\r\n                        paddingLeft: '15%',\r\n                        paddingRight: '15%',\r\n                        background: '#f56920',\r\n                        borderRadius: '20px',\r\n                        marginRight: '10%',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                        Edit Profile\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                        paddingLeft: '5%',\r\n                        paddingRight: '5%',\r\n                    }}\r\n                    onClick={this.signOut}\r\n                >\r\n                    <Link to=\"/welcome\">\r\n                        <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                            Sign Out\r\n                        </Typography>\r\n                    </Link>\r\n                </Button>\r\n                <div style={{ margin: 'auto' }}>\r\n                    <Typography variant=\"h4\" style={{ color: '#fafafa', paddingTop: '25px' }}>\r\n                        My <span style={{ color: '#f56920' }}>Posts</span>\r\n                    </Typography>\r\n                </div>\r\n                <UserFeed1 uid={this.state.uid} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\followers-page\\ViewFollowers.tsx",["301"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Box } from '@material-ui/core';\r\nimport CustomTab from './CustomTab';\r\nimport WhiteLogo from '../../pages/welcome screen/WhiteLogo.svg';\r\nexport interface ViewFollowersProps {}\r\n\r\nexport interface ViewFollowersState {}\r\n\r\nclass ViewFollowers extends React.Component<ViewFollowersProps, ViewFollowersState> {\r\n    render() {\r\n        return (\r\n            <Box style={{ background: '#1b1b1b' }}>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                <span style={{ color: '#fafafa' }}>\r\n                    <Card background=\"#202020\" title=\"Fellow GeoPicKers\" split={1}>\r\n                        <CustomTab />\r\n                    </Card>\r\n                </span>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewFollowers;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Camera.tsx",["302","303","304","305"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCameraRoundedIcon from \"@material-ui/icons/PhotoCameraRounded\";const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    textAlign: 'center',\r\n  },\r\n  imgBox: {\r\n    maxWidth: \"80%\",\r\n    maxHeight: \"80%\",\r\n    margin: \"10px\"\r\n  },\r\n  img: {\r\n    height: \"inherit\",\r\n    maxWidth: \"inherit\",\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));function Camera() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <h5>Capture your image</h5>\r\n          {/* {source &&\r\n            <Box display=\"flex\" justifyContent=\"center\" border={1} className={classes.imgBox}>\r\n              <img src={source} alt={\"snap\"} className={classes.img}></img>\r\n            </Box>}\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            capture=\"environment\"\r\n            // onChange={(e) => handleCapture(e.target)}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCameraRoundedIcon fontSize=\"large\" color=\"primary\" />\r\n            </IconButton>\r\n          </label> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default Camera;","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",["306"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\welcome screen\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\delete-post\\index.tsx",["307","308","309","310"],"/* eslint-disable no-lone-blocks */\r\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\nimport { Component } from 'react';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SharePost from '../../components/Display/sharePost';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface DeletePostViewState {\r\n    newComment: string;\r\n    user: any;\r\n    Image: string;\r\n    caption: string;\r\n    likes_count: number;\r\n    post_time: string;\r\n    user_name: string;\r\n    favourited: boolean;\r\n    post_uid: string;\r\n    post_user: any;\r\n    comments: any;\r\n}\r\n\r\nexport interface DeletePostViewProps {\r\n    state: string;\r\n}\r\n\r\nexport default class DeletePostViewScreen extends Component<DeletePostViewProps, DeletePostViewState> {\r\n    constructor(PostViewProps: any) {\r\n        super(PostViewProps);\r\n        this.state = {\r\n            favourited: false,\r\n            user: {},\r\n            Image: '',\r\n            caption: '',\r\n            likes_count: 0,\r\n            post_time: '',\r\n            user_name: '',\r\n            newComment: '',\r\n            post_uid: '',\r\n            post_user: {},\r\n            comments: [],\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        const auth = checkUserLoggedIn();\r\n        // console.log(pid);\r\n        if (auth === undefined) {\r\n        } else {\r\n            fb.firestore()\r\n                .collection('users')\r\n                .doc(auth.uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    // console.log(data);\r\n                    this.setState({\r\n                        user: data,\r\n                    });\r\n                });\r\n        }\r\n\r\n        await fb\r\n            .firestore()\r\n            .collection('Posts')\r\n            .doc(pid)\r\n            .get()\r\n            .then((doc) => {\r\n                // console.log(doc.data());\r\n                const data = doc.data();\r\n                if (data) {\r\n                    this.setState({\r\n                        Image: data.Image,\r\n                        caption: data.caption,\r\n                        likes_count: data.likes_count,\r\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\r\n                        user_name: data.user_name,\r\n                        post_uid: data.uid,\r\n                        comments: data.comments,\r\n                    });\r\n                }\r\n            });\r\n\r\n        console.log(this.state.post_uid);\r\n        fb.firestore()\r\n            .collection('users')\r\n            .doc(this.state.post_uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            favourited: false,\r\n        });\r\n    }\r\n\r\n    handleColorChange = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: increment,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count + 1,\r\n            });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: decrement,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count - 1,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n\r\n        const deletepost = (event: any) => {\r\n            fb.firestore().collection('Posts').doc(pid).delete().then(() => {\r\n                console.log(\"post deleted successfully\" + pid);\r\n            }).catch((err) => {\r\n                console.log(\"error:\",err)\r\n            })\r\n        };\r\n\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: 'auto',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 800,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        color=\"#fafafa\"\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.post_user.User_name}\r\n                                src={this.state.post_user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.post_user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                        subheader={\r\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        }\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.Image}\r\n                        title=\"Paella dish\"\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\r\n                            {this.state.caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <SharePost sharedURL={window.location.href} />\r\n                        </IconButton>\r\n                        {/* <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton> */}\r\n                    </CardActions>\r\n                </Card>\r\n               \r\n            \r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                <Link to={{ pathname: `/user/${this.state.post_uid}`, state: this.state.post_uid }}>\r\n\r\n                    <RegularBtn onClick={deletepost} type=\"submit\" colorType=\"orange\" style={{ width: '40%', borderRadius: '15px' }}>\r\n                        delete post\r\n                    </RegularBtn>\r\n                </Link>\r\n                </Grid>\r\n           \r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\accessSetting\\index.tsx",["311","312","313","314","315","316","317","318","319"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface AccessibilityProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Accessibility() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Accessibility Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Dark Mode\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Change to mono colors\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedB}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedB\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Increase overall text size\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedC}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedC\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\post-view\\index.tsx",["320"],"/* eslint-disable no-lone-blocks */\r\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\nimport { Component } from 'react';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SharePost from '../../components/Display/sharePost';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport interface PostViewState {\r\n    newComment: string;\r\n    user: any;\r\n    Image: string;\r\n    caption: string;\r\n    likes_count: number;\r\n    post_time: string;\r\n    user_name: string;\r\n    favourited: boolean;\r\n    post_uid: string;\r\n    post_user: any;\r\n    comments: any;\r\n}\r\n\r\nexport interface PostViewProps {\r\n    state: string;\r\n}\r\n\r\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\r\n    constructor(PostViewProps: any) {\r\n        super(PostViewProps);\r\n        this.state = {\r\n            favourited: false,\r\n            user: {},\r\n            Image: '',\r\n            caption: '',\r\n            likes_count: 0,\r\n            post_time: '',\r\n            user_name: '',\r\n            newComment: '',\r\n            post_uid: '',\r\n            post_user: {},\r\n            comments: [],\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        const auth = checkUserLoggedIn();\r\n        // console.log(pid);\r\n        if (auth === undefined) {\r\n        } else {\r\n            fb.firestore()\r\n                .collection('users')\r\n                .doc(auth.uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    // console.log(data);\r\n                    this.setState({\r\n                        user: data,\r\n                    });\r\n                });\r\n        }\r\n\r\n        await fb\r\n            .firestore()\r\n            .collection('Posts')\r\n            .doc(pid)\r\n            .get()\r\n            .then((doc) => {\r\n                // console.log(doc.data());\r\n                const data = doc.data();\r\n                if (data) {\r\n                    this.setState({\r\n                        Image: data.Image,\r\n                        caption: data.caption,\r\n                        likes_count: data.likes_count,\r\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\r\n                        user_name: data.user_name,\r\n                        post_uid: data.uid,\r\n                        comments: data.comments,\r\n                    });\r\n                }\r\n            });\r\n\r\n        console.log(this.state.post_uid);\r\n        fb.firestore()\r\n            .collection('users')\r\n            .doc(this.state.post_uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            favourited: false,\r\n        });\r\n    }\r\n\r\n    handleColorChange = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: increment,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count + 1,\r\n            });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: decrement,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count - 1,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        // console.log(uid);\r\n        const handleChange = (event: any) => {\r\n            // console.log(event.target.value);\r\n            this.setState({\r\n                newComment: event.target.value as string,\r\n                // user: checkUserLoggedIn(),\r\n            });\r\n        };\r\n\r\n        const handleClick = (event: any) => {\r\n            const FieldValue = fb.firestore.FieldValue;\r\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\r\n            fb.firestore()\r\n                .collection('Posts')\r\n                .doc(pid)\r\n                .update({\r\n                    comments: FieldValue.arrayUnion(comment),\r\n                    comments_count: fb.firestore.FieldValue.increment(1),\r\n                });\r\n            // console.log(`${this.state.user.User_name} : ${comment}`);\r\n            // console.log(this.state.user);\r\n            this.setState({\r\n                comments: [...this.state.comments, comment],\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: 'auto',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 800,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        color=\"#fafafa\"\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.post_user.User_name}\r\n                                src={this.state.post_user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.post_user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                        subheader={\r\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        }\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.Image}\r\n                        title=\"Paella dish\"\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\r\n                            {this.state.caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <SharePost sharedURL={window.location.href} />\r\n                        </IconButton>\r\n                        {/* <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton> */}\r\n                    </CardActions>\r\n                </Card>\r\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\r\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\r\n                            Latest comments\r\n                        </Typography>\r\n                        <ul>\r\n                            {this.state.comments.map((val: string, index: any) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\r\n                                            {val}\r\n                                        </Typography>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </Grid>\r\n                </Grid>\r\n                <InputBase\r\n                    onChange={handleChange}\r\n                    placeholder=\"Start typing...\"\r\n                    style={{\r\n                        width: '80%',\r\n                        // marginRight: '-12%',\r\n                        margin: 'auto',\r\n                        marginTop: '20px',\r\n                        marginBottom: '20px',\r\n                        textDecorationColor: '#FAFAFA',\r\n                        border: '1px solid #FAFAFA',\r\n                        borderRadius: '10px',\r\n                        height: '50px',\r\n                        padding: '10px',\r\n                        color: '#fafafa',\r\n                    }}\r\n                    endAdornment={\r\n                        <IconButton\r\n                            onClick={handleClick}\r\n                            aria-label=\"upload\"\r\n                            type=\"submit\"\r\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\r\n                        >\r\n                            <PublishRoundedIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                    <Grid\r\n                        item\r\n                        justify=\"flex-start\"\r\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\r\n                    >\r\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\r\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\r\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_user.User_name}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\r\n                        <Card\r\n                            style={{\r\n                                color: '#F56920',\r\n                                borderRadius: '22px',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            className=\"boxField\"\r\n                        >\r\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Container>\r\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\r\n                            <img\r\n                                src={this.state.Image}\r\n                                alt=\"not loading...\"\r\n                                // width= \"80%\"\r\n                                width=\"600px\"\r\n                                height=\"500px\"\r\n                                className=\"postImage\"\r\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\r\n                            ></img>\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <span>{this.state.caption}</span>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {this.state.likes_count}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <SharePost sharedURL={window.location.href} />\r\n                    </Grid>\r\n                </Grid> */\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notificationset\\index.tsx",["321","322","323","324","325","326","327","328","329"],"import * as React from 'react';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface NotificationProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Notification() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Notification Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        {/* <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\"> */}\r\n                        <WhiteTypography>\r\n                            Push notification\r\n                            <Box m={-3.7}></Box>\r\n                            <FormGroup style={{ float: 'right' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                />\r\n                            </FormGroup>\r\n                        </WhiteTypography>\r\n                        {/* </Grid> */}\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notification\\index.tsx",["330","331","332","333","334","335","336","337","338","339"],"import * as React from 'react';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport firebase from 'firebase';\r\n\r\n\r\nexport interface NotificationpgProps {}\r\n\r\n// const messaging = firebase.messaging();\r\n// messaging.getToken({vapidKey: \"BGq2mYMBmZEK69shlrMOA7v1mA_9thyQurJuVIm1R2mjMNpajXA8hzXUoGDIurEhg3Nt9otTE-Y647Fh3W_lC6Q\"});\r\n\r\n// messaging.getToken({ vapidKey: 'BGq2mYMBmZEK69shlrMOA7v1mA_9thyQurJuVIm1R2mjMNpajXA8hzXUoGDIurEhg3Nt9otTE-Y647Fh3W_lC6Q' }).then((currentToken) => {\r\n//     if (currentToken) {\r\n//       // Send the token to your server and update the UI if necessary\r\n//       // ...\r\n//     } else {\r\n//       // Show permission request UI\r\n//       console.log('No registration token available. Request permission to generate one.');\r\n//       // ...\r\n//     }\r\n//   }).catch((err) => {\r\n//     console.log('An error occurred while retrieving token. ', err);\r\n//     // ...\r\n//   });\r\n\r\nexport default function Notificationpg() {\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                        <Card background=\"#202020\" title=\"Notification\" split={1}></Card>\r\n            </div>\r\n        </div>\r\n            )\r\n}","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-post\\index.tsx",["340","341","342","343","344","345","346"],"/* eslint-disable no-lone-blocks */\r\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\nimport { Component } from 'react';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SharePost from '../../components/Display/sharePost';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Tags from '../../components/Inputs/tags';\r\nimport Places from '../../components/Inputs/Places';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport interface EditPostViewState {\r\n    newComment: string;\r\n    user: any;\r\n    Image: string;\r\n    caption: string;\r\n    likes_count: number;\r\n    post_time: string;\r\n    user_name: string;\r\n    favourited: boolean;\r\n    post_uid: string;\r\n    post_user: any;\r\n    comments: any;\r\n    tags: any;\r\n    location: any;\r\n    coordinates: any;\r\n}\r\n\r\nexport interface EditPostViewProps {\r\n    state: string;\r\n}\r\n\r\nexport default class PostViewScreen extends Component<EditPostViewProps, EditPostViewState> {\r\n    constructor(PostViewProps: any) {\r\n        super(PostViewProps);\r\n        this.state = {\r\n            favourited: false,\r\n            location: {},\r\n            user: {},\r\n            Image: '',\r\n            caption: '',\r\n            likes_count: 0,\r\n            post_time: '',\r\n            user_name: '',\r\n            newComment: '',\r\n            post_uid: '',\r\n            post_user: {},\r\n            comments: [],\r\n            tags: [],\r\n            coordinates:{},\r\n        };\r\n    }\r\n\r\n    updateCaption = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ caption: event.target.value });\r\n    };\r\n\r\n    selectedTags = (tagses: any) => {\r\n        this.setState(prevState => ({\r\n            tags: prevState.tags.concat(tagses)\r\n        }));\r\n    };\r\n\r\n    updateLocation = (address: string) => {\r\n        this.setState({ location: address });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.location);\r\n    };\r\n\r\n    updateCoordinates = (coordinates: any) => {\r\n        const coord = {\r\n            latitude: coordinates.lat,\r\n            longtitude: coordinates.lng,\r\n        };\r\n        this.setState({ coordinates: coordinates });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.coordinates);\r\n    };\r\n\r\n \r\n    async componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        const auth = checkUserLoggedIn();\r\n        // console.log(pid);\r\n        if (auth === undefined) {\r\n        } else {\r\n            fb.firestore()\r\n                .collection('users')\r\n                .doc(auth.uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    // console.log(data);\r\n                    this.setState({\r\n                        user: data,\r\n                    });\r\n                });\r\n        }\r\n\r\n        await fb\r\n            .firestore()\r\n            .collection('Posts')\r\n            .doc(pid)\r\n            .get()\r\n            .then((doc) => {\r\n                // console.log(doc.data());\r\n                const data = doc.data();\r\n                if (data) {\r\n                    this.setState({\r\n                        Image: data.Image,\r\n                        caption: data.caption,\r\n                        likes_count: data.likes_count,\r\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\r\n                        user_name: data.user_name,\r\n                        post_uid: data.uid,\r\n                        comments: data.comments,\r\n                        tags: data.tags,\r\n                        coordinates: data.coordinates,\r\n                        location: data.location,\r\n                    });\r\n                }\r\n            });\r\n\r\n             \r\n        \r\n        console.log(this.state.post_uid);\r\n        fb.firestore()\r\n            .collection('users')\r\n            .doc(this.state.post_uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            favourited: false,\r\n        });\r\n    }\r\n\r\n    // handleColorChange = () => {\r\n    //     const path = window.location.pathname.split('/');\r\n    //     const pid = path[path.length - 1];\r\n    //     this.setState({\r\n    //         favourited: !this.state.favourited,\r\n    //     });\r\n\r\n    //     const increment = fb.firestore.FieldValue.increment(1);\r\n    //     const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n    //     if (this.state.favourited === false) {\r\n    //         fb.firestore().collection('Posts').doc(pid).update({\r\n    //             likes_count: increment,\r\n    //         });\r\n    //         this.setState({\r\n    //             likes_count: this.state.likes_count + 1,\r\n    //         });\r\n    //     } else {\r\n    //         fb.firestore().collection('Posts').doc(pid).update({\r\n    //             likes_count: decrement,\r\n    //         });\r\n    //         this.setState({\r\n    //             likes_count: this.state.likes_count - 1,\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    handleSubmit = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n\r\n        fb.firestore().collection('Posts').doc(pid).update({\r\n            tags: this.state.tags,\r\n            location: this.state.location,\r\n            coordinates: this.state.coordinates,\r\n            caption: this.state.caption,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        // console.log(uid);\r\n        const handleChange = (event: any) => {\r\n            // console.log(event.target.value);\r\n            this.setState({\r\n                newComment: event.target.value as string,\r\n                // user: checkUserLoggedIn(),\r\n            });\r\n        };\r\n\r\n        const handleClick = (event: any) => {\r\n            /*const FieldValue = fb.firestore.FieldValue;\r\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\r\n            fb.firestore()\r\n                .collection('Posts')\r\n                .doc(pid)\r\n                .update({\r\n                    comments: FieldValue.arrayUnion(comment),\r\n                    comments_count: fb.firestore.FieldValue.increment(1),\r\n                });\r\n            // console.log(`${this.state.user.User_name} : ${comment}`);\r\n            // console.log(this.state.user);\r\n            this.setState({\r\n                comments: [...this.state.comments, comment],\r\n            });*/\r\n        };\r\n        \r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: 'auto',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 800,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        color=\"#fafafa\"\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.post_user.User_name}\r\n                                src={this.state.post_user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.post_user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                        subheader={\r\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        }\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.Image}\r\n                        title=\"Paella dish\"\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\r\n                            {this.state.caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <SharePost sharedURL={window.location.href} />\r\n                        </IconButton>\r\n                        {/* <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton> */}\r\n                    </CardActions>\r\n                </Card>\r\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\r\n\r\n                <TextField\r\n                        name=\"caption\"\r\n                        id=\"caption\"\r\n                        label=\"Edit Caption\"\r\n                        type=\"caption\"\r\n                        onChange={this.updateCaption}\r\n                    />\r\n                    <br></br>\r\n              <Tags selectedTags={this.selectedTags} />\r\n<br></br>\r\n              <Places updateLocation={this.updateLocation} updateCoordinates={this.updateCoordinates} />\r\n             <br></br>\r\n             <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                <Link to={{ pathname: `/user/${this.state.post_uid}`, state: this.state.post_uid }}>\r\n                    <RegularBtn \r\n                    onClick={this.handleSubmit}\r\n                     type=\"submit\" colorType=\"orange\" style={{ width: '40%', borderRadius: '15px' }}>\r\n                        Edit Post\r\n                    </RegularBtn>\r\n                </Link>\r\n                </Grid>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\auth.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\TextField.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\tags.tsx",["347","348","349","350"],"import React from 'react';\r\nimport './tags.scss';\r\nimport Textfield from './TextField';\r\n\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles, Chip, Typography } from '@material-ui/core';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\nconst Tags = (props: any) => {\r\n    const [tags, setTags] = React.useState(Array());\r\n\r\n    // if(props.alreadyTags){\r\n    //     setTags(props.alreadyTags);\r\n    // } \r\n\r\n    const addTags = (event: any) => {\r\n        if (event.key === 'Enter' && event.target.value !== '') {\r\n            setTags([...tags, event.target.value.toLowerCase()]);\r\n            props.selectedTags([...tags, event.target.value.toLowerCase()]);\r\n            event.target.value = '';\r\n        }\r\n    };\r\n    const removeTags = (index: any) => {\r\n        setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\r\n    };\r\n    return (\r\n        <>\r\n            {/* <label htmlFor=\"tags-input\"> */}\r\n            <Textfield\r\n                // variant=\"filled\"\r\n                // fullWidth\r\n                // className=\"tags-input\"\r\n                label=\"Add tags\"\r\n                onKeyUp={(event) => addTags(event)}\r\n            />\r\n            {/* </label> */}\r\n            <div className=\"tags-input\">\r\n                <ul id=\"tags\">\r\n                    <Typography variant=\"h6\" style={{ color: '#fafafa', marginRight: '5px', fontSize: '20px' }}>\r\n                        Selected\r\n                        <span style={{ color: '#f56920' }}> tags:</span>\r\n                    </Typography>\r\n                    {tags.map((tag, index) => (\r\n                        <li key={index} className=\"tag\">\r\n                            {/* <span className=\"tag-title\">{tag}</span>\r\n                        <span className=\"tag-close-icon\" onClick={() => removeTags(index)}>\r\n                            x\r\n                        </span> */}\r\n                            <Chip\r\n                                label={tag}\r\n                                onDelete={() => removeTags(index)}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                style={{ color: '#fafafa' }}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {/* <input type=\"text\" id=\"tags-input\" style={{ display: 'none' }} placeholder=\"Press enter to add tags\" /> */}\r\n        </>\r\n    );\r\n};\r\nexport default Tags;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Places.tsx",["351","352"],"import React, { useEffect } from 'react';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport TextField from './TextField';\r\nimport './Places.scss';\r\n\r\nexport default function Places(props: any) {\r\n    const [address, setAddress] = React.useState('');\r\n    const [coordinates, setCoordinates] = React.useState({\r\n        lat: null,\r\n        lng: null,\r\n    });\r\n\r\n    console.log(coordinates);\r\n    console.log(address);\r\n\r\n    const handleSelect = async (value: any) => {\r\n        geocodeByAddress(value)\r\n            .then((results) => getLatLng(results[0]))\r\n            .then((latLng) => props.updateCoordinates(latLng))\r\n            .catch((error) => console.error('Error', error));\r\n        setAddress(value);\r\n        props.updateLocation(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <TextField {...getInputProps({ placeholder: 'Add Location', className: 'search' })} />\r\n\r\n                        <div>\r\n                            {loading ? <div>...loading</div> : null}\r\n\r\n                            {suggestions.map((suggestion) => {\r\n                                const style = {\r\n                                    backgroundColor: suggestion.active ? '#f56920' : '#F59158',\r\n                                };\r\n\r\n                                return (\r\n                                    <div className=\"suggestion\" {...getSuggestionItemProps(suggestion, { style })}>\r\n                                        <i className=\"material-icons\">add_location</i>\r\n                                        {suggestion.description}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\uploadIcon.tsx",["353","354","355","356","357","358"],"import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\r\nimport Camera from '../Inputs/Camera';\r\n\r\nimport UploadPic from './uploadPic';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // transform: 'translateZ(0px)',\r\n            flexGrow: 1,\r\n            backgroundColor: 'transparent',\r\n        },\r\n        speedDial: {\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n            '&.MuiFab-primary': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n        options: {\r\n            width: '80px',\r\n            height: '40px',\r\n            textSizeAdjust: 'auto',\r\n            fontSize: '0.7em',\r\n            borderRadius: '0%',\r\n        },\r\n        fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n        transform: 'translate(0em, -6em)',\r\n\r\n        },\r\n         input: {\r\n        display: 'none',\r\n    },\r\n    }),\r\n);\r\n\r\nexport default function UploadIcon(props: any) {\r\n    const classes = useStyles();\r\n    const [direction] = React.useState<SpeedDialProps['direction']>('up');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden] = React.useState(false);\r\n\r\n    const actions = [\r\n        { icon: <p>Select From Gallery</p>, name: 'gallery' },\r\n        { icon: <p>Take a photo</p>, name: 'camera' },\r\n    ];\r\n\r\n    const [source, setSource] = useState(\"\");\r\n    const handleCapture = (target: any) => {\r\n        if (target.files) {\r\n        if (target.files.length !== 0) {\r\n            const file = target.files[0];\r\n            const newUrl = URL.createObjectURL(file); \r\n            setSource(newUrl);\r\n        }\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        //   <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n            className={classes.fabButton}\r\n            ariaLabel=\"SpeedDial example\"\r\n            // className={classes.speedDial}\r\n            hidden={hidden}\r\n            icon={\r\n                <Fab color=\"secondary\" aria-label=\"add\" >\r\n                    <CameraAltRoundedIcon />\r\n                </Fab>\r\n            }\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            open={open}\r\n            direction={direction}\r\n        >\r\n            <SpeedDialAction\r\n                key=\"gallery\"\r\n                className={classes.options}\r\n                icon={<div>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.options} color=\"inherit\" aria-label=\"upload picture\" component=\"span\" > Select From Gallery </IconButton>\r\n                        </label>\r\n                        </div>}\r\n                tooltipTitle=\"gallery\"\r\n                onClick={handleClose}\r\n            />\r\n            <SpeedDialAction\r\n                key=\"camera\"\r\n                className={classes.options}\r\n                icon={<div>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"direct-button-file\" type=\"file\" capture=\"environment\" onChange={props.onChange}/>\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"upload camera\"\r\n                            component=\"span\"\r\n                            className={classes.options}\r\n                            >\r\n                            Take A Photo\r\n                            </IconButton>\r\n                        </label>\r\n                    </div>\r\n                  }\r\n                tooltipTitle=\"camera\"\r\n                onClick={handleClose}\r\n            />\r\n        </SpeedDial>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\followers-page\\CustomTab.tsx",["359","360","361","362","363","364"],"import React, { useState } from 'react';\r\n// import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport firebase from 'firebase';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    dir?: string;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        // width: auto,\r\n    },\r\n}));\r\n\r\nexport default function FullWidthTabs() {\r\n    const [users, setUsers] = useState(Array());\r\n    const [posts, setPosts] = useState(Array());\r\n    const [userOn, setUserOn] = useState(false);\r\n    const [postOn, setPostOn] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const toggleUser = () => {\r\n        setUserOn(true);\r\n        setPostOn(false);\r\n        firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .where('User_name', '>=', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setUsers(users);\r\n                setPosts([]);\r\n            });\r\n    };\r\n\r\n    const togglePost = () => {\r\n        setUserOn(false);\r\n        setPostOn(true);\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('tags', 'array-contains', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setPosts(posts);\r\n                setUsers([]);\r\n            });\r\n    };\r\n\r\n    const fetchResults = (search: React.ChangeEvent<HTMLInputElement>) => {\r\n        setQuery(search.target.value.toLowerCase());\r\n        if (userOn) {\r\n            toggleUser();\r\n        }\r\n        if (postOn) {\r\n            togglePost();\r\n        }\r\n    };\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index: number) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"relative\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Followers\" {...a11yProps(0)} />\r\n                    <Tab label=\"Following\" {...a11yProps(1)} />\r\n                    {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            {/* <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            > */}\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n                {users.length > 0 &&\r\n                    users.map((data) => {\r\n                        // console.log(data);\r\n                        <ProfileOverview\r\n                            key={data.id}\r\n                            uid={data.id}\r\n                            User_name={data.User_name}\r\n                            Avatar={data.Avatar}\r\n                            Size=\"small\"\r\n                            User={data}\r\n                            followers\r\n                        />;\r\n                    })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n                Item Two\r\n            </TabPanel>\r\n            {/* </SwipeableViews> */}\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\index.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\sharePost.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\profileOverview.tsx",["365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAvatar from './AddAvatar.png';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport AvatarSmall from '../../components/Display/avatarSmall';\r\nimport { truncate } from 'fs';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport { auth } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nexport default function ProfileOverview(props: any) {\r\n    const [user, setUser] = useState(auth.checkUserLoggedIn());\r\n    useEffect(() => {\r\n        const authU = auth.checkUserLoggedIn();\r\n        if (authU != undefined) {\r\n            setUser(authU);\r\n        }\r\n    });\r\n\r\n    const Followers = () => {\r\n        const [Follow, setFollow] = useState(false);\r\n        const [color, setColor] = useState(false);\r\n        if (!user) return null;\r\n        const FollowingCheck = fb\r\n            .firestore()\r\n            .collection('users/')\r\n            .doc(`${user.uid}/`)\r\n            .collection('Following')\r\n            .doc(`${props.uid}/`)\r\n            .get();\r\n\r\n        if (FollowingCheck == null) {\r\n            setFollow(false);\r\n        } else {\r\n            setFollow(true);\r\n        }\r\n\r\n        const FollowUpdate = () => {\r\n            if (!user) return;\r\n            setFollow(!Follow);\r\n\r\n            const increment = fb.firestore.FieldValue.increment(1);\r\n            const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n            if (Follow == true) {\r\n                fb.firestore()\r\n                    .collection('users/')\r\n                    .doc(`${user.uid}/`)\r\n                    .collection('Following')\r\n                    .doc(`${props.uid}/`)\r\n                    .update({\r\n                        UserId: props.uid,\r\n                    });\r\n\r\n                fb.firestore()\r\n                    .collection('users/')\r\n                    .doc(`${props.uid}/`)\r\n                    .collection('Followers')\r\n                    .doc(`${user.uid}/`)\r\n                    .update({\r\n                        UserId: user.uid,\r\n                    });\r\n\r\n                fb.firestore().collection('users/').doc(`${user.uid}/`).update({\r\n                    Following: increment,\r\n                });\r\n\r\n                fb.firestore().collection('users/').doc(`${props.uid}/`).update({\r\n                    Followers: increment,\r\n                });\r\n            } else {\r\n                fb.firestore()\r\n                    .collection('users/')\r\n                    .doc(`${user.uid}/`)\r\n                    .collection('Following')\r\n                    .doc(`${props.uid}/`)\r\n                    .delete();\r\n                fb.firestore()\r\n                    .collection('users/')\r\n                    .doc(`${props.uid}/`)\r\n                    .collection('Followers')\r\n                    .doc(`${user.uid}/`)\r\n                    .delete();\r\n\r\n                fb.firestore().collection('users/').doc(`${user.uid}/`).update({\r\n                    Following: decrement,\r\n                });\r\n\r\n                fb.firestore().collection('users/').doc(`${props.uid}/`).update({\r\n                    Followers: decrement,\r\n                });\r\n            }\r\n        };\r\n\r\n        // const [Follow, setFollowed] = useState('Follow');\r\n\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                // style={{\r\n                //     padding: '5px 10px 5px 10px',\r\n                //     marginRight: '5px',\r\n                //     borderRadius: '20px',\r\n                //     float: 'right',\r\n                //     background: '#f56920',\r\n                //     color: '#fafafa',\r\n                // }}\r\n                style={\r\n                    !color\r\n                        ? {\r\n                              padding: '5px 10px 5px 10px',\r\n                              marginRight: '5px',\r\n                              borderRadius: '20px',\r\n                              float: 'right',\r\n                              background: '#f56920',\r\n                              color: '#fafafa',\r\n                          }\r\n                        : {\r\n                              padding: '5px 10px 5px 10px',\r\n                              marginRight: '5px',\r\n                              borderRadius: '20px',\r\n                              float: 'right',\r\n                              background: '#fafafa',\r\n                              color: '#f56920',\r\n                          }\r\n                }\r\n                onClick={() => FollowUpdate()}\r\n                onClickCapture={() => setColor(!color)}\r\n            >\r\n                {Follow ? <div>Following</div> : <div>Follow</div>}\r\n            </Button>\r\n        );\r\n    };\r\n\r\n    // const classes = useStyles();\r\n    if (props.followers === true) {\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    marginLeft: '15px',\r\n                    marginRight: '15px',\r\n                    border: '3px solid #f56920',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                    {/* <Grid container direction=\"column\">\r\n                                <Grid item> */}\r\n                    {/* <Avatar\r\n                                style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\r\n                            ></Avatar> */}\r\n                    <Grid style={{ float: 'right' }}>\r\n                        <AvatarSmall\r\n                            uid={props.uid}\r\n                            User_name={props.User_name}\r\n                            Avatar={props.Avatar}\r\n                            Size={props.Size}\r\n                        />\r\n                    </Grid>\r\n                    <Typography style={{ color: '#fafafa', fontSize: 'calc(12px + 2vw)' }}>\r\n                        Hi,<br></br>\r\n                    </Typography>\r\n                    <Typography style={{ color: '#f56920', fontSize: '2vw' }}>{props.User_name}</Typography>\r\n                    {/* </Grid>\r\n                                <Grid item></Grid> */}\r\n                    {/* </Grid> */}\r\n                    <br></br>\r\n                    {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\r\n                                <CardContent> */}\r\n                    <Button style={{ padding: '1px' }}>\r\n                        <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                            <span style={{ color: '#fafafa' }}>2</span>\r\n                            <br></br>\r\n                            <span style={{ color: '#f56920' }}>posts</span>\r\n                        </Typography>\r\n                        {/* Number of posts by user */}\r\n                    </Button>\r\n                    <Button style={{ padding: '1px' }}>\r\n                        <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                            <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\r\n                            <br></br>\r\n                            <span style={{ color: '#f56920' }}>points</span>\r\n                        </Typography>\r\n                        {/* Number of posts by user */}\r\n                    </Button>\r\n                    {/* <Followers /> */}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            style={{\r\n                background: '#1b1b1b',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                border: '3px solid #f56920',\r\n                borderRadius: '20px',\r\n            }}\r\n        >\r\n            <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                {/* <Grid container direction=\"column\">\r\n                            <Grid item> */}\r\n                {/* <Avatar\r\n                            style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\r\n                        ></Avatar> */}\r\n                <Grid style={{ float: 'right' }}>\r\n                    <AvatarSmall uid={props.uid} User_name={props.User_name} Avatar={props.Avatar} Size={props.Size} />\r\n                </Grid>\r\n                <Typography style={{ color: '#fafafa', fontSize: 'calc(12px + 2vw)' }}>\r\n                    Hi,<br></br>\r\n                </Typography>\r\n                <Typography style={{ color: '#f56920', fontSize: '2vw' }}>{props.User_name}</Typography>\r\n                {/* </Grid>\r\n                            <Grid item></Grid> */}\r\n                {/* </Grid> */}\r\n                <br></br>\r\n                {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\r\n                            <CardContent> */}\r\n                <Button style={{ padding: '1px' }}>\r\n                    <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                        <span style={{ color: '#fafafa' }}>2</span>\r\n                        <br></br>\r\n                        <span style={{ color: '#f56920' }}>posts</span>\r\n                    </Typography>\r\n                    {/* Number of posts by user */}\r\n                </Button>\r\n                <Button style={{ padding: '1px' }}>\r\n                    <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                        <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\r\n                        <br></br>\r\n                        <span style={{ color: '#f56920' }}>points</span>\r\n                    </Typography>\r\n                    {/* Number of posts by user */}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\avatarSmall.tsx",["378","379","380","381","382","383","384"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(24),\r\n        height: theme.spacing(24),\r\n    },\r\n}));\r\n\r\nexport default function AvatarSmall(props: any) {\r\n    const [user, setUser] = useState({});\r\n    \r\n    const classes = useStyles();\r\n    if (props.uid != undefined)\r\n    return (\r\n                <Link to={{ pathname: `/user/${props.uid}`, state: props.uid }}>\r\n                <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n                </IconButton>\r\n                </Link>\r\n    );\r\n    else return (\r\n        <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n        </IconButton>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\occupation.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\userFeed1.tsx",["385"],"import * as React from 'react';\r\nimport { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport SinglePostNew1 from '../Display/singlePostNew1';\r\n\r\nexport default function UserFeed1(props: any) {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const firstUpdate = useRef(true);\r\n    \r\n    // loadData = async () => {\r\n    //     const res = await fetch(\"https://api.agify.io/?name=michael\");\r\n    //     setData(await res.json());\r\n      \r\n    // };\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return;\r\n        }\r\n    \r\n        // console.log(\"componentDidUpdateFunction\");\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('uid', '==', props.uid)\r\n            .onSnapshot((snapshot: any) => {\r\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(props.uid)\r\n      });\r\n    //   console.log(props.uid)\r\n    return (\r\n        <div>\r\n            {posts.map(({ id, post }) => {\r\n                return (\r\n                    <SinglePostNew1\r\n                        key={id}\r\n                        id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.user_name}\r\n                        postPic={post.Image}\r\n                        uid={post.uid}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                        likes_count={post.likes_count}\r\n                        caption={post.caption}\r\n                        sharedURL={window.location.href}\r\n                        hidden={false}\r\n                        comments_count={post.comments_count}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew1.tsx",["386","387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport SharePost from './sharePost';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\r\nimport './singlePostStyles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport GuessTheLocationPlay from '../Game/guessPlay';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport GTLexpanded from './GTLexpanded';\r\nimport EditButton from './edit';\r\nimport GTLmenu from '../Game/GTLmenu';\r\n// import randomLocation from 'random-location';\r\n\r\nexport interface SinglePostNewProps {\r\n    username?: string;\r\n    postPic?: string;\r\n    date?: string;\r\n    avatar?: string;\r\n    uid?: string;\r\n    likes_count?: number;\r\n    caption?: string;\r\n    id?: string;\r\n    sharedURL?: string;\r\n    hidden?: boolean;\r\n    comments_count?: number;\r\n    location?: any;\r\n    otherLocs?: any;\r\n}\r\n\r\nexport interface SinglePostNewState {\r\n    favourited: boolean;\r\n    user: any;\r\n    post_user: any;\r\n    open_share: boolean;\r\n    isOpen: boolean;\r\n    path_name: string;\r\n    likes: number | undefined;\r\n    isAuthenticated: boolean;\r\n    // location1: String;\r\n    // location2: String;\r\n    // location3: String;\r\n    // questions: any;\r\n    // displayQuestions: boolean;\r\n    random: any;\r\n    locations: any;\r\n    gotLocs: boolean;\r\n    loc1: string;\r\n    loc2: string;\r\n}\r\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\r\n    constructor(SinglePostNewProps: any) {\r\n        super(SinglePostNewProps);\r\n\r\n        this.state = {\r\n            favourited: false,\r\n            user: checkUserLoggedIn(),\r\n            post_user: {},\r\n            likes: this.props.likes_count,\r\n            open_share: false,\r\n            isOpen: false,\r\n            path_name: `/post/${this.props.id}`,\r\n            isAuthenticated: false,\r\n            gotLocs: false,\r\n            // // questions: [{ location1: 'UAE', location2: 'Russia', location3: 'Algeria' }],\r\n            // questions: { correctLocation: 'Dubai', Location2: 'Sharjah', Location3: 'RAK' },\r\n            // displayQuestions: false,\r\n            random: 1,\r\n            locations: [],\r\n            loc1: '',\r\n            loc2: '',\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleClickRandomizer = this.handleClickRandomizer.bind(this);\r\n        this.getLocations = this.getLocations.bind(this);\r\n        this.randomizeLocations = this.randomizeLocations.bind(this);\r\n        // this.GTLexpanded = this.GTLexpanded.bind(this);\r\n    }\r\n    handleClickRandomizer = () => {\r\n        const min = 1;\r\n        const max = 4;\r\n        const rand = Math.floor(Math.random() * (max - min) + min);\r\n        this.setState({ random: rand });\r\n    };\r\n\r\n    randomizeLocations = (locs: any) => {\r\n        const rand1 = Math.floor(Math.random() * this.state.random);\r\n        const rand2 = Math.floor(Math.random() * this.state.random);\r\n\r\n        // console.log(locs);\r\n        // while((this.state.locations.length == 0));\r\n\r\n        //   return (this.state.locations[rand1])\r\n        this.setState({ loc1: this.state.locations[rand1], loc2: this.state.locations[rand2] });\r\n    };\r\n    handleColorChange = () => {\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            console.log(this.props.id); //undefined\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: increment,\r\n            });\r\n            let like = this.state.likes ? this.state.likes + 1 : 0;\r\n            this.setState({ likes: like });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: decrement,\r\n            });\r\n            let like = this.state.likes ? this.state.likes - 1 : 0;\r\n            this.setState({ likes: like });\r\n        }\r\n    };\r\n    share_area = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, post_user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n\r\n        this.getLocations(this.props.location).then(\r\n            (locs) => {\r\n                this.setState({ gotLocs: true, locations: locs });\r\n                this.randomizeLocations(locs);\r\n            },\r\n            (error) => {\r\n                this.setState({ gotLocs: false });\r\n            },\r\n        );\r\n\r\n        // this.getLocations(this.props.location);\r\n        // const loc = this.props.location\r\n\r\n        // console.log(this.state.locations);\r\n        // const loc = []\r\n\r\n        // console.log(this.state.locations)\r\n    }\r\n\r\n    getLocations = (loc: string) => {\r\n        var locs = new Array();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let locs = new Array();\r\n            const snapshot = firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs.push(doc.data().location);\r\n                        }\r\n                    });\r\n                    resolve(locs);\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs = [...locs, doc.data().location];\r\n                        }\r\n                    });\r\n                });\r\n            if (locs) {\r\n                resolve(locs);\r\n            } else {\r\n                reject('not loading locations');\r\n            }\r\n        });\r\n    };\r\n\r\n    getUser = () => {\r\n        const uid = this.props.uid;\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    if (data) {\r\n                        resolve(data);\r\n                    } else {\r\n                        reject('User not authenticated');\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                open_share: !state.open_share,\r\n            };\r\n        });\r\n    };\r\n\r\n    // GTLexpanded = () => {\r\n    //     this.setState((state) => {\r\n    //         return { displayQuestions: !this.state.displayQuestions };\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        const path = window.location.href.split('/');\r\n        const root = path[path.length - 2];\r\n\r\n        // let questions = null;\r\n        // if (this.state.displayQuestions) {\r\n        //     console.log(\"Entered GTL\")\r\n        //     return (questions = (\r\n        //         <div>\r\n\r\n        //         </div>\r\n        //     ));\r\n        // }\r\n        if (!this.state.isAuthenticated) return null;\r\n        if (!this.state.gotLocs) return null;\r\n        return (\r\n            <Card\r\n                style={{\r\n                    maxHeight: 800,\r\n                    maxWidth: 600,\r\n                    margin: 'auto',\r\n                    marginBlock: '20px',\r\n                    background: '#1b1b1b',\r\n                    // border: '3px solid #fafafa',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar\r\n                            aria-label=\"recipe\"\r\n                            alt={this.state.post_user.User_name}\r\n                            src={this.state.post_user.Avatar}\r\n                            style={{ backgroundColor: 'auto' }}\r\n                        >\r\n                            {this.state.post_user.User_name}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            {/* <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton> */}\r\n                            <EditButton />\r\n                        </>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                    subheader={\r\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\r\n                    }\r\n                    style={{ textAlign: 'left', color: '#fafafa' }}\r\n                />\r\n                <CardMedia\r\n                    image={this.props.postPic}\r\n                    title={`A Photo by ${this.state.post_user.User_name}`}\r\n                    style={{\r\n                        borderRadius: '20px 20px 20px 20px',\r\n                        height: 0,\r\n                        paddingTop: '56.25%',\r\n                        marginLeft: '10px',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ color: '#fafafa', textAlign: 'center' }}\r\n                    >\r\n                        {this.props.caption}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Box m={-2} />\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                        onClick={this.handleColorChange}\r\n                    >\r\n                        <FavoriteIcon />\r\n                        {<Typography style={{ color: '#fafafa' }}>{this.state.likes}</Typography>}\r\n                    </IconButton>\r\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\r\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\r\n                            <AddCommentRoundedIcon />\r\n                            <span>\r\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\r\n                            </span>\r\n                        </IconButton>\r\n                    </Link>\r\n                    <Box m={1} />\r\n                    <IconButton aria-label=\"share\">\r\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\r\n                    </IconButton>\r\n                    {/* <div\r\n                        style={{ float: 'right', marginRight: '10px', marginLeft: 'auto' }}\r\n                        onClick={this.handleClickRandomizer}\r\n                    >\r\n                        <GTLmenu\r\n                            location2={this.state.loc1}\r\n                            correctLocation={this.props.location}\r\n                            location3={this.state.loc2}\r\n                            order={this.state.random}\r\n                            uid={this.props.uid}\r\n                        />\r\n                    </div> */}\r\n\r\n                    {/* {this.state.displayQuestions &&\r\n                        this.state.questions.map( \r\n                            (item: any) => (location1: String, location2: String, location3: String) => {\r\n                                console.log('Entered GTL');\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <GTLexpanded\r\n                                            location1={location1}\r\n                                            location2={location2}\r\n                                            location3={location3}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            },\r\n                        )}\r\n                    {!this.state.displayQuestions && (\r\n                    <Button\r\n                        style={{\r\n                            padding: '5px 20px 5px 20px',\r\n                            // position: 'static',\r\n                            // // float: 'right',\r\n                            // right: '200px',\r\n                            marginLeft: 'auto',\r\n                            marginRight: '3px',\r\n                            background: '#202020',\r\n                            color: '#F56920',\r\n                            borderRadius: '20px',\r\n                            fontSize: '10px',\r\n                        }}\r\n                        onClick={this.GTLexpanded} ////////BUGGY LINE: do not uncomment until debugged/////////\r\n                        variant=\"contained\"\r\n                        endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                    >\r\n                        Guess The\r\n                        <br></br>\r\n                        Location\r\n                    </Button>\r\n                    )} */}\r\n\r\n                    {/* <div>{questions}</div> */}\r\n                    {/* <div>\r\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\r\n                    </div> */}\r\n\r\n                    {/* <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> */}\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default SinglePostNew;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew.tsx",["399","400","401","402","403","404","405","406","407","408","409","410"],"import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport SharePost from './sharePost';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\r\nimport './singlePostStyles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport GuessTheLocationPlay from '../Game/guessPlay';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport GTLexpanded from './GTLexpanded';\r\nimport ReportButton from './report';\r\nimport GTLmenu from '../Game/GTLmenu';\r\n// import randomLocation from 'random-location';\r\n\r\nexport interface SinglePostNewProps {\r\n    username?: string;\r\n    postPic?: string;\r\n    date?: string;\r\n    avatar?: string;\r\n    uid?: string;\r\n    likes_count?: number;\r\n    caption?: string;\r\n    id?: string;\r\n    sharedURL?: string;\r\n    hidden?: boolean;\r\n    comments_count?: number;\r\n    location?: any;\r\n    otherLocs?: any;\r\n}\r\n\r\nexport interface SinglePostNewState {\r\n    favourited: boolean;\r\n    user: any;\r\n    post_user: any;\r\n    open_share: boolean;\r\n    isOpen: boolean;\r\n    path_name: string;\r\n    likes: number | undefined;\r\n    isAuthenticated: boolean;\r\n    // location1: String;\r\n    // location2: String;\r\n    // location3: String;\r\n    // questions: any;\r\n    // displayQuestions: boolean;\r\n    random: any;\r\n    locations: any;\r\n    gotLocs: boolean;\r\n    loc1: string;\r\n    loc2: string;\r\n}\r\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\r\n    constructor(SinglePostNewProps: any) {\r\n        super(SinglePostNewProps);\r\n\r\n        this.state = {\r\n            favourited: false,\r\n            user: checkUserLoggedIn(),\r\n            post_user: {},\r\n            likes: this.props.likes_count,\r\n            open_share: false,\r\n            isOpen: false,\r\n            path_name: `/post/${this.props.id}`,\r\n            isAuthenticated: false,\r\n            gotLocs: false,\r\n            // // questions: [{ location1: 'UAE', location2: 'Russia', location3: 'Algeria' }],\r\n            // questions: { correctLocation: 'Dubai', Location2: 'Sharjah', Location3: 'RAK' },\r\n            // displayQuestions: false,\r\n            random: 1,\r\n            locations: [],\r\n            loc1: '',\r\n            loc2: '',\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleClickRandomizer = this.handleClickRandomizer.bind(this);\r\n        this.getLocations = this.getLocations.bind(this);\r\n        this.randomizeLocations = this.randomizeLocations.bind(this);\r\n        // this.GTLexpanded = this.GTLexpanded.bind(this);\r\n    }\r\n    handleClickRandomizer = () => {\r\n        const min = 1;\r\n        const max = 4;\r\n        const rand = Math.floor(Math.random() * (max - min) + min);\r\n        this.setState({ random: rand });\r\n    };\r\n\r\n    randomizeLocations = (locs: any) => {\r\n        const rand1 = Math.floor(Math.random() * this.state.random);\r\n        const rand2 = Math.floor(Math.random() * this.state.random);\r\n\r\n        // console.log(locs);\r\n        // while((this.state.locations.length == 0));\r\n\r\n        //   return (this.state.locations[rand1])\r\n        this.setState({ loc1: this.state.locations[rand1], loc2: this.state.locations[rand2] });\r\n    };\r\n    handleColorChange = () => {\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            console.log(this.props.id); //undefined\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: increment,\r\n            });\r\n            let like = this.state.likes ? this.state.likes + 1 : 0;\r\n            this.setState({ likes: like });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: decrement,\r\n            });\r\n            let like = this.state.likes ? this.state.likes - 1 : 0;\r\n            this.setState({ likes: like });\r\n        }\r\n    };\r\n    share_area = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, post_user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n\r\n        this.getLocations(this.props.location).then(\r\n            (locs) => {\r\n                this.setState({ gotLocs: true, locations: locs });\r\n                this.randomizeLocations(locs);\r\n            },\r\n            (error) => {\r\n                this.setState({ gotLocs: false });\r\n            },\r\n        );\r\n\r\n        // this.getLocations(this.props.location);\r\n        // const loc = this.props.location\r\n\r\n        // console.log(this.state.locations);\r\n        // const loc = []\r\n\r\n        // console.log(this.state.locations)\r\n    }\r\n\r\n    getLocations = (loc: string) => {\r\n        var locs = new Array();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let locs = new Array();\r\n            const snapshot = firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs.push(doc.data().location);\r\n                        }\r\n                    });\r\n                    resolve(locs);\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs = [...locs, doc.data().location];\r\n                        }\r\n                    });\r\n                });\r\n            if (locs) {\r\n                resolve(locs);\r\n            } else {\r\n                reject('not loading locations');\r\n            }\r\n        });\r\n    };\r\n\r\n    getUser = () => {\r\n        const uid = this.props.uid;\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    if (data) {\r\n                        resolve(data);\r\n                    } else {\r\n                        reject('User not authenticated');\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                open_share: !state.open_share,\r\n            };\r\n        });\r\n    };\r\n\r\n    // GTLexpanded = () => {\r\n    //     this.setState((state) => {\r\n    //         return { displayQuestions: !this.state.displayQuestions };\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        const path = window.location.href.split('/');\r\n        const root = path[path.length - 2];\r\n\r\n        // let questions = null;\r\n        // if (this.state.displayQuestions) {\r\n        //     console.log(\"Entered GTL\")\r\n        //     return (questions = (\r\n        //         <div>\r\n\r\n        //         </div>\r\n        //     ));\r\n        // }\r\n        if (!this.state.isAuthenticated) return null;\r\n        if (!this.state.gotLocs) return null;\r\n        return (\r\n            <Card\r\n                style={{\r\n                    maxHeight: 800,\r\n                    maxWidth: 600,\r\n                    margin: 'auto',\r\n                    marginBlock: '20px',\r\n                    background: '#1b1b1b',\r\n                    // border: '3px solid #fafafa',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar\r\n                            aria-label=\"recipe\"\r\n                            alt={this.state.post_user.User_name}\r\n                            src={this.state.post_user.Avatar}\r\n                            style={{ backgroundColor: 'auto' }}\r\n                        >\r\n                            {this.state.post_user.User_name}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            {/* <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton> */}\r\n                            <ReportButton />\r\n                        </>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                    subheader={\r\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\r\n                    }\r\n                    style={{ textAlign: 'left', color: '#fafafa' }}\r\n                />\r\n                <CardMedia\r\n                    image={this.props.postPic}\r\n                    title={`A Photo by ${this.state.post_user.User_name}`}\r\n                    style={{\r\n                        borderRadius: '20px 20px 20px 20px',\r\n                        height: 0,\r\n                        paddingTop: '56.25%',\r\n                        marginLeft: '10px',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ color: '#fafafa', textAlign: 'center' }}\r\n                    >\r\n                        {this.props.caption}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Box m={-2} />\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                        onClick={this.handleColorChange}\r\n                    >\r\n                        <FavoriteIcon />\r\n                        {<Typography style={{ color: '#fafafa' }}>{this.state.likes}</Typography>}\r\n                    </IconButton>\r\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\r\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\r\n                            <AddCommentRoundedIcon />\r\n                            <span>\r\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\r\n                            </span>\r\n                        </IconButton>\r\n                    </Link>\r\n                    <Box m={1} />\r\n                    <IconButton aria-label=\"share\">\r\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\r\n                    </IconButton>\r\n                    <div\r\n                        style={{ float: 'right', marginRight: '10px', marginLeft: 'auto' }}\r\n                        onClick={this.handleClickRandomizer}\r\n                    >\r\n                        <GTLmenu\r\n                            location2={this.state.loc1}\r\n                            correctLocation={this.props.location}\r\n                            location3={this.state.loc2}\r\n                            order={this.state.random}\r\n                            uid={this.props.uid}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* {this.state.displayQuestions &&\r\n                        this.state.questions.map( \r\n                            (item: any) => (location1: String, location2: String, location3: String) => {\r\n                                console.log('Entered GTL');\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <GTLexpanded\r\n                                            location1={location1}\r\n                                            location2={location2}\r\n                                            location3={location3}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            },\r\n                        )}\r\n                    {!this.state.displayQuestions && (\r\n                    <Button\r\n                        style={{\r\n                            padding: '5px 20px 5px 20px',\r\n                            // position: 'static',\r\n                            // // float: 'right',\r\n                            // right: '200px',\r\n                            marginLeft: 'auto',\r\n                            marginRight: '3px',\r\n                            background: '#202020',\r\n                            color: '#F56920',\r\n                            borderRadius: '20px',\r\n                            fontSize: '10px',\r\n                        }}\r\n                        onClick={this.GTLexpanded} ////////BUGGY LINE: do not uncomment until debugged/////////\r\n                        variant=\"contained\"\r\n                        endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                    >\r\n                        Guess The\r\n                        <br></br>\r\n                        Location\r\n                    </Button>\r\n                    )} */}\r\n\r\n                    {/* <div>{questions}</div> */}\r\n                    {/* <div>\r\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\r\n                    </div> */}\r\n\r\n                    {/* <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> */}\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default SinglePostNew;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\NavBar\\navbar.tsx",["411"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport UploadIcon from '../Display/uploadIcon';\r\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        justifyContent: 'space-evenly',\r\n        // marginTop: 20,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nexport default function LabelBottomNavigation() {\r\n    // const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n\r\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    //     setValue(newValue);\r\n    // };\r\n\r\n    // return (\r\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\r\n    //     </BottomNavigation>\r\n    // );\r\n\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <HomeRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <SearchRoundedIcon />\r\n                </IconButton>\r\n                <UploadIcon/>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\">\r\n                    <ExploreRoundedIcon/>\r\n                </IconButton>\r\n                <IconButton color=\"inherit\">\r\n                    <SettingsRoundedIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\feed.tsx",["412","413","414"],"import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport SinglePostNew from '../Display/singlePostNew';\r\nimport Post from \"./Posts\";\r\n\r\nexport default function Feed() {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const [lastKey, setLastKey] = useState(\"\" as unknown  as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>);\r\n    const [nextPosts_loading, setNextPostsLoading] = useState(false);\r\n    const [locations, setLocations] = useState<any[]>([]);\r\n\r\n    // useEffect(() => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .onSnapshot((snapshot: any) => {\r\n    //             setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        // first 5 posts\r\n        Post.postsFirstBatch()\r\n          .then((res) => {\r\n            if (res) {\r\n            setPosts(res.posts);\r\n            console.log(res.posts[0])\r\n            setLastKey(res.lastKey);\r\n          } else return\r\n        })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n          \r\n\r\n      }, []);\r\n\r\n\r\n      \r\n\r\n      const fetchMorePosts = (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\r\n          console.log(\"hello thereee\")\r\n        if (key ) {\r\n          setNextPostsLoading(true);\r\n          Post.postsNextBatch(key)\r\n            .then((res) => {\r\n              if (res) {\r\n              setLastKey(res.lastKey);\r\n              // add new posts to old posts\r\n              setPosts(posts.concat(res.posts));\r\n              setNextPostsLoading(false);\r\n            } else return\r\n          })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              setNextPostsLoading(false);\r\n            });\r\n        }\r\n      };\r\n    \r\n    const allPosts = (\r\n        <div>\r\n            {posts.map((post) => {\r\n                if (post) {\r\n                  // console.log(\"feed id\", post)\r\n                  // const loc = getLocations(post.location);\r\n                  return (\r\n                    <SinglePostNew\r\n                        key={post.id}\r\n                        id={post.id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.user_name}\r\n                        postPic={post.Image}\r\n                        uid={post.uid}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                        likes_count={post.likes_count}\r\n                        caption={post.caption}\r\n                        sharedURL={window.location.href}\r\n                        hidden={false}\r\n                        comments_count={post.comments_count}\r\n                        location = {post.location}\r\n                        // otherLocs = {getLocations(post.location)}\r\n                    />\r\n                );\r\n                } else return;\r\n            })}\r\n        </div>\r\n    );\r\n    // console.log(lastKey)\r\n    return (\r\n        // <div>\r\n        //     {posts.map(({ id, post }) => {\r\n        //         return (\r\n        //             <SinglePostNew\r\n        //                 key={id}\r\n        //                 id={id}\r\n        //                 // profileUrl={post.profileUrl}\r\n        //                 username={post.user_name}\r\n        //                 postPic={post.Image}\r\n        //                 uid={post.uid}\r\n        //                 // caption={post.caption}\r\n        //                 // comments={post.comments}\r\n        //                 date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n        //                 likes_count={post.likes_count}\r\n        //                 caption={post.caption}\r\n        //                 sharedURL={window.location.href}\r\n        //                 hidden={false}\r\n        //                 comments_count={post.comments_count}\r\n        //             />\r\n        //         );\r\n        //     })}\r\n        // </div>\r\n        <div>\r\n            <div>{posts ? allPosts : null}</div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n        {nextPosts_loading ? (\r\n          <p>Loading..</p>\r\n        ) : ((lastKey) ? (\r\n          <button onClick={() => fetchMorePosts(lastKey)}>More Posts</button>\r\n        ) : (\r\n          <span>You are up to date!</span>\r\n        ))}\r\n      </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\Avatar.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\edit.tsx",["415"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function EditButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const deletepost = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post deleted!');\r\n    };\r\n    const editpost = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post edited!');\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button  >\r\n        Open with fade transition\r\n      </Button> */}\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                style={{ color: '#fafafa' }}\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={editpost}>edit post</MenuItem>\r\n                <MenuItem onClick={deletepost}>delete post</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Posts.tsx",["416"],"import firebase from 'firebase';\r\n\r\nexport default {\r\n  /**\r\n   * this function will be fired when you first time run the app,\r\n   * and it will fetch first 5 posts, here I retrieve them in descending order, until the last added post appears first.\r\n   */\r\n  postsFirstBatch: async function () {\r\n    try {\r\n      const data = await firebase\r\n      .firestore()\r\n      .collection('Posts')\r\n      .orderBy('likes_count')\r\n        .limit(5)\r\n        .get();\r\n\r\n      let posts:Array<any> = [];\r\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\r\n      data.forEach((doc) => {\r\n        posts.push({...doc.data(), id: doc.id});\r\n        \r\n        lastKey = (doc)\r\n      });\r\n      console.log(lastKey)\r\n      return { posts, lastKey };\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * this function will be fired each time the user click on 'More Posts' button,\r\n   * it receive key of last post in previous batch, then fetch next 5 posts\r\n   * starting after last fetched post.  \r\n   */\r\n  postsNextBatch: async (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\r\n    try {\r\n      const data = await firebase\r\n      .firestore()\r\n      .collection('Posts')\r\n      .orderBy('likes_count')\r\n        .startAfter(key)\r\n        .limit(5)\r\n        .get();\r\n\r\n      let posts:Array<any> = [];\r\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\r\n\r\n      data.forEach((doc) => {\r\n        posts.push({...doc.data(), id: doc.id});\r\n        lastKey = (doc);\r\n      });\r\n      \r\n      return { posts, lastKey };\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n};","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\report.tsx",["417"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function ReportButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleReport = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post reported!');\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button  >\r\n        Open with fade transition\r\n      </Button> */}\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                style={{ color: '#fafafa' }}\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleReport}>Report post</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Game\\GTLmenu.tsx",["418","419","420"],"import React from 'react';\r\nimport { Menu, MenuItem, MenuButton, MenuHeader } from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport fb from 'firebase/app';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function GTLmenus(props: {\r\n    correctLocation: String;\r\n    location2: String;\r\n    location3: String;\r\n    order: Number;\r\n    uid?: string;\r\n}) {\r\n    const [openCorrect, setOpenCorrect] = React.useState(false);\r\n    const [openWrong, setOpenWrong] = React.useState(false);\r\n\r\n    const handleClickRightAns = () => {\r\n        const increment = fb.firestore.FieldValue.increment(10);\r\n        if (props.uid !== undefined) {\r\n            fb.firestore().collection('users').doc(props.uid).update({\r\n                GamePoint: increment,\r\n            });\r\n        }\r\n        setOpenCorrect(true);\r\n    };\r\n\r\n    const handleCloseRightAns = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenCorrect(false);\r\n    };\r\n\r\n    const handleClickWrongAns = () => {\r\n        const decrement = fb.firestore.FieldValue.increment(-5);\r\n        if (props.uid !== undefined) {\r\n            fb.firestore().collection('users').doc(props.uid).update({\r\n                GamePoint: decrement,\r\n            });\r\n        }\r\n\r\n        setOpenWrong(true);\r\n    };\r\n\r\n    const handleCloseWrongAns = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenWrong(false);\r\n    };\r\n    if (props.order === 1) {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    } else if (props.order === 2) {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    }\r\n}\r\n",{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":25,"column":8,"nodeType":"427","messageId":"428","endLine":25,"endColumn":14},{"ruleId":"425","severity":1,"message":"429","line":28,"column":8,"nodeType":"427","messageId":"428","endLine":28,"endColumn":22},{"ruleId":"425","severity":1,"message":"430","line":7,"column":10,"nodeType":"427","messageId":"428","endLine":7,"endColumn":16},{"ruleId":"425","severity":1,"message":"431","line":7,"column":39,"nodeType":"427","messageId":"428","endLine":7,"endColumn":42},{"ruleId":"425","severity":1,"message":"432","line":7,"column":52,"nodeType":"427","messageId":"428","endLine":7,"endColumn":57},{"ruleId":"425","severity":1,"message":"433","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":19},{"ruleId":"425","severity":1,"message":"434","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"435","severity":1,"message":"436","line":38,"column":18,"nodeType":"437","messageId":"438","endLine":38,"endColumn":20},{"ruleId":"425","severity":1,"message":"439","line":1,"column":52,"nodeType":"427","messageId":"428","endLine":1,"endColumn":61},{"ruleId":"425","severity":1,"message":"440","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":20},{"ruleId":"425","severity":1,"message":"441","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":17},{"ruleId":"425","severity":1,"message":"431","line":7,"column":10,"nodeType":"427","messageId":"428","endLine":7,"endColumn":13},{"ruleId":"425","severity":1,"message":"442","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":23},{"ruleId":"425","severity":1,"message":"443","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"444","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":21},{"ruleId":"425","severity":1,"message":"445","line":12,"column":30,"nodeType":"427","messageId":"428","endLine":12,"endColumn":35},{"ruleId":"425","severity":1,"message":"446","line":13,"column":10,"nodeType":"427","messageId":"428","endLine":13,"endColumn":20},{"ruleId":"425","severity":1,"message":"440","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":20},{"ruleId":"447","severity":1,"message":"448","line":17,"column":40,"nodeType":"449","messageId":"450","endLine":17,"endColumn":47,"fix":"451"},{"ruleId":"447","severity":1,"message":"448","line":18,"column":40,"nodeType":"449","messageId":"450","endLine":18,"endColumn":47,"fix":"452"},{"ruleId":"425","severity":1,"message":"453","line":43,"column":14,"nodeType":"427","messageId":"428","endLine":43,"endColumn":21},{"ruleId":"425","severity":1,"message":"454","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":24},{"ruleId":"425","severity":1,"message":"455","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":19},{"ruleId":"425","severity":1,"message":"456","line":3,"column":37,"nodeType":"427","messageId":"428","endLine":3,"endColumn":47},{"ruleId":"425","severity":1,"message":"457","line":3,"column":49,"nodeType":"427","messageId":"428","endLine":3,"endColumn":53},{"ruleId":"425","severity":1,"message":"458","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"425","severity":1,"message":"459","line":200,"column":15,"nodeType":"427","messageId":"428","endLine":200,"endColumn":20},{"ruleId":"425","severity":1,"message":"430","line":1,"column":10,"nodeType":"427","messageId":"428","endLine":1,"endColumn":16},{"ruleId":"425","severity":1,"message":"460","line":1,"column":26,"nodeType":"427","messageId":"428","endLine":1,"endColumn":30},{"ruleId":"425","severity":1,"message":"461","line":1,"column":32,"nodeType":"427","messageId":"428","endLine":1,"endColumn":43},{"ruleId":"425","severity":1,"message":"456","line":1,"column":45,"nodeType":"427","messageId":"428","endLine":1,"endColumn":55},{"ruleId":"425","severity":1,"message":"457","line":1,"column":57,"nodeType":"427","messageId":"428","endLine":1,"endColumn":61},{"ruleId":"425","severity":1,"message":"462","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":19},{"ruleId":"425","severity":1,"message":"444","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":21},{"ruleId":"425","severity":1,"message":"463","line":9,"column":10,"nodeType":"427","messageId":"428","endLine":9,"endColumn":27},{"ruleId":"425","severity":1,"message":"464","line":87,"column":31,"nodeType":"427","messageId":"428","endLine":87,"endColumn":33},{"ruleId":"425","severity":1,"message":"455","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":19},{"ruleId":"425","severity":1,"message":"465","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"431","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":11},{"ruleId":"425","severity":1,"message":"458","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":20},{"ruleId":"425","severity":1,"message":"466","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":30},{"ruleId":"425","severity":1,"message":"465","line":11,"column":10,"nodeType":"427","messageId":"428","endLine":11,"endColumn":18},{"ruleId":"425","severity":1,"message":"467","line":2,"column":54,"nodeType":"427","messageId":"428","endLine":2,"endColumn":63},{"ruleId":"425","severity":1,"message":"468","line":2,"column":65,"nodeType":"427","messageId":"428","endLine":2,"endColumn":72},{"ruleId":"425","severity":1,"message":"469","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":17},{"ruleId":"425","severity":1,"message":"470","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":26},{"ruleId":"425","severity":1,"message":"471","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":28},{"ruleId":"425","severity":1,"message":"457","line":5,"column":10,"nodeType":"427","messageId":"428","endLine":5,"endColumn":14},{"ruleId":"425","severity":1,"message":"430","line":7,"column":10,"nodeType":"427","messageId":"428","endLine":7,"endColumn":16},{"ruleId":"425","severity":1,"message":"458","line":7,"column":18,"nodeType":"427","messageId":"428","endLine":7,"endColumn":28},{"ruleId":"425","severity":1,"message":"472","line":8,"column":22,"nodeType":"427","messageId":"428","endLine":8,"endColumn":27},{"ruleId":"425","severity":1,"message":"473","line":8,"column":29,"nodeType":"427","messageId":"428","endLine":8,"endColumn":41},{"ruleId":"425","severity":1,"message":"474","line":9,"column":10,"nodeType":"427","messageId":"428","endLine":9,"endColumn":16},{"ruleId":"425","severity":1,"message":"475","line":12,"column":18,"nodeType":"427","messageId":"428","endLine":12,"endColumn":32},{"ruleId":"425","severity":1,"message":"476","line":12,"column":34,"nodeType":"427","messageId":"428","endLine":12,"endColumn":45},{"ruleId":"425","severity":1,"message":"467","line":2,"column":54,"nodeType":"427","messageId":"428","endLine":2,"endColumn":63},{"ruleId":"425","severity":1,"message":"471","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":28},{"ruleId":"425","severity":1,"message":"457","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":14},{"ruleId":"425","severity":1,"message":"430","line":6,"column":10,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"458","line":6,"column":18,"nodeType":"427","messageId":"428","endLine":6,"endColumn":28},{"ruleId":"425","severity":1,"message":"472","line":7,"column":22,"nodeType":"427","messageId":"428","endLine":7,"endColumn":27},{"ruleId":"425","severity":1,"message":"473","line":7,"column":29,"nodeType":"427","messageId":"428","endLine":7,"endColumn":41},{"ruleId":"425","severity":1,"message":"474","line":8,"column":10,"nodeType":"427","messageId":"428","endLine":8,"endColumn":16},{"ruleId":"425","severity":1,"message":"475","line":11,"column":18,"nodeType":"427","messageId":"428","endLine":11,"endColumn":32},{"ruleId":"425","severity":1,"message":"476","line":11,"column":34,"nodeType":"427","messageId":"428","endLine":11,"endColumn":45},{"ruleId":"425","severity":1,"message":"471","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":28},{"ruleId":"425","severity":1,"message":"457","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":14},{"ruleId":"425","severity":1,"message":"446","line":4,"column":16,"nodeType":"427","messageId":"428","endLine":4,"endColumn":26},{"ruleId":"425","severity":1,"message":"431","line":4,"column":28,"nodeType":"427","messageId":"428","endLine":4,"endColumn":31},{"ruleId":"425","severity":1,"message":"430","line":6,"column":10,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"458","line":6,"column":18,"nodeType":"427","messageId":"428","endLine":6,"endColumn":28},{"ruleId":"425","severity":1,"message":"477","line":7,"column":10,"nodeType":"427","messageId":"428","endLine":7,"endColumn":20},{"ruleId":"425","severity":1,"message":"472","line":7,"column":22,"nodeType":"427","messageId":"428","endLine":7,"endColumn":27},{"ruleId":"425","severity":1,"message":"473","line":7,"column":29,"nodeType":"427","messageId":"428","endLine":7,"endColumn":41},{"ruleId":"425","severity":1,"message":"478","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":16},{"ruleId":"425","severity":1,"message":"467","line":2,"column":54,"nodeType":"427","messageId":"428","endLine":2,"endColumn":63},{"ruleId":"425","severity":1,"message":"469","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":17},{"ruleId":"425","severity":1,"message":"470","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":26},{"ruleId":"425","severity":1,"message":"459","line":82,"column":15,"nodeType":"427","messageId":"428","endLine":82,"endColumn":20},{"ruleId":"425","severity":1,"message":"479","line":197,"column":15,"nodeType":"427","messageId":"428","endLine":197,"endColumn":18},{"ruleId":"425","severity":1,"message":"480","line":199,"column":15,"nodeType":"427","messageId":"428","endLine":199,"endColumn":27},{"ruleId":"425","severity":1,"message":"481","line":207,"column":15,"nodeType":"427","messageId":"428","endLine":207,"endColumn":26},{"ruleId":"425","severity":1,"message":"431","line":5,"column":10,"nodeType":"427","messageId":"428","endLine":5,"endColumn":13},{"ruleId":"425","severity":1,"message":"482","line":5,"column":42,"nodeType":"427","messageId":"428","endLine":5,"endColumn":56},{"ruleId":"425","severity":1,"message":"483","line":7,"column":7,"nodeType":"427","messageId":"428","endLine":7,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":36,"column":44,"nodeType":"449","messageId":"450","endLine":36,"endColumn":51,"fix":"484"},{"ruleId":"425","severity":1,"message":"439","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":26},{"ruleId":"425","severity":1,"message":"485","line":8,"column":25,"nodeType":"427","messageId":"428","endLine":8,"endColumn":39},{"ruleId":"425","severity":1,"message":"486","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":30},{"ruleId":"425","severity":1,"message":"487","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":14},{"ruleId":"425","severity":1,"message":"488","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":17},{"ruleId":"425","severity":1,"message":"489","line":54,"column":11,"nodeType":"427","messageId":"428","endLine":54,"endColumn":18},{"ruleId":"425","severity":1,"message":"490","line":59,"column":12,"nodeType":"427","messageId":"428","endLine":59,"endColumn":18},{"ruleId":"425","severity":1,"message":"491","line":60,"column":11,"nodeType":"427","messageId":"428","endLine":60,"endColumn":24},{"ruleId":"447","severity":1,"message":"448","line":54,"column":40,"nodeType":"449","messageId":"450","endLine":54,"endColumn":47,"fix":"492"},{"ruleId":"425","severity":1,"message":"493","line":55,"column":12,"nodeType":"427","messageId":"428","endLine":55,"endColumn":17},{"ruleId":"447","severity":1,"message":"448","line":55,"column":40,"nodeType":"449","messageId":"450","endLine":55,"endColumn":47,"fix":"494"},{"ruleId":"425","severity":1,"message":"495","line":100,"column":11,"nodeType":"427","messageId":"428","endLine":100,"endColumn":23},{"ruleId":"425","severity":1,"message":"496","line":117,"column":11,"nodeType":"427","messageId":"428","endLine":117,"endColumn":28},{"ruleId":"497","severity":1,"message":"498","line":144,"column":38,"nodeType":"499","messageId":"500","endLine":144,"endColumn":40},{"ruleId":"425","severity":1,"message":"458","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":18},{"ruleId":"425","severity":1,"message":"501","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":17},{"ruleId":"425","severity":1,"message":"462","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":19},{"ruleId":"425","severity":1,"message":"456","line":7,"column":45,"nodeType":"427","messageId":"428","endLine":7,"endColumn":55},{"ruleId":"425","severity":1,"message":"502","line":8,"column":10,"nodeType":"427","messageId":"428","endLine":8,"endColumn":14},{"ruleId":"425","severity":1,"message":"503","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"425","severity":1,"message":"478","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":16},{"ruleId":"425","severity":1,"message":"504","line":15,"column":7,"nodeType":"427","messageId":"428","endLine":15,"endColumn":16},{"ruleId":"425","severity":1,"message":"505","line":26,"column":7,"nodeType":"427","messageId":"428","endLine":26,"endColumn":18},{"ruleId":"506","severity":1,"message":"507","line":36,"column":5,"nodeType":"427","endLine":36,"endColumn":14,"suggestions":"508"},{"ruleId":"435","severity":1,"message":"436","line":38,"column":19,"nodeType":"437","messageId":"438","endLine":38,"endColumn":21},{"ruleId":"425","severity":1,"message":"509","line":43,"column":11,"nodeType":"427","messageId":"428","endLine":43,"endColumn":20},{"ruleId":"435","severity":1,"message":"510","line":68,"column":24,"nodeType":"437","messageId":"438","endLine":68,"endColumn":26},{"ruleId":"425","severity":1,"message":"511","line":17,"column":12,"nodeType":"427","messageId":"428","endLine":17,"endColumn":16},{"ruleId":"425","severity":1,"message":"512","line":17,"column":18,"nodeType":"427","messageId":"428","endLine":17,"endColumn":25},{"ruleId":"435","severity":1,"message":"436","line":20,"column":19,"nodeType":"437","messageId":"438","endLine":20,"endColumn":21},{"ruleId":"435","severity":1,"message":"510","line":24,"column":33,"nodeType":"437","messageId":"438","endLine":24,"endColumn":35},{"ruleId":"435","severity":1,"message":"510","line":27,"column":33,"nodeType":"437","messageId":"438","endLine":27,"endColumn":35},{"ruleId":"435","severity":1,"message":"510","line":35,"column":33,"nodeType":"437","messageId":"438","endLine":35,"endColumn":35},{"ruleId":"435","severity":1,"message":"510","line":38,"column":33,"nodeType":"437","messageId":"438","endLine":38,"endColumn":35},{"ruleId":"425","severity":1,"message":"439","line":2,"column":20,"nodeType":"427","messageId":"428","endLine":2,"endColumn":29},{"ruleId":"425","severity":1,"message":"465","line":1,"column":28,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"513","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":20},{"ruleId":"425","severity":1,"message":"514","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":28},{"ruleId":"425","severity":1,"message":"515","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":15},{"ruleId":"425","severity":1,"message":"443","line":23,"column":15,"nodeType":"427","messageId":"428","endLine":23,"endColumn":21},{"ruleId":"425","severity":1,"message":"516","line":24,"column":8,"nodeType":"427","messageId":"428","endLine":24,"endColumn":19},{"ruleId":"425","severity":1,"message":"517","line":26,"column":8,"nodeType":"427","messageId":"428","endLine":26,"endColumn":15},{"ruleId":"447","severity":1,"message":"448","line":166,"column":20,"nodeType":"518","messageId":"450","endLine":166,"endColumn":31,"fix":"519"},{"ruleId":"447","severity":1,"message":"448","line":169,"column":24,"nodeType":"518","messageId":"450","endLine":169,"endColumn":35,"fix":"520"},{"ruleId":"425","severity":1,"message":"521","line":170,"column":19,"nodeType":"427","messageId":"428","endLine":170,"endColumn":27},{"ruleId":"435","severity":1,"message":"436","line":176,"column":72,"nodeType":"437","messageId":"438","endLine":176,"endColumn":74},{"ruleId":"522","severity":1,"message":"523","line":187,"column":9,"nodeType":"524","messageId":"525","endLine":204,"endColumn":12},{"ruleId":"435","severity":1,"message":"436","line":194,"column":72,"nodeType":"437","messageId":"438","endLine":194,"endColumn":74},{"ruleId":"425","severity":1,"message":"465","line":1,"column":28,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"513","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":20},{"ruleId":"425","severity":1,"message":"514","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":28},{"ruleId":"425","severity":1,"message":"515","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":15},{"ruleId":"425","severity":1,"message":"443","line":23,"column":15,"nodeType":"427","messageId":"428","endLine":23,"endColumn":21},{"ruleId":"425","severity":1,"message":"516","line":24,"column":8,"nodeType":"427","messageId":"428","endLine":24,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":166,"column":20,"nodeType":"518","messageId":"450","endLine":166,"endColumn":31,"fix":"526"},{"ruleId":"447","severity":1,"message":"448","line":169,"column":24,"nodeType":"518","messageId":"450","endLine":169,"endColumn":35,"fix":"527"},{"ruleId":"425","severity":1,"message":"521","line":170,"column":19,"nodeType":"427","messageId":"428","endLine":170,"endColumn":27},{"ruleId":"435","severity":1,"message":"436","line":176,"column":72,"nodeType":"437","messageId":"438","endLine":176,"endColumn":74},{"ruleId":"522","severity":1,"message":"523","line":187,"column":9,"nodeType":"524","messageId":"525","endLine":204,"endColumn":12},{"ruleId":"435","severity":1,"message":"436","line":194,"column":72,"nodeType":"437","messageId":"438","endLine":194,"endColumn":74},{"ruleId":"425","severity":1,"message":"528","line":9,"column":18,"nodeType":"427","messageId":"428","endLine":9,"endColumn":21},{"ruleId":"425","severity":1,"message":"529","line":11,"column":12,"nodeType":"427","messageId":"428","endLine":11,"endColumn":21},{"ruleId":"425","severity":1,"message":"530","line":11,"column":23,"nodeType":"427","messageId":"428","endLine":11,"endColumn":35},{"ruleId":"497","severity":1,"message":"498","line":89,"column":24,"nodeType":"524","messageId":"531","endLine":89,"endColumn":31},{"ruleId":"425","severity":1,"message":"443","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"532","severity":1,"message":"533","line":3,"column":1,"nodeType":"534","endLine":59,"endColumn":3},{"ruleId":"425","severity":1,"message":"443","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"425","severity":1,"message":"535","line":2,"column":26,"nodeType":"427","messageId":"428","endLine":2,"endColumn":36},{"ruleId":"425","severity":1,"message":"536","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":20},{"ruleId":"425","severity":1,"message":"472","line":10,"column":22,"nodeType":"427","messageId":"428","endLine":10,"endColumn":27},"no-native-reassign",["537"],"no-negated-in-lhs",["538"],"@typescript-eslint/no-unused-vars","'Places' is defined but never used.","Identifier","unusedVar","'LocationPicker' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Slide' is defined but never used.","'CssBaseline' is defined but never used.","'useScrollTrigger' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'RegularBtn' is defined but never used.","'TextField' is defined but never used.","'ProfileOverview' is defined but never used.","'Button' is defined but never used.","'SinglePostNew' is defined but never used.","'Popup' is defined but never used.","'Typography' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"539","text":"540"},{"range":"541","text":"540"},"'onClick' is defined but never used.","'OccupationSelect' is defined but never used.","'Component' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'IconButton' is defined but never used.","'coord' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'BadgeAvatar' is defined but never used.","'checkUserLoggedIn' is defined but never used.","'id' is assigned a value but never used.","'useState' is defined but never used.","'PhotoCameraRoundedIcon' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","'InputBase' is defined but never used.","'PublishRoundedIcon' is defined but never used.","'ArrowBackRoundedIcon' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'purple' is defined but never used.","'SwitchClassKey' is defined but never used.","'SwitchProps' is defined but never used.","'withStyles' is defined but never used.","'firebase' is defined but never used.","'pid' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.",{"range":"542","text":"540"},"'setCoordinates' is assigned a value but never used.","'GuessTheLocationButton' is defined but never used.","'Camera' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'source' is assigned a value but never used.","'handleCapture' is assigned a value but never used.",{"range":"543","text":"540"},"'posts' is assigned a value but never used.",{"range":"544","text":"540"},"'fetchResults' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AddAvatar' is defined but never used.","'Link' is defined but never used.","'truncate' is defined but never used.","'useStyles' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["545"],"'Followers' is assigned a value but never used.","Expected '===' and instead saw '=='.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'GuessTheLocationPlay' is defined but never used.","'GTLicon' is defined but never used.","'GTLexpanded' is defined but never used.","'GTLmenu' is defined but never used.","NewExpression",{"range":"546","text":"540"},{"range":"547","text":"540"},"'snapshot' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",{"range":"548","text":"540"},{"range":"549","text":"540"},"'Fab' is defined but never used.","'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","expectedReturnValue","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MenuButton' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",[774,781],"[]",[824,831],[1006,1013],[1562,1569],[1612,1619],{"desc":"550","fix":"551"},[5908,5919],[5998,6009],[5912,5923],[6002,6013],"Add dependencies array: []",{"range":"552","text":"553"},[1339,1339],", []"]