[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"5","/home/ms374/GeoPick/src/pages/camera/index.tsx":"6","/home/ms374/GeoPick/src/pages/explore-page/index.tsx":"7","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"8","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx":"9","/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx":"10","/home/ms374/GeoPick/src/pages/profile-screen/userPage.tsx":"11","/home/ms374/GeoPick/src/pages/view-points-screen/points.tsx":"12","/home/ms374/GeoPick/src/pages/search-page/index.tsx":"13","/home/ms374/GeoPick/src/pages/edit-profile/editProfile.tsx":"14","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"15","/home/ms374/GeoPick/src/pages/upload-image/index.tsx":"16","/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx":"17","/home/ms374/GeoPick/src/pages/terms/index.tsx":"18","/home/ms374/GeoPick/src/pages/notification/index.tsx":"19","/home/ms374/GeoPick/src/pages/notificationset/index.tsx":"20","/home/ms374/GeoPick/src/pages/accessSetting/index.tsx":"21","/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx":"22","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"23","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"24","/home/ms374/GeoPick/src/pages/post-view/index.tsx":"25","/home/ms374/GeoPick/src/components/Layouts/userFeed.tsx":"26","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"27","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"28","/home/ms374/GeoPick/src/components/Display/profileOverview.tsx":"29","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"30","/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx":"31","/home/ms374/GeoPick/src/firebase/index.ts":"32","/home/ms374/GeoPick/src/firebase/auth.ts":"33","/home/ms374/GeoPick/src/components/Display/report.tsx":"34","/home/ms374/GeoPick/src/components/Game/GTLmenu.tsx":"35","/home/ms374/GeoPick/src/components/Display/sharePost.tsx":"36","/home/ms374/GeoPick/src/firebase/firebase.ts":"37","/home/ms374/GeoPick/src/firebase/db.ts":"38","/home/ms374/GeoPick/src/components/Display/avatarSmall.tsx":"39","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx":"40","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"41","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"42","/home/ms374/GeoPick/src/components/Inputs/Places.tsx":"43","/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx":"44","/home/ms374/GeoPick/src/components/Inputs/tags.tsx":"45","/home/ms374/GeoPick/src/components/Layouts/feed.tsx":"46","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx":"47","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"48","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"49","/home/ms374/GeoPick/src/components/Layouts/Posts.tsx":"50","/home/ms374/GeoPick/src/components/Inputs/Camera.tsx":"51"},{"size":920,"mtime":1614623373298,"results":"52","hashOfConfig":"53"},{"size":467,"mtime":1609151726915,"results":"54","hashOfConfig":"53"},{"size":7345,"mtime":1615388914014,"results":"55","hashOfConfig":"53"},{"size":787,"mtime":1611505838448,"results":"56","hashOfConfig":"53"},{"size":1610,"mtime":1612203673126,"results":"57","hashOfConfig":"53"},{"size":400,"mtime":1614623373318,"results":"58","hashOfConfig":"53"},{"size":3172,"mtime":1615053341291,"results":"59","hashOfConfig":"53"},{"size":3878,"mtime":1612203673107,"results":"60","hashOfConfig":"53"},{"size":5079,"mtime":1612203673141,"results":"61","hashOfConfig":"53"},{"size":5316,"mtime":1613728752202,"results":"62","hashOfConfig":"53"},{"size":5324,"mtime":1614793869206,"results":"63","hashOfConfig":"53"},{"size":2607,"mtime":1613826750503,"results":"64","hashOfConfig":"53"},{"size":6161,"mtime":1615024391026,"results":"65","hashOfConfig":"53"},{"size":5763,"mtime":1613826750410,"results":"66","hashOfConfig":"53"},{"size":4558,"mtime":1615385878373,"results":"67","hashOfConfig":"53"},{"size":11752,"mtime":1615385878424,"results":"68","hashOfConfig":"53"},{"size":4502,"mtime":1615385878398,"results":"69","hashOfConfig":"53"},{"size":28118,"mtime":1613384997588,"results":"70","hashOfConfig":"53"},{"size":886,"mtime":1614623373351,"results":"71","hashOfConfig":"53"},{"size":2828,"mtime":1614368376834,"results":"72","hashOfConfig":"53"},{"size":4546,"mtime":1614368376784,"results":"73","hashOfConfig":"53"},{"size":3169,"mtime":1615024391022,"results":"74","hashOfConfig":"53"},{"size":5261,"mtime":1613728752219,"results":"75","hashOfConfig":"53"},{"size":8428,"mtime":1614424760190,"results":"76","hashOfConfig":"53"},{"size":15069,"mtime":1614623373368,"results":"77","hashOfConfig":"53"},{"size":1958,"mtime":1614423445043,"results":"78","hashOfConfig":"53"},{"size":1407,"mtime":1612203672914,"results":"79","hashOfConfig":"53"},{"size":1976,"mtime":1611685133978,"results":"80","hashOfConfig":"53"},{"size":6344,"mtime":1615024391005,"results":"81","hashOfConfig":"53"},{"size":1471,"mtime":1611505836913,"results":"82","hashOfConfig":"53"},{"size":15264,"mtime":1615385878288,"results":"83","hashOfConfig":"53"},{"size":132,"mtime":1611505837183,"results":"84","hashOfConfig":"53"},{"size":940,"mtime":1611505837137,"results":"85","hashOfConfig":"53"},{"size":1523,"mtime":1614623373189,"results":"86","hashOfConfig":"53"},{"size":18952,"mtime":1615385878311,"results":"87","hashOfConfig":"53"},{"size":3227,"mtime":1612203672846,"results":"88","hashOfConfig":"53"},{"size":2685,"mtime":1614444664808,"results":"89","hashOfConfig":"53"},{"size":262,"mtime":1611505837158,"results":"90","hashOfConfig":"53"},{"size":1435,"mtime":1614024296257,"results":"91","hashOfConfig":"53"},{"size":2656,"mtime":1612203672979,"results":"92","hashOfConfig":"53"},{"size":864,"mtime":1612203672787,"results":"93","hashOfConfig":"53"},{"size":1756,"mtime":1611505836996,"results":"94","hashOfConfig":"53"},{"size":2002,"mtime":1615052230796,"results":"95","hashOfConfig":"53"},{"size":4301,"mtime":1615407862537,"results":"96","hashOfConfig":"53"},{"size":2995,"mtime":1615385878353,"results":"97","hashOfConfig":"53"},{"size":4494,"mtime":1615060955149,"results":"98","hashOfConfig":"53"},{"size":2811,"mtime":1613215445548,"results":"99","hashOfConfig":"53"},{"size":656,"mtime":1613941009790,"results":"100","hashOfConfig":"53"},{"size":1239,"mtime":1613214007813,"results":"101","hashOfConfig":"53"},{"size":1823,"mtime":1614623373261,"results":"102","hashOfConfig":"53"},{"size":1616,"mtime":1615407444379,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"nkwvbq",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"106"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ms374/GeoPick/src/index.tsx",[],["231","232"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",["233","234"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport WelcomeScreen from './pages/welcome screen';\nimport SignInScreen from './pages/sign-in screen/SignInForm';\nimport SignUpScreen from './pages/sign-up screen/SignupForm';\nimport CreateProfileScreen from './pages/create-profile-screen';\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\nimport { Terms } from './pages/terms/index';\nimport { HomeScreen } from './pages/home-screen/home';\nimport PostViewScreen from './pages/post-view';\nimport HelpandFeedback from './pages/helpandfeedback';\nimport SettingsScreen from './pages/settings-screen/SettingsMenu';\nimport UserPage from './pages/profile-screen/userPage';\nimport SearchScreen from './pages/search-page/index';\nimport ExploreScreen from './pages/explore-page/index';\n\nimport { UploadImage } from './pages/upload-image/index';\nimport Accessibility from './pages/accessSetting';\nimport Notification from './pages/notificationset';\nimport Notificationpg from './pages/notification';\nimport Places from './components/Inputs/Places';\nimport ViewPoints from './pages/view-points-screen/points';\nimport EditProfile from './pages/edit-profile/editProfile';\nimport LocationPicker from './components/Inputs/LocationPicker';\nimport Camera from './components/Inputs/Camera';\n\nimport WebCamFun from './pages/camera/index';\n// import GTLexpanded from './components/Display/GTLexpanded';\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Nav />\n                <Switch>\n                    <Route exact path=\"/welcome\">\n                        <WelcomeScreen />\n                    </Route>\n                    <Route exact path=\"/sign-in\">\n                        <SignInScreen />\n                    </Route>\n                    <Route exact path=\"/sign-up\">\n                        <SignUpScreen />\n                    </Route>\n                    <Route exact path=\"/create-profile\">\n                        <CreateProfileScreen />\n                    </Route>\n                    <Route exact path=\"/Set-password\">\n                        <SetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/ReSet-password\">\n                        <ReSetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/home\">\n                        <HomeScreen />\n                    </Route>\n                    <Route exact path=\"/helpnfeedback\">\n                        <HelpandFeedback />\n                    </Route>\n                    <Route exact path=\"/accessibility\">\n                        <Accessibility />\n                    </Route>\n                    <Route exact path=\"/notificationset\">\n                        <Notification />\n                    </Route>\n                    <Route exact path=\"/notification\">\n                        <Notificationpg />\n                    </Route>\n                    <Route exact path=\"/terms\">\n                        <Terms />\n                    </Route>\n                    <Route exact path=\"/settings\">\n                        <SettingsScreen />\n                    </Route>\n                    <Route path=\"/post/:catId\" component={PostViewScreen}></Route>\n                    <Route path=\"/user/:catId\" component={UserPage}></Route>\n                    <Route exact path=\"/upload-image\">\n                        <UploadImage />\n                    </Route>\n                    <Route exact path=\"/search\">\n                        <SearchScreen />\n                    </Route>\n                    <Route exact path=\"/ViewPoints\">\n                        <ViewPoints />\n                    </Route>\n                    <Route exact path=\"/EditProfile\">\n                        <EditProfile />\n                    </Route>\n                    <Route exact path=\"/webcam\">\n                        <WebCamFun />\n                    </Route>\n                    <Route exact path=\"/explore\">\n                        <ExploreScreen />\n                    </Route>\n                    <Route exact path=\"/Camera\">\n                        <Camera />\n                    </Route>\n                    {/* <Route exact path=\"/GTLexpanded\">\n                        <GTLexpanded />\n                    </Route> */}\n                </Switch>\n            </Router>\n            {/* need to populate the places in this */}\n        </div>\n    );\n}\n\nfunction Nav() {\n    return (\n        <div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/welcome\">Welcome</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-in\">Sign-In</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-up\">Sign-Up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/create-profile\">Create Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/Set-password\">Set new password</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ReSet-password\">reset password </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/home\">Home Screen</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/post\">Post View Screen</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/terms\">Terms and Conditions</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/settings\">Settings</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/helpnfeedback\">Help and Feedback</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ProfilePage\">Profile Page</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/upload-image\">Upload Image</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/accessibility\">Accessibility</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/search\">Search</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/notificationset\">Notifications</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/notification\">NotificationsPage</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ViewPoints\">View points</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/EditProfile\">Edit Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/Camera\">camera</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/explore\">Explore</Link>\n                    </li>\n\n                    {/* <li>\n                        <Link to=\"/GTLexpanded\">GTL Expanded component</Link>\n                    </li> */}\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default App;\n","/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",[],"/home/ms374/GeoPick/src/pages/camera/index.tsx",[],"/home/ms374/GeoPick/src/pages/explore-page/index.tsx",["235","236","237","238","239","240","241","242","243"],"import React, { useState, useLayoutEffect, useRef, useEffect } from 'react'\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport TextField from '../../components/Inputs/TextField';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport { Box } from '@material-ui/core';\nimport firebase from 'firebase';\nimport ProfileOverview from '../../components/Display/profileOverview';\nimport Button from '@material-ui/core/Button';\nimport SinglePostNew from '../../components/Display/singlePostNew';\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { Typography } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\n\n\n\nexport interface SearchProps {}\n\nexport default function ExploreScreen() {\n    const [posts, setPosts] = useState<any[]>([]);\n    const firstUpdate = useRef(true);\n    const [viewport, setViewport] = useState({\n        latitude: 45.4211,\n        longitude: -75.6903,\n        width: \"100%\",\n        height: \"100vh\",\n        zoom: 5\n      });\n\n    useLayoutEffect(() => {\n        if (firstUpdate.current) {\n          firstUpdate.current = false;\n          return;\n        }\n    \n        // console.log(\"componentDidUpdateFunction\");\n        firebase\n            .firestore()\n            .collection('Posts')\n            .onSnapshot((snapshot: any) => {\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\n            });\n        // console.log(posts)\n      });\n\n    // useEffect(() => {\n        \n    // });\n    return (\n        <div className=\"background\">\n            <div className=\"button\" style={{ float: 'left' }}>\n                <ArrowBackRoundedIcon />\n            </div>\n            <div className=\"image\">\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\n            </div>\n            <div id=\"titleDiv\">\n                <Card background=\"#202020\" title=\"Explore\" split={2}>\n                <ReactMapGL\n                    {...viewport}\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                    mapStyle=\"mapbox://styles/geopick2021/cklr56ufp069x18pss5neglc4\"\n                    onViewportChange={(viewport: any) => {\n                    setViewport(viewport);\n                    }}\n                >\n                    {posts.map(({id, post}) => (\n                        <Marker\n                            key={id}\n                            latitude={post.coordinates.lat}\n                            longitude={post.coordinates.lng}\n                        >\n                            <Link to={{ pathname: `/post/${id}`, state: post.uid}}>\n                                <Avatar alt={post.user_name} src={post.Image} />\n                            </Link>\n                            \n                        </Marker>\n                    ))}\n\n                </ReactMapGL>\n                 \n                  \n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx",[],"/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx",["244"],"import * as React from 'react';\nimport Card from '../../components/Layouts/Card';\nimport { Component } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './styles.scss';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport NotificationImportantRoundedIcon from '@material-ui/icons/NotificationImportantRounded';\nimport AccessibilityNewRoundedIcon from '@material-ui/icons/AccessibilityNewRounded';\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport { Link } from 'react-router-dom';\nexport interface SettingsMenuProps {}\nexport interface SettingsMenuState {\n    user: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            // backgroundColor: theme.palette.background.paper,\n            backgroundColor: '#fafafa',\n        },\n    }),\n);\n\nconst SettingsMenu = () => {\n    const classes = useStyles();\n    return (\n        <div style={{ width: '100%', height: '100%' }}>\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                <ListItem button>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccountCircleRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Account Settings\" />\n                </ListItem>\n                <Divider />\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <NotificationImportantRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Notification Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccessibilityNewRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Accessibility Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <HelpRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Help and Feedback\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <GavelRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Terms and Conditions\" />\n                </ListItem>\n            </List>\n            <Box m={5} />\n            <div>\n                <Typography variant=\"body1\" style={{ color: '#1b1b1b', textAlign: 'center' }}>\n                    Designed <span style={{ color: '#f56920' }}>& </span> Developed by<br></br>The Geo\n                    <span style={{ color: '#f56920' }}>Pic</span>K team.\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default class SettingsMenuScreen extends Component<SettingsMenuProps, SettingsMenuState> {\n    constructor(SettingsMenuProps: any) {\n        super(SettingsMenuProps);\n        this.state = {\n            user: checkUserLoggedIn(),\n        };\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n                <Toolbar>\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n                    <IconButton edge=\"end\">\n                        <Avatar alt={this.state.user.User_name} src={this.state.user.Avatar} />\n                    </IconButton>\n                </Toolbar>\n                <div style={{ color: '#fafafa' }}>\n                    <Card background=\"#fafafa\" title=\"Settings\" split={1}>\n                        <div style={{ color: 'black' }}>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <SettingsMenu />\n                            </Grid>\n                        </div>\n                    </Card>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/profile-screen/userPage.tsx",["245","246","247","248","249","250","251","252","253"],"import { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\nimport SinglePostNew from '../../components/Display/singlePostNew';\nimport ProfileOverview from '../../components/Display/profileOverview';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport firebase from 'firebase';\nimport UserFeed from '../../components/Layouts/userFeed';\n\nimport { auth } from '../../firebase';\nexport interface UserPageProps {}\n\nexport interface UserPageState {\n    posts: any;\n    user: any;\n    isAuthenticated: boolean;\n    uid: string;\n}\n\nclass UserPage extends Component<UserPageProps, UserPageState> {\n    constructor(UserPageProps: any) {\n        super(UserPageProps);\n        this.state = {\n            posts: [],\n            user: {},\n            isAuthenticated: false,\n            uid: '',\n        };\n    }\n\n    componentDidMount() {\n        const path = window.location.pathname.split('/');\n        const uid = path[path.length - 1];\n        this.getUser().then(\n            (user) => {\n                this.setState({ isAuthenticated: true, user: user, uid: uid });\n                console.log(this.state.user);\n                console.log(this.state.uid);\n            },\n            (error) => {\n                this.setState({ isAuthenticated: true });\n            },\n        );\n    }\n\n    // componentDidUpdate() {\n\n    //     const auth = checkUserLoggedIn();\n    //     if(auth != undefined){\n\n    //     }\n\n    // }\n\n    // getData = () => {\n    //     firebase\n    //         .firestore()\n    //         .collection('Posts')\n    //         .orderBy('likes_count')\n    //         .get()\n    //         .then((querySnapshot) => {\n    //             querySnapshot.forEach(function () {\n    //                 // console.log(doc.id, ' => ', doc.data());\n    //             });\n    //         })\n    //         .catch((err) => {\n    //             console.log('Error getting documents: ', err);\n    //         });\n    // };\n\n    getUser = () => {\n        const path = window.location.pathname.split('/');\n        const uid = path[path.length - 1];\n        return new Promise(function (resolve, reject) {\n            if (auth === undefined) {\n            } else {\n                firebase\n                    .firestore()\n                    .collection('users')\n                    .doc(uid)\n                    .get()\n                    .then((querySnapshot) => {\n                        const data = querySnapshot.data();\n                        const id = querySnapshot.id;\n                        if (data) {\n                            resolve(data);\n                        } else {\n                            reject('User not authenticated');\n                        }\n                    });\n            }\n        });\n    };\n\n    signOut = () => {\n        auth.doSignOut();\n    };\n\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', height: 'auto' }}>\n                <img\n                    src={WhiteLogo}\n                    alt=\"GeoPicK\"\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\n                />\n                <ProfileOverview\n                    User={this.state.user}\n                    User_name={<span style={{ fontSize: 'calc(12px + 2vw)' }}>{this.state.user.User_name}</span>}\n                    Avatar={this.state.user.Avatar}\n                    Size=\"large\"\n                />\n                <br></br>\n                <br></br>\n                <Button\n                    style={{\n                        paddingLeft: '15%',\n                        paddingRight: '15%',\n                        background: '#f56920',\n                        borderRadius: '20px',\n                        marginRight: '10%',\n                    }}\n                >\n                    <Typography variant=\"button\" style={{ color: '#fafafa' }}>\n                        Edit Profile\n                    </Typography>\n                </Button>\n\n                <Button\n                    style={{\n                        background: '#1b1b1b',\n                        border: '3px solid #f56920',\n                        borderRadius: '20px',\n                        maxWidth: '600px',\n                        margin: 'auto',\n                        paddingLeft: '5%',\n                        paddingRight: '5%',\n                    }}\n                    onClick={this.signOut}\n                >\n                    <Link to=\"/welcome\">\n                        <Typography variant=\"button\" style={{ color: '#fafafa' }}>\n                            Sign Out\n                        </Typography>\n                    </Link>\n                </Button>\n                <div style={{ margin: 'auto' }}>\n                    <Typography variant=\"h4\" style={{ color: '#fafafa', paddingTop: '25px' }}>\n                        My <span style={{ color: '#f56920' }}>Posts</span>\n                    </Typography>\n                </div>\n                <UserFeed uid={this.state.uid} />\n            </div>\n        );\n    }\n}\n\nexport default UserPage;\n","/home/ms374/GeoPick/src/pages/view-points-screen/points.tsx",["254","255","256"],"import * as React from 'react';\nimport { Component } from 'react';\nimport { Avatar, Box, Button, Card, CardHeader, Grid, Typography } from '@material-ui/core';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nexport interface ViewPointsProps {}\n\nexport interface ViewPointsState {}\n\nclass ViewPoints extends React.Component<ViewPointsProps, ViewPointsState> {\n    handleonclick() {\n        console.log('Share with friends!');\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', paddingTop: '10px', paddingBottom: '50px' }}>\n                <img\n                    src={WhiteLogo}\n                    alt=\"GeoPicK\"\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\n                />\n                <Card\n                    style={{\n                        height: '80%',\n                        width: '30em',\n                        maxWidth: '70%',\n                        margin: 'auto',\n                        padding: '20px',\n                        borderRadius: '50px',\n                    }}\n                >\n                    <Avatar\n                        src={'avatar comes here'}\n                        alt={'username comes here'}\n                        style={{ margin: 'auto', width: '100px', height: '100px', marginBottom: '20px' }}\n                    ></Avatar>\n                    <Typography variant=\"h5\" style={{ color: '#f56920' }}>\n                        {'username comes here'}\n                    </Typography>\n                    <Box m={5}></Box>\n\n                    <Typography variant=\"h6\">Congratulations, you have</Typography>\n                    <Typography variant=\"h1\" style={{ fontWeight: 'bolder' }}>\n                        {'10000'}\n                    </Typography>\n                    <Box m={-2}></Box>\n                    <Typography variant=\"h3\" style={{ color: '#f56920' }}>\n                        points\n                    </Typography>\n                    <Box m={3}></Box>\n                </Card>\n                <Button\n                    onClick={this.handleonclick}\n                    style={{\n                        background: '#f56920',\n                        color: '#fafafa',\n                        padding: '10px 20px 10px 20px',\n                        margin: 'auto',\n                        borderRadius: '20px',\n                        marginTop: '20px',\n                    }}\n                >\n                    Share it with your friends\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default ViewPoints;\n","/home/ms374/GeoPick/src/pages/search-page/index.tsx",["257","258","259"],"import React, { useState } from 'react';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport TextField from '../../components/Inputs/TextField';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport { Box } from '@material-ui/core';\nimport firebase from 'firebase';\nimport ProfileOverview from '../../components/Display/profileOverview';\nimport Button from '@material-ui/core/Button';\nimport SinglePostNew from '../../components/Display/singlePostNew';\n\nexport interface SearchProps {}\n\nexport default function SearchScreen() {\n    const [users, setUsers] = useState(Array());\n    const [posts, setPosts] = useState(Array());\n    const [userOn, setUserOn] = useState(false);\n    const [postOn, setPostOn] = useState(false);\n    const [query, setQuery] = useState('');\n\n    const toggleUser = () => {\n        setUserOn(true);\n        setPostOn(false);\n        firebase\n            .firestore()\n            .collection('users')\n            .where('User_name', '>=', query)\n            .limit(5)\n            .get()\n            .then((snapshot) => {\n                let users = snapshot.docs.map((doc) => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                setUsers(users);\n                setPosts([]);\n            });\n    };\n\n    const togglePost = () => {\n        setUserOn(false);\n        setPostOn(true);\n        firebase\n            .firestore()\n            .collection('Posts')\n            .where('tags', 'array-contains', query)\n            .limit(5)\n            .get()\n            .then((snapshot) => {\n                let posts = snapshot.docs.map((doc) => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                setPosts(posts);\n                setUsers([]);\n            });\n    };\n\n    const fetchResults = (search: React.ChangeEvent<HTMLInputElement>) => {\n        setQuery(search.target.value.toLowerCase());\n        if (userOn) {\n            toggleUser();\n        }\n        if (postOn) {\n            togglePost();\n        }\n    };\n\n    return (\n        <div className=\"background\">\n            <div className=\"button\" style={{ float: 'left' }}>\n                <ArrowBackRoundedIcon />\n            </div>\n            <div className=\"image\">\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\n            </div>\n            <div id=\"titleDiv\">\n                <Card background=\"#202020\" title=\"Search\" split={2}>\n                    <TextField\n                        id=\"standard-multiline-flexible\"\n                        label=\"Search\"\n                        variant=\"outlined\"\n                        placeholder=\"Search here...\"\n                        onChange={fetchResults}\n                    />\n                    <br></br>\n                    <Box>\n                        <Button\n                            variant=\"contained\"\n                            style={{ float: 'left', borderRadius: '20px' }}\n                            onClick={toggleUser}\n                        >\n                            Users\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            style={{ float: 'right', borderRadius: '20px' }}\n                            onClick={togglePost}\n                        >\n                            Posts\n                        </Button>\n                    </Box>\n                    <br />\n                    <br />\n                    {users.length > 0 &&\n                        users.map((data) => {\n                            // console.log(data);\n                            return (\n                                <div>\n                                    <ProfileOverview\n                                        key={data.id}\n                                        uid={data.id}\n                                        User_name={data.User_name}\n                                        Avatar={data.Avatar}\n                                        Size=\"small\"\n                                        User={data}\n                                        followers\n                                    />\n                                    <br />\n                                    <br />\n                                </div>\n                            );\n                        })}\n\n                    {posts.length > 0 &&\n                        posts.map((data) => {\n                            // console.log(data);\n                            return (\n                                <div>\n                                    <SinglePostNew\n                                        key={data.id}\n                                        id={data.id}\n                                        // profileUrl={post.profileUrl}\n                                        username={data.user_name}\n                                        postPic={data.Image}\n                                        uid={data.uid}\n                                        // caption={post.caption}\n                                        // comments={post.comments}\n                                        date={new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US')}\n                                        likes_count={data.likes_count}\n                                        caption={data.caption}\n                                        sharedURL={window.location.href}\n                                        hidden={false}\n                                        comments_count={data.comments_count}\n                                    />\n                                    <br />\n                                    <br />\n                                </div>\n                            );\n                        })}\n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/edit-profile/editProfile.tsx",["260"],"import { Avatar, Box, Button, Card, CardContent, Divider, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport TextField from '../../components/Inputs/TextField';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport OccupationSelect from '../../components/Inputs/occupation';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\n\nexport interface EditProfileProps {}\n\nexport interface EditProfileState {}\n\nclass EditProfile extends Component<EditProfileProps, EditProfileState> {\n    signOut = () => {\n        auth.doSignOut();\n    };\n\n    handleonclickSubmit() {\n        console.log('Profile edit changes!');\n    }\n    handleonclickChangePassword() {\n        console.log('Go to change password screen!');\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', height: 'auto', paddingBottom: '5em' }}>\n                <img\n                    src={WhiteLogo}\n                    alt=\"GeoPicK\"\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\n                />\n                <Card\n                    style={{\n                        background: '#1b1b1b',\n                        marginLeft: '15px',\n                        marginRight: '15px',\n                        border: '3px solid #f56920',\n                        borderRadius: '20px',\n                        marginBottom: '20px',\n                        maxWidth: '600px',\n                        margin: 'auto',\n                        paddingBottom: '1em',\n                    }}\n                >\n                    <Avatar\n                        style={{\n                            float: 'right',\n                            width: '120px',\n                            height: '120px',\n                            marginRight: '20px',\n                            marginTop: '20px',\n                        }}\n                    ></Avatar>\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\n                        {/* <Grid container direction=\"column\">\n                    <Grid item> */}\n\n                        <Typography variant=\"h3\" style={{ color: '#fafafa' }}>\n                            Hi<br></br>\n                            {\n                                <Typography variant=\"h4\" style={{ color: '#f56920' }}>\n                                    'mo.kvs_'\n                                </Typography>\n                            }\n                            {/* The username comes here */}\n                        </Typography>\n                    </CardContent>\n                    <div style={{ margin: '20px', textAlign: 'center' }}>\n                        <Box m={2}></Box>\n                        <TextField label=\"Name\" color=\"primary\"></TextField>\n                        <Box m={2}></Box>\n                        <TextField\n                            label=\"Something about yourself...\"\n                            color=\"primary\"\n                            multiline\n                            rows={1}\n                            rowsMax={4}\n                        ></TextField>\n                    </div>\n                    <Box m={3}></Box>\n                    <Button\n                        onClick={this.handleonclickSubmit}\n                        style={{\n                            background: '#f56920',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                            // marginBottom: '25px',\n                        }}\n                    >\n                        Submit changes\n                    </Button>\n\n                    <Box m={3}></Box>\n                    <Divider style={{ background: '#f56920' }} />\n                    <Box m={2}></Box>\n                    <Typography variant=\"body2\" style={{ color: '#fafafa' }}>\n                        looking for something else?\n                    </Typography>\n                    <Box m={-1}></Box>\n                    <Button\n                        onClick={this.handleonclickChangePassword}\n                        style={{\n                            // background: '#f56920',\n                            border: '3px solid #f56920',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                            // marginBottom: '5px',\n                        }}\n                    >\n                        Change Password\n                    </Button>\n                    <br></br>\n                    <Box m={-1.5}></Box>\n                    <Button\n                        style={{\n                            background: '#2f4858',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                        }}\n                        onClick={this.signOut}\n                    >\n                        <Link to=\"/welcome\">\n                            <Typography variant=\"button\" style={{ color: '#fafafa' }}>\n                                Sign Out\n                            </Typography>\n                        </Link>\n                    </Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default EditProfile;\n","/home/ms374/GeoPick/src/pages/home-screen/home.tsx",["261","262","263","264","265","266"],"import * as React from 'react';\nimport { Component } from 'react';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './homesStyles.scss';\nimport firebase from 'firebase';\nimport Feed from '../../components/Layouts/feed';\nimport { Avatar, IconButton, Toolbar, Box, AppBar, Slide } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport BottomNavigation from '../../components/NavBar/navbar';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { auth } from '../../firebase';\nimport { Link } from 'react-router-dom';\nimport SinglePostNew from '../../components/Display/singlePostNew';\nimport AvatarSmall from '../../components/Display/avatarSmall';\n\nexport interface HomeScreenProps {}\nexport interface HomeScreenState {\n    posts: any;\n    user: any;\n    isAuthenticated: boolean;\n    uid: string;\n}\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\n    constructor(HomeScreenProps: any) {\n        super(HomeScreenProps);\n        this.state = {\n            posts: [],\n            user: {},\n            isAuthenticated: false,\n            uid: '',\n        };\n    }\n\n    componentDidMount() {\n        const auth = checkUserLoggedIn();\n        if (auth != undefined) {\n            this.getUser().then(\n                (user) => {\n                    this.setState({ isAuthenticated: true, user: user, uid: auth.uid });\n                },\n                (error) => {\n                    this.setState({ isAuthenticated: true });\n                },\n            );\n        }\n    }\n\n    componentDidUpdate() {\n        firebase\n            .firestore()\n            .collection('Posts')\n            .onSnapshot((snapshot: any) => {\n                this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\n            });\n        // console.log(this.state);\n    }\n\n    // getData = () => {\n    //     firebase\n    //         .firestore()\n    //         .collection('Posts')\n    //         .orderBy('likes_count')\n    //         .get()\n    //         .then((querySnapshot) => {\n    //             querySnapshot.forEach(function () {\n    //                 // console.log(doc.id, ' => ', doc.data());\n    //             });\n    //         })\n    //         .catch((err) => {\n    //             console.log('Error getting documents: ', err);\n    //         });\n    // };\n\n    getUser = () => {\n        const auth = checkUserLoggedIn();\n        return new Promise(function (resolve, reject) {\n            if (auth === undefined) {\n            } else {\n                firebase\n                    .firestore()\n                    .collection('users')\n                    .doc(auth.uid)\n                    .get()\n                    .then((querySnapshot) => {\n                        const data = querySnapshot.data();\n                        // this.se\n                        if (querySnapshot.data()) {\n                            resolve(data);\n                        } else {\n                            reject('User not authenticated');\n                        }\n                    });\n            }\n        });\n    };\n\n    signOut = () => {\n        auth.doSignOut();\n    };\n\n    render() {\n        // console.log(\"hello\");\n        if (!this.state.isAuthenticated) return null;\n        return (\n            <div style={{ background: '#1b1b1b' }}>\n                <AppBar position=\"fixed\" style={{ background: '#1b1b1b' }}>\n                    <Toolbar style={{ position: 'relative' }}>\n                        <Link to=\"/welcome\">\n                            <IconButton edge=\"end\" onClick={this.signOut}>\n                                <ExitToAppIcon style={{ color: 'white' }} />\n                            </IconButton>\n                        </Link>\n\n                        <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n                        <AvatarSmall\n                            User={this.state.user}\n                            uid={this.state.uid}\n                            User_name={this.state.user.User_name}\n                            Avatar={this.state.user.Avatar}\n                            Size=\"small\"\n                        />\n                    </Toolbar>\n                </AppBar>\n                <SinglePostNew />\n                <Feed />\n\n                <div style={{ padding: '30px' }}></div>\n                <BottomNavigation />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/upload-image/index.tsx",["267","268"],"import { Card, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport './Styles.scss';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport firebase from 'firebase';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { Box } from '@material-ui/core';\nimport UploadIcon from '../../components/Display/uploadIcon';\nimport TextField from '../../components/Inputs/TextField';\nimport Tags from '../../components/Inputs/tags';\nimport { auth } from '../../firebase';\nimport Compress from 'react-image-file-resizer';\nimport { storage } from '../../firebase/firebase';\nimport Places from '../../components/Inputs/Places';\nexport interface UploadImageProps {}\n\nexport interface UploadImageState {\n    user: any;\n    isAuthenticated: boolean;\n    imgurl: string;\n    img: any;\n    caption: string;\n    tags: any;\n    height: number;\n    width: number;\n    rawurl: string;\n    location: any;\n    check: boolean;\n    coordinates: any;\n}\n\nexport class UploadImage extends Component<UploadImageProps, UploadImageState> {\n    constructor(UploadImageProps: any) {\n        super(UploadImageProps);\n        // firebase.auth().onAuthStateChanged(function(user) {\n        //     this.setState({ user: user });\n        // });\n        this.state = {\n            user: {},\n            isAuthenticated: false,\n            imgurl: '',\n            img: {},\n            caption: '',\n            tags: [],\n            height: 0,\n            width: 0,\n            rawurl: 'https://wallpapercave.com/wp/wp3597484.jpg',\n            location: {},\n            check: false,\n            coordinates: {},\n        };\n    }\n\n    selectedTags = (tagses: any) => {\n        this.setState({ tags: tagses });\n    };\n\n    componentDidMount() {\n        this.getUser().then(\n            (user) => {\n                this.setState({ isAuthenticated: true, user: user });\n            },\n            (error) => {\n                this.setState({ isAuthenticated: true });\n            },\n        );\n    }\n\n    getUser = () => {\n        const auth = checkUserLoggedIn();\n        return new Promise(function (resolve, reject) {\n            if (auth === undefined) {\n            } else {\n                firebase\n                    .firestore()\n                    .collection('users')\n                    .doc(auth.uid)\n                    .get()\n                    .then((querySnapshot) => {\n                        const data = querySnapshot.data();\n                        if (data) {\n                            resolve(data);\n                        } else {\n                            reject('User not authenticated');\n                        }\n                    });\n            }\n        });\n    };\n\n    onSubmit = () => {\n        const file = this.state.img;\n        const user = auth.checkUserLoggedIn();\n        const image = new Image();\n        let fr = new FileReader();\n\n        if (!user) return;\n\n        if (!this.state.check) {\n            alert('You must check the condition');\n            return;\n        }\n        fr.onload = async function () {\n            if (fr !== null && typeof fr.result == 'string') {\n                image.src = fr.result;\n                console.log('in frload');\n                console.log('frwidg', image.width);\n                console.log('frhigg', image.height);\n            }\n        };\n        fr.readAsDataURL(file);\n\n        var width = 0;\n        var height = 0;\n\n        image.onload = function () {\n            height = image.height;\n            width = image.width;\n        };\n\n        setTimeout(() => {\n            Compress.imageFileResizer(\n                file,\n                width,\n                height,\n                'JPEG',\n                50,\n                0,\n                async (uri: any) => {\n                    if (typeof uri === 'string') {\n                        const urinew = uri.split('base64,')[1];\n                        storage\n                            .ref(`/Images/${user.uid}/Posts/${file.name}`)\n                            .putString(urinew, 'base64')\n                            .then((data) => {\n                                data.ref.getDownloadURL().then((url) => {\n                                    // this.setState({ imgurl: url });\n                                    firebase\n                                        .firestore()\n                                        .collection('Posts/')\n                                        .add({\n                                            Image: url,\n                                            caption: this.state.caption,\n                                            comments: [],\n                                            comment_count: 0,\n                                            likes_count: 0,\n                                            uid: user.uid,\n                                            username: this.state.user.User_name,\n                                            post_time: new Date(),\n                                            tags: this.state.tags,\n                                            location: this.state.location,\n                                            coordinates: this.state.coordinates,\n                                        })\n                                        .then(function (docRef) {\n                                            console.log('Document written with ID: ', docRef.id);\n                                        })\n                                        .catch(function (error) {\n                                            console.error('Error adding document: ', error);\n                                        });\n                                });\n\n                                // console.log(this.state.imgurl);\n                            });\n                    }\n                },\n                'base64',\n            );\n        }, 2500);\n\n        // push('/home');\n        // console.log(postRef.documentID);\n    };\n\n    changeImage = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!event.target.files || !event.target.files[0]) return;\n        const file = await event.target.files[0];\n        this.setState({ img: file, rawurl: URL.createObjectURL(file) });\n\n        // console.log(this.state.img);\n    };\n\n    updateCaption = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ caption: event.target.value });\n    };\n\n    updateLocation = (address: string) => {\n        this.setState({ location: address });\n        // this.setState({ : event.target.value });\n        console.log(this.state.location);\n    };\n\n    updateCoordinates = (coordinates: any) => {\n        const coord = {\n            latitude: coordinates.lat,\n            longtitude: coordinates.lng,\n        };\n        this.setState({ coordinates: coordinates });\n        // this.setState({ : event.target.value });\n        console.log(this.state.coordinates);\n    };\n\n    toggleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ check: !this.state.check });\n    };\n\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', padding: '10px' }}>\n                <Typography style={{ color: '#fafafa', fontWeight: 'normal' }} variant=\"h2\">\n                    <span style={{ color: '#f56920' }}>Upload</span> Image\n                </Typography>\n                <Card\n                    style={{\n                        maxHeight: 900,\n                        maxWidth: 600,\n                        margin: 'auto',\n                        marginBlock: '20px',\n                        background: '#1b1b1b',\n                        // border: '3px solid #fafafa',\n                        borderRadius: '20px',\n                        boxShadow: 'inherit',\n                    }}\n                >\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                alt={this.state.user.User_name}\n                                src={this.state.user.Avatar}\n                                style={{ backgroundColor: 'auto' }}\n                            >\n                                {this.state.user.User_name}\n                            </Avatar>\n                        }\n                        title={<Typography variant=\"h6\">{this.state.user.User_name}</Typography>}\n                        style={{ textAlign: 'left', color: '#fafafa' }}\n                    />\n                    <CardMedia\n                        image={this.state.rawurl}\n                        title={`A Photo by ${this.state.user.User_name}`}\n                        style={{\n                            borderRadius: '20px 20px 20px 20px',\n                            height: 0,\n                            paddingTop: '56.25%',\n                            marginLeft: '10px',\n                            marginRight: '10px',\n                        }}\n                    />\n                    <Box m={-2} />\n                    <CardActions disableSpacing>\n                        <UploadIcon onChange={this.changeImage} />\n                    </CardActions>\n                </Card>\n                <CardContent>\n                    <TextField\n                        name=\"caption\"\n                        id=\"caption\"\n                        label=\"Enter Caption\"\n                        type=\"caption\"\n                        onChange={this.updateCaption}\n                    />\n                </CardContent>\n                <CardContent>\n                    <Tags selectedTags={this.selectedTags} />\n                </CardContent>\n                <CardContent>\n                    {/* <TextField label=\"Add Location\"> */}\n                    <Places updateLocation={this.updateLocation} updateCoordinates={this.updateCoordinates} />\n                    {/* </TextField> */}\n                    {/* </CardContent>\n                    <CardContent> */}\n                    <br></br>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        style={{\n                            color: '#fafafa',\n                            textAlign: 'center',\n                            fontWeight: 'lighter',\n                            width: '35%',\n                            margin: 'auto',\n                        }}\n                    >\n                        <label>\n                            <input type=\"checkbox\" name=\"Accept\" required onChange={this.toggleCheck} />\n                            By checking this box, you confirm that you are aware of the community guidelines and terms\n                            of use. Make sure that this post doesn't contain any human face.\n                        </label>\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <RegularBtn\n                        type=\"submit\"\n                        colorType=\"white\"\n                        style={{ width: '200px', borderRadius: '15px', margin: 'auto' }}\n                        onClick={this.onSubmit}\n                    >\n                        Upload Post!\n                    </RegularBtn>\n                </CardActions>\n                {/* <Places /> */}\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx",[],"/home/ms374/GeoPick/src/pages/terms/index.tsx",[],"/home/ms374/GeoPick/src/pages/notification/index.tsx",["269","270","271","272","273","274","275","276","277"],"import * as React from 'react';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Card from '../../components/Layouts/Card';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n\nexport interface NotificationpgProps {}\n\nexport default function Notificationpg() {\n\n    return (\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n            <Toolbar>\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n            </Toolbar>\n            <div style={{ color: '#fafafa' }}>\n                        <Card background=\"#202020\" title=\"Notification\" split={1}></Card>\n            </div>\n        </div>\n            )\n}","/home/ms374/GeoPick/src/pages/notificationset/index.tsx",["278","279","280","281","282","283","284","285","286"],"import * as React from 'react';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Card from '../../components/Layouts/Card';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nexport interface NotificationProps {}\n\nconst OrangeSwitch = withStyles({\n    switchBase: {\n        color: '#fafafa',\n        '&$checked': {\n            color: '#F56920',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#f56920',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst WhiteTypography = withStyles({\n    root: {\n        color: '#FAFAFA',\n        textAlign: 'left',\n    },\n})(Typography);\n\nexport default function Notification() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n            <Toolbar>\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n            </Toolbar>\n            <div style={{ color: '#fafafa' }}>\n                <Card background=\"#202020\" title=\"Notification Settings\" split={1}>\n                    <div style={{ color: 'black' }}>\n                        {/* <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\"> */}\n                        <WhiteTypography>\n                            Push notification\n                            <Box m={-3.7}></Box>\n                            <FormGroup style={{ float: 'right' }}>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedA}\n                                            onChange={handleChange}\n                                            name=\"checkedA\"\n                                        />\n                                    }\n                                    label=\"\"\n                                />\n                            </FormGroup>\n                        </WhiteTypography>\n                        {/* </Grid> */}\n                    </div>\n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/accessSetting/index.tsx",["287","288","289","290","291","292","293","294","295"],"import * as React from 'react';\nimport './styles.scss';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Card from '../../components/Layouts/Card';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nexport interface AccessibilityProps {}\n\nconst OrangeSwitch = withStyles({\n    switchBase: {\n        color: '#fafafa',\n        '&$checked': {\n            color: '#F56920',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#f56920',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst WhiteTypography = withStyles({\n    root: {\n        color: '#FAFAFA',\n        textAlign: 'left',\n    },\n})(Typography);\n\nexport default function Accessibility() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n            <Toolbar>\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n            </Toolbar>\n            <div style={{ color: '#fafafa' }}>\n                <Card background=\"#202020\" title=\"Accessibility Settings\" split={1}>\n                    <div style={{ color: 'black' }}>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Dark Mode\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedA}\n                                            onChange={handleChange}\n                                            name=\"checkedA\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                        <br></br>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Change to mono colors\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedB}\n                                            onChange={handleChange}\n                                            name=\"checkedB\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                        <br></br>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Increase overall text size\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedC}\n                                            onChange={handleChange}\n                                            name=\"checkedC\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                    </div>\n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx",[],"/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",[],"/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",[],"/home/ms374/GeoPick/src/pages/post-view/index.tsx",["296"],"/* eslint-disable no-lone-blocks */\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\nimport * as React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\nimport fb from 'firebase/app';\nimport { Component } from 'react';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SharePost from '../../components/Display/sharePost';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nexport interface PostViewState {\n    newComment: string;\n    user: any;\n    Image: string;\n    caption: string;\n    likes_count: number;\n    post_time: string;\n    user_name: string;\n    favourited: boolean;\n    post_uid: string;\n    post_user: any;\n    comments: any;\n}\n\nexport interface PostViewProps {\n    state: string;\n}\n\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\n    constructor(PostViewProps: any) {\n        super(PostViewProps);\n        this.state = {\n            favourited: false,\n            user: {},\n            Image: '',\n            caption: '',\n            likes_count: 0,\n            post_time: '',\n            user_name: '',\n            newComment: '',\n            post_uid: '',\n            post_user: {},\n            comments: [],\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        const auth = checkUserLoggedIn();\n        // console.log(pid);\n        if (auth === undefined) {\n        } else {\n            fb.firestore()\n                .collection('users')\n                .doc(auth.uid)\n                .get()\n                .then((querySnapshot) => {\n                    const data = querySnapshot.data();\n                    // console.log(data);\n                    this.setState({\n                        user: data,\n                    });\n                });\n        }\n\n        await fb\n            .firestore()\n            .collection('Posts')\n            .doc(pid)\n            .get()\n            .then((doc) => {\n                // console.log(doc.data());\n                const data = doc.data();\n                if (data) {\n                    this.setState({\n                        Image: data.Image,\n                        caption: data.caption,\n                        likes_count: data.likes_count,\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\n                        user_name: data.user_name,\n                        post_uid: data.uid,\n                        comments: data.comments,\n                    });\n                }\n            });\n\n        console.log(this.state.post_uid);\n        fb.firestore()\n            .collection('users')\n            .doc(this.state.post_uid)\n            .get()\n            .then((querySnapshot) => {\n                const data = querySnapshot.data();\n                // console.log(data);\n                this.setState({\n                    post_user: data,\n                });\n            });\n\n        this.setState({\n            favourited: false,\n        });\n    }\n\n    handleColorChange = () => {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: increment,\n            });\n            this.setState({\n                likes_count: this.state.likes_count + 1,\n            });\n        } else {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: decrement,\n            });\n            this.setState({\n                likes_count: this.state.likes_count - 1,\n            });\n        }\n    };\n\n    render() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        // console.log(uid);\n        const handleChange = (event: any) => {\n            // console.log(event.target.value);\n            this.setState({\n                newComment: event.target.value as string,\n                // user: checkUserLoggedIn(),\n            });\n        };\n\n        const handleClick = (event: any) => {\n            const FieldValue = fb.firestore.FieldValue;\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\n            fb.firestore()\n                .collection('Posts')\n                .doc(pid)\n                .update({\n                    comments: FieldValue.arrayUnion(comment),\n                    comments_count: fb.firestore.FieldValue.increment(1),\n                });\n            // console.log(`${this.state.user.User_name} : ${comment}`);\n            // console.log(this.state.user);\n            this.setState({\n                comments: [...this.state.comments, comment],\n            });\n        };\n\n        return (\n            <Card\n                style={{\n                    background: '#1b1b1b',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    margin: 'auto',\n                    width: 'auto',\n                    padding: 'auto',\n                }}\n            >\n                <Card\n                    style={{\n                        maxHeight: 800,\n                        maxWidth: 600,\n                        margin: 'auto',\n                        marginBlock: '20px',\n                        background: '#1b1b1b',\n                        borderRadius: '20px',\n                    }}\n                >\n                    <CardHeader\n                        color=\"#fafafa\"\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                alt={this.state.post_user.User_name}\n                                src={this.state.post_user.Avatar}\n                                style={{ backgroundColor: 'auto' }}\n                            >\n                                {this.state.post_user.User_name}\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\n                                <MoreVertIcon />\n                            </IconButton>\n                        }\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\n                        subheader={\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        }\n                        style={{ textAlign: 'left', color: '#fafafa' }}\n                    />\n                    <CardMedia\n                        image={this.state.Image}\n                        title=\"Paella dish\"\n                        style={{\n                            borderRadius: '20px 20px 20px 20px',\n                            height: 0,\n                            paddingTop: '56.25%',\n                            marginLeft: '10px',\n                            marginRight: '10px',\n                        }}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\n                            {this.state.caption}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <SharePost sharedURL={window.location.href} />\n                        </IconButton>\n                        {/* <IconButton\n                className={clsx(classes.expand, {\n                    [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n            >\n                <ExpandMoreIcon />\n            </IconButton> */}\n                    </CardActions>\n                </Card>\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\n                            Latest comments\n                        </Typography>\n                        <ul>\n                            {this.state.comments.map((val: string, index: any) => {\n                                return (\n                                    <li key={index}>\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\n                                            {val}\n                                        </Typography>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </Grid>\n                </Grid>\n                <InputBase\n                    onChange={handleChange}\n                    placeholder=\"Start typing...\"\n                    style={{\n                        width: '80%',\n                        // marginRight: '-12%',\n                        margin: 'auto',\n                        marginTop: '20px',\n                        marginBottom: '20px',\n                        textDecorationColor: '#FAFAFA',\n                        border: '1px solid #FAFAFA',\n                        borderRadius: '10px',\n                        height: '50px',\n                        padding: '10px',\n                        color: '#fafafa',\n                    }}\n                    endAdornment={\n                        <IconButton\n                            onClick={handleClick}\n                            aria-label=\"upload\"\n                            type=\"submit\"\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\n                        >\n                            <PublishRoundedIcon />\n                        </IconButton>\n                    }\n                />\n            </Card>\n        );\n    }\n}\n\n{\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\n                    <Grid\n                        item\n                        justify=\"flex-start\"\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\n                    >\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\n                    </Grid>\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_user.User_name}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\n                        <Card\n                            style={{\n                                color: '#F56920',\n                                borderRadius: '22px',\n                                justifyContent: 'center',\n                            }}\n                            className=\"boxField\"\n                        >\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <br></br>\n                <Grid container spacing={2} justify=\"center\">\n                    <Container>\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\n                            <img\n                                src={this.state.Image}\n                                alt=\"not loading...\"\n                                // width= \"80%\"\n                                width=\"600px\"\n                                height=\"500px\"\n                                className=\"postImage\"\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\n                            ></img>\n                        </div>\n                    </Container>\n                </Grid>\n                <br />\n                <Grid container spacing={2} justify=\"center\">\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <span>{this.state.caption}</span>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\n                >\n                    <Grid item>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {this.state.likes_count}\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <SharePost sharedURL={window.location.href} />\n                    </Grid>\n                </Grid> */\n}\n","/home/ms374/GeoPick/src/components/Layouts/userFeed.tsx",["297"],"import * as React from 'react';\nimport { useState, useEffect, useRef, useLayoutEffect } from 'react';\nimport firebase from 'firebase';\nimport SinglePostNew from '../Display/singlePostNew';\n\nexport default function UserFeed(props: any) {\n    const [posts, setPosts] = useState<any[]>([]);\n    const firstUpdate = useRef(true);\n    \n    // loadData = async () => {\n    //     const res = await fetch(\"https://api.agify.io/?name=michael\");\n    //     setData(await res.json());\n      \n    // };\n    useLayoutEffect(() => {\n        if (firstUpdate.current) {\n          firstUpdate.current = false;\n          return;\n        }\n    \n        // console.log(\"componentDidUpdateFunction\");\n        firebase\n            .firestore()\n            .collection('Posts')\n            .where('uid', '==', props.uid)\n            .onSnapshot((snapshot: any) => {\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\n            });\n        // console.log(props.uid)\n      });\n    //   console.log(props.uid)\n    return (\n        <div>\n            {posts.map(({ id, post }) => {\n                return (\n                    <SinglePostNew\n                        key={id}\n                        id={id}\n                        // profileUrl={post.profileUrl}\n                        username={post.user_name}\n                        postPic={post.Image}\n                        uid={post.uid}\n                        // caption={post.caption}\n                        // comments={post.comments}\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\n                        likes_count={post.likes_count}\n                        caption={post.caption}\n                        sharedURL={window.location.href}\n                        hidden={false}\n                        comments_count={post.comments_count}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Display/profileOverview.tsx",["298","299","300","301","302","303","304"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAvatar from './AddAvatar.png';\n// import Avatar from '@material-ui/core/Avatar';\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\nimport { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport AvatarSmall from '../../components/Display/avatarSmall';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n        width: 22,\n        height: 22,\n        border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nconst Followers = () => {\n    return (\n        <Button\n            variant=\"contained\"\n            style={{\n                padding: '5px 10px 5px 10px',\n                marginRight: '5px',\n                borderRadius: '20px',\n                float: 'right',\n                background: '#f56920',\n                color: '#fafafa',\n            }}\n        >\n            Follow\n        </Button>\n    );\n};\n\nexport default function ProfileOverview(props: any) {\n    const classes = useStyles();\n    if (props.followers === true) {\n        return (\n            <Card\n                style={{\n                    background: '#1b1b1b',\n                    marginLeft: '15px',\n                    marginRight: '15px',\n                    border: '3px solid #f56920',\n                    borderRadius: '20px',\n                }}\n            >\n                <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\n                    {/* <Grid container direction=\"column\">\n                                <Grid item> */}\n                    {/* <Avatar\n                                style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\n                            ></Avatar> */}\n                    <Grid style={{ float: 'right' }}>\n                        <AvatarSmall\n                            uid={props.uid}\n                            User_name={props.User_name}\n                            Avatar={props.Avatar}\n                            Size={props.Size}\n                        />\n                    </Grid>\n                    <Typography style={{ color: '#fafafa', fontSize: 'calc(12px + 2vw)' }}>\n                        Hi,<br></br>\n                    </Typography>\n                    <Typography style={{ color: '#f56920', fontSize: '2vw' }}>{props.User_name}</Typography>\n                    {/* </Grid>\n                                <Grid item></Grid> */}\n                    {/* </Grid> */}\n                    <br></br>\n                    {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\n                                <CardContent> */}\n                    <Button style={{ padding: '1px' }}>\n                        <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                            <span style={{ color: '#fafafa' }}>2</span>\n                            <br></br>\n                            <span style={{ color: '#f56920' }}>posts</span>\n                        </Typography>\n                        {/* Number of posts by user */}\n                    </Button>\n                    <Button style={{ padding: '1px' }}>\n                        <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                            <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\n                            <br></br>\n                            <span style={{ color: '#f56920' }}>points</span>\n                        </Typography>\n                        {/* Number of posts by user */}\n                    </Button>\n                    <Followers />\n                </CardContent>\n            </Card>\n        );\n    }\n    return (\n        <Card\n            style={{\n                background: '#1b1b1b',\n                marginLeft: '15px',\n                marginRight: '15px',\n                border: '3px solid #f56920',\n                borderRadius: '20px',\n            }}\n        >\n            <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\n                {/* <Grid container direction=\"column\">\n                            <Grid item> */}\n                {/* <Avatar\n                            style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\n                        ></Avatar> */}\n                <Grid style={{ float: 'right' }}>\n                    <AvatarSmall uid={props.uid} User_name={props.User_name} Avatar={props.Avatar} Size={props.Size} />\n                </Grid>\n                <Typography style={{ color: '#fafafa', fontSize: 'calc(12px + 2vw)' }}>\n                    Hi,<br></br>\n                </Typography>\n                <Typography style={{ color: '#f56920', fontSize: '2vw' }}>{props.User_name}</Typography>\n                {/* </Grid>\n                            <Grid item></Grid> */}\n                {/* </Grid> */}\n                <br></br>\n                {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\n                            <CardContent> */}\n                <Button style={{ padding: '1px' }}>\n                    <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                        <span style={{ color: '#fafafa' }}>2</span>\n                        <br></br>\n                        <span style={{ color: '#f56920' }}>posts</span>\n                    </Typography>\n                    {/* Number of posts by user */}\n                </Button>\n                <Button style={{ padding: '1px' }}>\n                    <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                        <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\n                        <br></br>\n                        <span style={{ color: '#f56920' }}>points</span>\n                    </Typography>\n                    {/* Number of posts by user */}\n                </Button>\n            </CardContent>\n        </Card>\n    );\n}\n","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx",["305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\nimport SharePost from './sharePost';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\nimport './singlePostStyles.scss';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport firebase from 'firebase';\nimport fb from 'firebase/app';\nimport GuessTheLocationPlay from '../Game/guessPlay';\nimport GTLicon from '../Inputs/The pin.svg';\nimport { Box, Button } from '@material-ui/core';\nimport GTLexpanded from './GTLexpanded';\nimport ReportButton from './report';\nimport GTLmenu from '../Game/GTLmenu';\n// import randomLocation from 'random-location';\n\nexport interface SinglePostNewProps {\n    username?: string;\n    postPic?: string;\n    date?: string;\n    avatar?: string;\n    uid?: string;\n    likes_count?: number;\n    caption?: string;\n    id?: string;\n    sharedURL?: string;\n    hidden?: boolean;\n    comments_count?: number;\n    location?: any;\n    otherLocs?: any;\n}\n\nexport interface SinglePostNewState {\n    favourited: boolean;\n    user: any;\n    post_user: any;\n    open_share: boolean;\n    isOpen: boolean;\n    path_name: string;\n    likes: number | undefined;\n    isAuthenticated: boolean;\n    // location1: String;\n    // location2: String;\n    // location3: String;\n    // questions: any;\n    // displayQuestions: boolean;\n    random: any;\n    locations: any;\n    gotLocs: boolean;\n    loc1: string;\n    loc2: string;\n}\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\n    constructor(SinglePostNewProps: any) {\n        super(SinglePostNewProps);\n\n        this.state = {\n            favourited: false,\n            user: checkUserLoggedIn(),\n            post_user: {},\n            likes: this.props.likes_count,\n            open_share: false,\n            isOpen: false,\n            path_name: `/post/${this.props.id}`,\n            isAuthenticated: false,\n            gotLocs: false,\n            // // questions: [{ location1: 'UAE', location2: 'Russia', location3: 'Algeria' }],\n            // questions: { correctLocation: 'Dubai', Location2: 'Sharjah', Location3: 'RAK' },\n            // displayQuestions: false,\n            random: 1,\n            locations: [],\n            loc1: '',\n            loc2: '',\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handleClickRandomizer = this.handleClickRandomizer.bind(this);\n        this.getLocations = this.getLocations.bind(this);\n        this.randomizeLocations = this.randomizeLocations.bind(this);\n        // this.GTLexpanded = this.GTLexpanded.bind(this);\n    }\n    handleClickRandomizer = () => {\n        const min = 1;\n        const max = 4;\n        const rand = Math.floor(Math.random() * (max - min) + min);\n        this.setState({ random: rand });\n    };\n\n    randomizeLocations = (locs: any) => {\n        const rand1 = Math.floor(Math.random() * this.state.random);\n        const rand2 = Math.floor(Math.random() * this.state.random);\n\n        // console.log(locs);\n        // while((this.state.locations.length == 0));\n\n        //   return (this.state.locations[rand1])\n        this.setState({ loc1: this.state.locations[rand1], loc2: this.state.locations[rand2] });\n    };\n    handleColorChange = () => {\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            console.log(this.props.id); //undefined\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: increment,\n            });\n            let like = this.state.likes ? this.state.likes + 1 : 0;\n            this.setState({ likes: like });\n        } else {\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: decrement,\n            });\n            let like = this.state.likes ? this.state.likes - 1 : 0;\n            this.setState({ likes: like });\n        }\n    };\n    share_area = React.createRef();\n\n    componentDidMount() {\n        this.getUser().then(\n            (user) => {\n                this.setState({ isAuthenticated: true, post_user: user });\n            },\n            (error) => {\n                this.setState({ isAuthenticated: true });\n            },\n        );\n\n        this.getLocations(this.props.location).then(\n            (locs) => {\n                this.setState({ gotLocs: true, locations: locs });\n                this.randomizeLocations(locs);\n            },\n            (error) => {\n                this.setState({ gotLocs: false });\n            },\n        );\n\n        // this.getLocations(this.props.location);\n        // const loc = this.props.location\n\n        // console.log(this.state.locations);\n        // const loc = []\n\n        // console.log(this.state.locations)\n    }\n\n    getLocations = (loc: string) => {\n        var locs = new Array();\n\n        return new Promise((resolve, reject) => {\n            let locs = new Array();\n            const snapshot = firebase\n                .firestore()\n                .collection('Posts')\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\n                            locs.push(doc.data().location);\n                        }\n                    });\n                    resolve(locs);\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        });\n\n        return new Promise(function (resolve, reject) {\n            firebase\n                .firestore()\n                .collection('Posts')\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\n                            locs = [...locs, doc.data().location];\n                        }\n                    });\n                });\n            if (locs) {\n                resolve(locs);\n            } else {\n                reject('not loading locations');\n            }\n        });\n    };\n\n    getUser = () => {\n        const uid = this.props.uid;\n        return new Promise(function (resolve, reject) {\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(uid)\n                .get()\n                .then((querySnapshot) => {\n                    const data = querySnapshot.data();\n                    if (data) {\n                        resolve(data);\n                    } else {\n                        reject('User not authenticated');\n                    }\n                });\n        });\n    };\n\n    handleButtonClick = () => {\n        this.setState((state) => {\n            return {\n                open_share: !state.open_share,\n            };\n        });\n    };\n\n    // GTLexpanded = () => {\n    //     this.setState((state) => {\n    //         return { displayQuestions: !this.state.displayQuestions };\n    //     });\n    // };\n\n    render() {\n        // const classes = useStyles();\n        const path = window.location.href.split('/');\n        const root = path[path.length - 2];\n\n        // let questions = null;\n        // if (this.state.displayQuestions) {\n        //     console.log(\"Entered GTL\")\n        //     return (questions = (\n        //         <div>\n\n        //         </div>\n        //     ));\n        // }\n        if (!this.state.isAuthenticated) return null;\n        if (!this.state.gotLocs) return null;\n        return (\n            <Card\n                style={{\n                    maxHeight: 800,\n                    maxWidth: 600,\n                    margin: 'auto',\n                    marginBlock: '20px',\n                    background: '#1b1b1b',\n                    // border: '3px solid #fafafa',\n                    borderRadius: '20px',\n                }}\n            >\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            aria-label=\"recipe\"\n                            alt={this.state.post_user.User_name}\n                            src={this.state.post_user.Avatar}\n                            style={{ backgroundColor: 'auto' }}\n                        >\n                            {this.state.post_user.User_name}\n                        </Avatar>\n                    }\n                    action={\n                        <>\n                            {/* <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\n                                <MoreVertIcon />\n                            </IconButton> */}\n                            <ReportButton />\n                        </>\n                    }\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\n                    subheader={\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\n                    }\n                    style={{ textAlign: 'left', color: '#fafafa' }}\n                />\n                <CardMedia\n                    image={this.props.postPic}\n                    title={`A Photo by ${this.state.post_user.User_name}`}\n                    style={{\n                        borderRadius: '20px 20px 20px 20px',\n                        height: 0,\n                        paddingTop: '56.25%',\n                        marginLeft: '10px',\n                        marginRight: '10px',\n                    }}\n                />\n                <CardContent>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        style={{ color: '#fafafa', textAlign: 'center' }}\n                    >\n                        {this.props.caption}\n                    </Typography>\n                </CardContent>\n                <Box m={-2} />\n                <CardActions disableSpacing>\n                    <IconButton\n                        aria-label=\"add to favorites\"\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                        onClick={this.handleColorChange}\n                    >\n                        <FavoriteIcon />\n                        {<Typography style={{ color: '#fafafa' }}>{this.state.likes}</Typography>}\n                    </IconButton>\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\n                            <AddCommentRoundedIcon />\n                            <span>\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\n                            </span>\n                        </IconButton>\n                    </Link>\n                    <Box m={1} />\n                    <IconButton aria-label=\"share\">\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\n                    </IconButton>\n                    <div\n                        style={{ float: 'right', marginRight: '10px', marginLeft: 'auto' }}\n                        onClick={this.handleClickRandomizer}\n                    >\n                        <GTLmenu\n                            location2={this.state.loc1}\n                            correctLocation={this.props.location}\n                            location3={this.state.loc2}\n                            order={this.state.random}\n                            uid={this.props.uid}\n                        />\n                    </div>\n\n                    {/* {this.state.displayQuestions &&\n                        this.state.questions.map( \n                            (item: any) => (location1: String, location2: String, location3: String) => {\n                                console.log('Entered GTL');\n                                return (\n                                    <div key={item}>\n                                        <GTLexpanded\n                                            location1={location1}\n                                            location2={location2}\n                                            location3={location3}\n                                        />\n                                    </div>\n                                );\n                            },\n                        )}\n                    {!this.state.displayQuestions && (\n                    <Button\n                        style={{\n                            padding: '5px 20px 5px 20px',\n                            // position: 'static',\n                            // // float: 'right',\n                            // right: '200px',\n                            marginLeft: 'auto',\n                            marginRight: '3px',\n                            background: '#202020',\n                            color: '#F56920',\n                            borderRadius: '20px',\n                            fontSize: '10px',\n                        }}\n                        onClick={this.GTLexpanded} ////////BUGGY LINE: do not uncomment until debugged/////////\n                        variant=\"contained\"\n                        endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\n                    >\n                        Guess The\n                        <br></br>\n                        Location\n                    </Button>\n                    )} */}\n\n                    {/* <div>{questions}</div> */}\n                    {/* <div>\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\n                    </div> */}\n\n                    {/* <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton> */}\n                </CardActions>\n            </Card>\n        );\n    }\n}\nexport default SinglePostNew;\n","/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/firebase/auth.ts",[],"/home/ms374/GeoPick/src/components/Display/report.tsx",["317"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nimport { IconButton } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nexport default function ReportButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleReport = () => {\n        // setAnchorEl(null);\n        console.log('post reported!');\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {/* <Button  >\n        Open with fade transition\n      </Button> */}\n            <IconButton\n                aria-label=\"settings\"\n                aria-controls=\"fade-menu\"\n                aria-haspopup=\"true\"\n                style={{ color: '#fafafa' }}\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleReport}>Report post</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/components/Game/GTLmenu.tsx",["318","319","320"],"import React from 'react';\nimport { Menu, MenuItem, MenuButton, MenuHeader } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport { Button, Typography } from '@material-ui/core';\nimport GTLicon from '../Inputs/The pin.svg';\nimport fb from 'firebase/app';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nexport default function GTLmenus(props: {\n    correctLocation: String;\n    location2: String;\n    location3: String;\n    order: Number;\n    uid?: string;\n}) {\n    const [openCorrect, setOpenCorrect] = React.useState(false);\n    const [openWrong, setOpenWrong] = React.useState(false);\n\n    const handleClickRightAns = () => {\n        const increment = fb.firestore.FieldValue.increment(10);\n        if (props.uid !== undefined) {\n            fb.firestore().collection('users').doc(props.uid).update({\n                GamePoint: increment,\n            });\n        }\n        setOpenCorrect(true);\n    };\n\n    const handleCloseRightAns = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenCorrect(false);\n    };\n\n    const handleClickWrongAns = () => {\n        const decrement = fb.firestore.FieldValue.increment(-5);\n        if (props.uid !== undefined) {\n            fb.firestore().collection('users').doc(props.uid).update({\n                GamePoint: decrement,\n            });\n        }\n\n        setOpenWrong(true);\n    };\n\n    const handleCloseWrongAns = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenWrong(false);\n    };\n    if (props.order === 1) {\n        return (\n            <>\n                <Menu\n                    styles={{\n                        background: '#1b1b1b',\n                        color: '#fafafa',\n                        width: '80%',\n                        borderRadius: '20px',\n                        border: '2px solid #F56920',\n                    }}\n                    menuButton={\n                        <Button\n                            style={{\n                                padding: '5px 20px 5px 20px',\n                                // position: 'static',\n                                float: 'right',\n                                // right: '200px',\n                                marginLeft: 'auto',\n                                marginRight: '10px',\n                                background: '#202020',\n                                color: '#F56920',\n                                borderRadius: '20px',\n                                fontSize: '10px',\n                                width: '160px',\n                                borderColor: 'solid 3px #F56920',\n                            }}\n                            variant=\"contained\"\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\n                        >\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\n                                Guess The Location\n                            </Typography>\n                        </Button>\n                    }\n                    direction=\"top\"\n                    overflow=\"hidden\"\n                >\n                    <MenuHeader color=\"primary\">\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\n                            Pick a place\n                        </Typography>\n                    </MenuHeader>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickRightAns}\n                        >\n                            {props.correctLocation}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location2}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location3}\n                        </Button>\n                    </MenuItem>\n                </Menu>\n                <Snackbar\n                    open={openCorrect}\n                    autoHideDuration={2000}\n                    onClose={handleCloseRightAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseRightAns}\n                        severity=\"success\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        Woohoo! You guessed the right location!👏\n                    </Alert>\n                </Snackbar>\n                <Snackbar\n                    open={openWrong}\n                    autoHideDuration={2000}\n                    onClose={handleCloseWrongAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseWrongAns}\n                        severity=\"error\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        sorry, you guessed it wrong!😞 Better luck next time👍\n                    </Alert>\n                </Snackbar>\n            </>\n        );\n    } else if (props.order === 2) {\n        return (\n            <>\n                <Menu\n                    styles={{\n                        background: '#1b1b1b',\n                        color: '#fafafa',\n                        width: '80%',\n                        borderRadius: '20px',\n                        border: '2px solid #F56920',\n                    }}\n                    menuButton={\n                        <Button\n                            style={{\n                                padding: '5px 20px 5px 20px',\n                                // position: 'static',\n                                float: 'right',\n                                // right: '200px',\n                                marginLeft: 'auto',\n                                marginRight: '10px',\n                                background: '#202020',\n                                color: '#F56920',\n                                borderRadius: '20px',\n                                fontSize: '10px',\n                                width: '160px',\n                                borderColor: 'solid 3px #F56920',\n                            }}\n                            variant=\"contained\"\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\n                        >\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\n                                Guess The Location\n                            </Typography>\n                        </Button>\n                    }\n                    direction=\"top\"\n                    overflow=\"hidden\"\n                >\n                    <MenuHeader color=\"primary\">\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\n                            Pick a place\n                        </Typography>\n                    </MenuHeader>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location2}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickRightAns}\n                        >\n                            {props.correctLocation}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location3}\n                        </Button>\n                    </MenuItem>\n                </Menu>\n                <Snackbar\n                    open={openCorrect}\n                    autoHideDuration={2000}\n                    onClose={handleCloseRightAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseRightAns}\n                        severity=\"success\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        Woohoo! You guessed the right location!👏\n                    </Alert>\n                </Snackbar>\n                <Snackbar\n                    open={openWrong}\n                    autoHideDuration={2000}\n                    onClose={handleCloseWrongAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseWrongAns}\n                        severity=\"error\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        sorry, you guessed it wrong!😞 Better luck next time👍\n                    </Alert>\n                </Snackbar>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <Menu\n                    styles={{\n                        background: '#1b1b1b',\n                        color: '#fafafa',\n                        width: '80%',\n                        borderRadius: '20px',\n                        border: '2px solid #F56920',\n                    }}\n                    menuButton={\n                        <Button\n                            style={{\n                                padding: '5px 20px 5px 20px',\n                                // position: 'static',\n                                float: 'right',\n                                // right: '200px',\n                                marginLeft: 'auto',\n                                marginRight: '10px',\n                                background: '#202020',\n                                color: '#F56920',\n                                borderRadius: '20px',\n                                fontSize: '10px',\n                                width: '160px',\n                                borderColor: 'solid 3px #F56920',\n                            }}\n                            variant=\"contained\"\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\n                        >\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\n                                Guess The Location\n                            </Typography>\n                        </Button>\n                    }\n                    direction=\"top\"\n                    overflow=\"hidden\"\n                >\n                    <MenuHeader color=\"primary\">\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\n                            Pick a place\n                        </Typography>\n                    </MenuHeader>\n\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location2}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickWrongAns}\n                        >\n                            {props.location3}\n                        </Button>\n                    </MenuItem>\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\n                        <Button\n                            style={{\n                                // marginLeft: '3px',\n                                // marginRight: '3px',\n                                textAlign: 'center',\n                                fontSize: '10px',\n                                marginBottom: '5px',\n                                background: '#fafafa',\n                                width: '90%',\n                                borderRadius: '20px',\n                                margin: 'auto',\n                            }}\n                            onClick={handleClickRightAns}\n                        >\n                            {props.correctLocation}\n                        </Button>\n                    </MenuItem>\n                </Menu>\n                <Snackbar\n                    open={openCorrect}\n                    autoHideDuration={2000}\n                    onClose={handleCloseRightAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseRightAns}\n                        severity=\"success\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        Woohoo! You guessed the right location!👏\n                    </Alert>\n                </Snackbar>\n                <Snackbar\n                    open={openWrong}\n                    autoHideDuration={2000}\n                    onClose={handleCloseWrongAns}\n                    style={{ marginBottom: '50px' }}\n                >\n                    <Alert\n                        onClose={handleCloseWrongAns}\n                        severity=\"error\"\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\n                    >\n                        sorry, you guessed it wrong!😞 Better luck next time👍\n                    </Alert>\n                </Snackbar>\n            </>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/components/Display/sharePost.tsx",[],"/home/ms374/GeoPick/src/firebase/firebase.ts",[],"/home/ms374/GeoPick/src/firebase/db.ts",[],"/home/ms374/GeoPick/src/components/Display/avatarSmall.tsx",["321","322","323","324","325","326","327"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(24),\n        height: theme.spacing(24),\n    },\n}));\n\nexport default function AvatarSmall(props: any) {\n    const [user, setUser] = useState({});\n    \n    const classes = useStyles();\n    if (props.uid != undefined)\n    return (\n                <Link to={{ pathname: `/user/${props.uid}`, state: props.uid }}>\n                <IconButton edge=\"end\">\n                    {props.Size == \"small\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\n                    }\n                    {props.Size == \"large\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\n                    }\n                </IconButton>\n                </Link>\n    );\n    else return (\n        <IconButton edge=\"end\">\n                    {props.Size == \"small\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\n                    }\n                    {props.Size == \"large\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\n                    }\n        </IconButton>\n    );\n}\n","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/Places.tsx",["328","329","330"],"import React, { useEffect } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport TextField from './TextField';\n\nexport default function Places(props: any) {\n    const [address, setAddress] = React.useState('');\n    const [coordinates, setCoordinates] = React.useState({\n        lat: null,\n        lng: null,\n    });\n\n    // console.log(coordinates);\n    // console.log(address);\n    \n\n    const handleSelect = async (value: any) => {\n        geocodeByAddress(value)\n        .then(results => getLatLng(results[0]))\n        .then(latLng =>  props.updateCoordinates(latLng))\n        .catch(error => console.error('Error', error));\n        setAddress(value);\n        props.updateLocation(address);\n    };\n\n    return (\n        <div>\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div>\n                        {/* <p>Latitude: {coordinates.lat}</p>\n                        <p>Longitude: {coordinates.lng}</p> */}\n\n                        <TextField {...getInputProps({ placeholder: 'Add Location' })} />\n\n                        <div>\n                            {loading ? <div>...loading</div> : null}\n\n                            {suggestions.map((suggestion) => {\n                                const style = {\n                                    backgroundColor: suggestion.active ? '#41b6e6' : '#fff',\n                                };\n\n                                return (\n                                    <div {...getSuggestionItemProps(suggestion, { style })}>\n                                        {suggestion.description}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                )}\n            </PlacesAutocomplete>\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx",["331","332","333","334","335","336"],"/home/ms374/GeoPick/src/components/Inputs/tags.tsx",["337","338","339","340"],"import React from 'react';\nimport './tags.scss';\nimport Textfield from './TextField';\n\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles, Chip, Typography } from '@material-ui/core';\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\nconst Tags = (props: any) => {\n    const [tags, setTags] = React.useState(Array());\n\n    const addTags = (event: any) => {\n        if (event.key === 'Enter' && event.target.value !== '') {\n            setTags([...tags, event.target.value.toLowerCase()]);\n            props.selectedTags([...tags, event.target.value.toLowerCase()]);\n            event.target.value = '';\n        }\n    };\n    const removeTags = (index: any) => {\n        setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\n    };\n    return (\n        <>\n            {/* <label htmlFor=\"tags-input\"> */}\n            <Textfield\n                // variant=\"filled\"\n                // fullWidth\n                // className=\"tags-input\"\n                label=\"Add tags\"\n                onKeyUp={(event) => addTags(event)}\n            />\n            {/* </label> */}\n            <div className=\"tags-input\">\n                <ul id=\"tags\">\n                    <Typography variant=\"h6\" style={{ color: '#fafafa', marginRight: '5px', fontSize: '20px' }}>\n                        Selected\n                        <span style={{ color: '#f56920' }}> tags:</span>\n                    </Typography>\n                    {tags.map((tag, index) => (\n                        <li key={index} className=\"tag\">\n                            {/* <span className=\"tag-title\">{tag}</span>\n                        <span className=\"tag-close-icon\" onClick={() => removeTags(index)}>\n                            x\n                        </span> */}\n                            <Chip\n                                label={tag}\n                                onDelete={() => removeTags(index)}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                style={{ color: '#fafafa' }}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            {/* <input type=\"text\" id=\"tags-input\" style={{ display: 'none' }} placeholder=\"Press enter to add tags\" /> */}\n        </>\n    );\n};\nexport default Tags;\n","/home/ms374/GeoPick/src/components/Layouts/feed.tsx",["341","342","343"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport SinglePostNew from '../Display/singlePostNew';\nimport Post from \"./Posts\";\n\nexport default function Feed() {\n    const [posts, setPosts] = useState<any[]>([]);\n    const [lastKey, setLastKey] = useState(\"\" as unknown  as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>);\n    const [nextPosts_loading, setNextPostsLoading] = useState(false);\n    const [locations, setLocations] = useState<any[]>([]);\n\n    // useEffect(() => {\n    //     firebase\n    //         .firestore()\n    //         .collection('Posts')\n    //         .onSnapshot((snapshot: any) => {\n    //             setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\n    //         });\n    // }, []);\n\n    useEffect(() => {\n        // first 5 posts\n        Post.postsFirstBatch()\n          .then((res) => {\n            if (res) {\n            setPosts(res.posts);\n            console.log(res.posts[0])\n            setLastKey(res.lastKey);\n          } else return\n        })\n          .catch((err) => {\n            console.log(err);\n          });\n\n          \n\n      }, []);\n\n\n      \n\n      const fetchMorePosts = (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\n          console.log(\"hello thereee\")\n        if (key ) {\n          setNextPostsLoading(true);\n          Post.postsNextBatch(key)\n            .then((res) => {\n              if (res) {\n              setLastKey(res.lastKey);\n              // add new posts to old posts\n              setPosts(posts.concat(res.posts));\n              setNextPostsLoading(false);\n            } else return\n          })\n            .catch((err) => {\n              console.log(err);\n              setNextPostsLoading(false);\n            });\n        }\n      };\n    \n    const allPosts = (\n        <div>\n            {posts.map((post) => {\n                if (post) {\n                  // console.log(\"feed id\", post)\n                  // const loc = getLocations(post.location);\n                  return (\n                    <SinglePostNew\n                        key={post.id}\n                        id={post.id}\n                        // profileUrl={post.profileUrl}\n                        username={post.user_name}\n                        postPic={post.Image}\n                        uid={post.uid}\n                        // caption={post.caption}\n                        // comments={post.comments}\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\n                        likes_count={post.likes_count}\n                        caption={post.caption}\n                        sharedURL={window.location.href}\n                        hidden={false}\n                        comments_count={post.comments_count}\n                        location = {post.location}\n                        // otherLocs = {getLocations(post.location)}\n                    />\n                );\n                } else return;\n            })}\n        </div>\n    );\n    // console.log(lastKey)\n    return (\n        // <div>\n        //     {posts.map(({ id, post }) => {\n        //         return (\n        //             <SinglePostNew\n        //                 key={id}\n        //                 id={id}\n        //                 // profileUrl={post.profileUrl}\n        //                 username={post.user_name}\n        //                 postPic={post.Image}\n        //                 uid={post.uid}\n        //                 // caption={post.caption}\n        //                 // comments={post.comments}\n        //                 date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\n        //                 likes_count={post.likes_count}\n        //                 caption={post.caption}\n        //                 sharedURL={window.location.href}\n        //                 hidden={false}\n        //                 comments_count={post.comments_count}\n        //             />\n        //         );\n        //     })}\n        // </div>\n        <div>\n            <div>{posts ? allPosts : null}</div>\n            <div style={{ textAlign: \"center\" }}>\n        {nextPosts_loading ? (\n          <p>Loading..</p>\n        ) : ((lastKey) ? (\n          <button onClick={() => fetchMorePosts(lastKey)}>More Posts</button>\n        ) : (\n          <span>You are up to date!</span>\n        ))}\n      </div>\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx",["344"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport UploadIcon from '../Display/uploadIcon';\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 50,\n    },\n    list: {\n        marginBottom: theme.spacing(10),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        justifyContent: 'space-evenly',\n        // marginTop: 20,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function LabelBottomNavigation() {\n    // const classes = useStyles();\n    // const [value, setValue] = React.useState('recents');\n\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    //     setValue(newValue);\n    // };\n\n    // return (\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\n    //     </BottomNavigation>\n    // );\n\n    \n    const classes = useStyles();\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <HomeRoundedIcon />\n                </IconButton>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <SearchRoundedIcon />\n                </IconButton>\n                <UploadIcon/>\n                <div className={classes.grow} />\n                <IconButton color=\"inherit\">\n                    <ExploreRoundedIcon/>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                    <SettingsRoundedIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","/home/ms374/GeoPick/src/components/Display/Avatar.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/Posts.tsx",["345"],"import firebase from 'firebase';\n\nexport default {\n  /**\n   * this function will be fired when you first time run the app,\n   * and it will fetch first 5 posts, here I retrieve them in descending order, until the last added post appears first.\n   */\n  postsFirstBatch: async function () {\n    try {\n      const data = await firebase\n      .firestore()\n      .collection('Posts')\n      .orderBy('likes_count')\n        .limit(5)\n        .get();\n\n      let posts:Array<any> = [];\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\n      data.forEach((doc) => {\n        posts.push({...doc.data(), id: doc.id});\n        \n        lastKey = (doc)\n      });\n      console.log(lastKey)\n      return { posts, lastKey };\n    } catch (e) {\n      console.log(e);\n    }\n  },\n\n  /**\n   * this function will be fired each time the user click on 'More Posts' button,\n   * it receive key of last post in previous batch, then fetch next 5 posts\n   * starting after last fetched post.  \n   */\n  postsNextBatch: async (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\n    try {\n      const data = await firebase\n      .firestore()\n      .collection('Posts')\n      .orderBy('likes_count')\n        .startAfter(key)\n        .limit(5)\n        .get();\n\n      let posts:Array<any> = [];\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\n\n      data.forEach((doc) => {\n        posts.push({...doc.data(), id: doc.id});\n        lastKey = (doc);\n      });\n      \n      return { posts, lastKey };\n    } catch (e) {\n      console.log(e);\n    }\n  }\n};","/home/ms374/GeoPick/src/components/Inputs/Camera.tsx",["346","347","348","349"],{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":23,"column":8,"nodeType":"356","messageId":"357","endLine":23,"endColumn":14},{"ruleId":"354","severity":1,"message":"358","line":26,"column":8,"nodeType":"356","messageId":"357","endLine":26,"endColumn":22},{"ruleId":"354","severity":1,"message":"359","line":1,"column":52,"nodeType":"356","messageId":"357","endLine":1,"endColumn":61},{"ruleId":"354","severity":1,"message":"360","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"354","severity":1,"message":"361","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":17},{"ruleId":"354","severity":1,"message":"362","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":13},{"ruleId":"354","severity":1,"message":"363","line":9,"column":8,"nodeType":"356","messageId":"357","endLine":9,"endColumn":23},{"ruleId":"354","severity":1,"message":"364","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":14},{"ruleId":"354","severity":1,"message":"365","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":21},{"ruleId":"354","severity":1,"message":"366","line":12,"column":30,"nodeType":"356","messageId":"357","endLine":12,"endColumn":35},{"ruleId":"354","severity":1,"message":"367","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":20},{"ruleId":"354","severity":1,"message":"368","line":20,"column":10,"nodeType":"356","messageId":"357","endLine":20,"endColumn":14},{"ruleId":"354","severity":1,"message":"369","line":1,"column":10,"nodeType":"356","messageId":"357","endLine":1,"endColumn":16},{"ruleId":"354","severity":1,"message":"370","line":1,"column":26,"nodeType":"356","messageId":"357","endLine":1,"endColumn":30},{"ruleId":"354","severity":1,"message":"371","line":1,"column":32,"nodeType":"356","messageId":"357","endLine":1,"endColumn":43},{"ruleId":"354","severity":1,"message":"372","line":1,"column":45,"nodeType":"356","messageId":"357","endLine":1,"endColumn":55},{"ruleId":"354","severity":1,"message":"373","line":1,"column":57,"nodeType":"356","messageId":"357","endLine":1,"endColumn":61},{"ruleId":"354","severity":1,"message":"374","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":19},{"ruleId":"354","severity":1,"message":"365","line":7,"column":8,"nodeType":"356","messageId":"357","endLine":7,"endColumn":21},{"ruleId":"354","severity":1,"message":"375","line":9,"column":10,"nodeType":"356","messageId":"357","endLine":9,"endColumn":27},{"ruleId":"354","severity":1,"message":"376","line":87,"column":31,"nodeType":"356","messageId":"357","endLine":87,"endColumn":33},{"ruleId":"354","severity":1,"message":"377","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":19},{"ruleId":"354","severity":1,"message":"372","line":3,"column":37,"nodeType":"356","messageId":"357","endLine":3,"endColumn":47},{"ruleId":"354","severity":1,"message":"373","line":3,"column":49,"nodeType":"356","messageId":"357","endLine":3,"endColumn":53},{"ruleId":"354","severity":1,"message":"360","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":16,"column":40,"nodeType":"380","messageId":"381","endLine":16,"endColumn":47,"fix":"382"},{"ruleId":"378","severity":1,"message":"379","line":17,"column":40,"nodeType":"380","messageId":"381","endLine":17,"endColumn":47,"fix":"383"},{"ruleId":"354","severity":1,"message":"384","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":24},{"ruleId":"354","severity":1,"message":"369","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":16},{"ruleId":"354","severity":1,"message":"362","line":7,"column":39,"nodeType":"356","messageId":"357","endLine":7,"endColumn":42},{"ruleId":"354","severity":1,"message":"385","line":7,"column":52,"nodeType":"356","messageId":"357","endLine":7,"endColumn":57},{"ruleId":"354","severity":1,"message":"386","line":8,"column":8,"nodeType":"356","messageId":"357","endLine":8,"endColumn":19},{"ruleId":"354","severity":1,"message":"387","line":9,"column":8,"nodeType":"356","messageId":"357","endLine":9,"endColumn":24},{"ruleId":"388","severity":1,"message":"389","line":38,"column":18,"nodeType":"390","messageId":"391","endLine":38,"endColumn":20},{"ruleId":"354","severity":1,"message":"392","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":18},{"ruleId":"354","severity":1,"message":"393","line":200,"column":15,"nodeType":"356","messageId":"357","endLine":200,"endColumn":20},{"ruleId":"354","severity":1,"message":"394","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":28},{"ruleId":"354","severity":1,"message":"373","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"367","line":4,"column":16,"nodeType":"356","messageId":"357","endLine":4,"endColumn":26},{"ruleId":"354","severity":1,"message":"362","line":4,"column":28,"nodeType":"356","messageId":"357","endLine":4,"endColumn":31},{"ruleId":"354","severity":1,"message":"369","line":6,"column":10,"nodeType":"356","messageId":"357","endLine":6,"endColumn":16},{"ruleId":"354","severity":1,"message":"392","line":6,"column":18,"nodeType":"356","messageId":"357","endLine":6,"endColumn":28},{"ruleId":"354","severity":1,"message":"395","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":20},{"ruleId":"354","severity":1,"message":"396","line":7,"column":22,"nodeType":"356","messageId":"357","endLine":7,"endColumn":27},{"ruleId":"354","severity":1,"message":"397","line":7,"column":29,"nodeType":"356","messageId":"357","endLine":7,"endColumn":41},{"ruleId":"354","severity":1,"message":"394","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":28},{"ruleId":"354","severity":1,"message":"373","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"369","line":6,"column":10,"nodeType":"356","messageId":"357","endLine":6,"endColumn":16},{"ruleId":"354","severity":1,"message":"392","line":6,"column":18,"nodeType":"356","messageId":"357","endLine":6,"endColumn":28},{"ruleId":"354","severity":1,"message":"396","line":7,"column":22,"nodeType":"356","messageId":"357","endLine":7,"endColumn":27},{"ruleId":"354","severity":1,"message":"397","line":7,"column":29,"nodeType":"356","messageId":"357","endLine":7,"endColumn":41},{"ruleId":"354","severity":1,"message":"398","line":8,"column":10,"nodeType":"356","messageId":"357","endLine":8,"endColumn":16},{"ruleId":"354","severity":1,"message":"399","line":11,"column":18,"nodeType":"356","messageId":"357","endLine":11,"endColumn":32},{"ruleId":"354","severity":1,"message":"400","line":11,"column":34,"nodeType":"356","messageId":"357","endLine":11,"endColumn":45},{"ruleId":"354","severity":1,"message":"394","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":28},{"ruleId":"354","severity":1,"message":"373","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":14},{"ruleId":"354","severity":1,"message":"369","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":16},{"ruleId":"354","severity":1,"message":"392","line":7,"column":18,"nodeType":"356","messageId":"357","endLine":7,"endColumn":28},{"ruleId":"354","severity":1,"message":"396","line":8,"column":22,"nodeType":"356","messageId":"357","endLine":8,"endColumn":27},{"ruleId":"354","severity":1,"message":"397","line":8,"column":29,"nodeType":"356","messageId":"357","endLine":8,"endColumn":41},{"ruleId":"354","severity":1,"message":"398","line":9,"column":10,"nodeType":"356","messageId":"357","endLine":9,"endColumn":16},{"ruleId":"354","severity":1,"message":"399","line":12,"column":18,"nodeType":"356","messageId":"357","endLine":12,"endColumn":32},{"ruleId":"354","severity":1,"message":"400","line":12,"column":34,"nodeType":"356","messageId":"357","endLine":12,"endColumn":45},{"ruleId":"354","severity":1,"message":"401","line":2,"column":54,"nodeType":"356","messageId":"357","endLine":2,"endColumn":63},{"ruleId":"354","severity":1,"message":"359","line":2,"column":20,"nodeType":"356","messageId":"357","endLine":2,"endColumn":29},{"ruleId":"354","severity":1,"message":"392","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":18},{"ruleId":"354","severity":1,"message":"402","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":17},{"ruleId":"354","severity":1,"message":"374","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":19},{"ruleId":"354","severity":1,"message":"372","line":7,"column":45,"nodeType":"356","messageId":"357","endLine":7,"endColumn":55},{"ruleId":"354","severity":1,"message":"368","line":8,"column":10,"nodeType":"356","messageId":"357","endLine":8,"endColumn":14},{"ruleId":"354","severity":1,"message":"403","line":22,"column":7,"nodeType":"356","messageId":"357","endLine":22,"endColumn":18},{"ruleId":"354","severity":1,"message":"404","line":49,"column":11,"nodeType":"356","messageId":"357","endLine":49,"endColumn":18},{"ruleId":"354","severity":1,"message":"405","line":1,"column":28,"nodeType":"356","messageId":"357","endLine":1,"endColumn":36},{"ruleId":"354","severity":1,"message":"406","line":15,"column":8,"nodeType":"356","messageId":"357","endLine":15,"endColumn":20},{"ruleId":"354","severity":1,"message":"407","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":28},{"ruleId":"354","severity":1,"message":"408","line":22,"column":8,"nodeType":"356","messageId":"357","endLine":22,"endColumn":15},{"ruleId":"354","severity":1,"message":"364","line":23,"column":15,"nodeType":"356","messageId":"357","endLine":23,"endColumn":21},{"ruleId":"354","severity":1,"message":"409","line":24,"column":8,"nodeType":"356","messageId":"357","endLine":24,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":166,"column":20,"nodeType":"410","messageId":"381","endLine":166,"endColumn":31,"fix":"411"},{"ruleId":"378","severity":1,"message":"379","line":169,"column":24,"nodeType":"410","messageId":"381","endLine":169,"endColumn":35,"fix":"412"},{"ruleId":"354","severity":1,"message":"413","line":170,"column":19,"nodeType":"356","messageId":"357","endLine":170,"endColumn":27},{"ruleId":"388","severity":1,"message":"389","line":176,"column":72,"nodeType":"390","messageId":"391","endLine":176,"endColumn":74},{"ruleId":"414","severity":1,"message":"415","line":187,"column":9,"nodeType":"416","messageId":"417","endLine":204,"endColumn":12},{"ruleId":"388","severity":1,"message":"389","line":194,"column":72,"nodeType":"390","messageId":"391","endLine":194,"endColumn":74},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"418","line":2,"column":26,"nodeType":"356","messageId":"357","endLine":2,"endColumn":36},{"ruleId":"354","severity":1,"message":"419","line":10,"column":10,"nodeType":"356","messageId":"357","endLine":10,"endColumn":20},{"ruleId":"354","severity":1,"message":"396","line":10,"column":22,"nodeType":"356","messageId":"357","endLine":10,"endColumn":27},{"ruleId":"354","severity":1,"message":"420","line":17,"column":12,"nodeType":"356","messageId":"357","endLine":17,"endColumn":16},{"ruleId":"354","severity":1,"message":"421","line":17,"column":18,"nodeType":"356","messageId":"357","endLine":17,"endColumn":25},{"ruleId":"388","severity":1,"message":"389","line":20,"column":19,"nodeType":"390","messageId":"391","endLine":20,"endColumn":21},{"ruleId":"388","severity":1,"message":"422","line":24,"column":33,"nodeType":"390","messageId":"391","endLine":24,"endColumn":35},{"ruleId":"388","severity":1,"message":"422","line":27,"column":33,"nodeType":"390","messageId":"391","endLine":27,"endColumn":35},{"ruleId":"388","severity":1,"message":"422","line":35,"column":33,"nodeType":"390","messageId":"391","endLine":35,"endColumn":35},{"ruleId":"388","severity":1,"message":"422","line":38,"column":33,"nodeType":"390","messageId":"391","endLine":38,"endColumn":35},{"ruleId":"354","severity":1,"message":"359","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":26},{"ruleId":"354","severity":1,"message":"423","line":7,"column":12,"nodeType":"356","messageId":"357","endLine":7,"endColumn":23},{"ruleId":"354","severity":1,"message":"424","line":7,"column":25,"nodeType":"356","messageId":"357","endLine":7,"endColumn":39},{"ruleId":"354","severity":1,"message":"425","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":30},{"ruleId":"354","severity":1,"message":"426","line":8,"column":8,"nodeType":"356","messageId":"357","endLine":8,"endColumn":14},{"ruleId":"354","severity":1,"message":"427","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":17},{"ruleId":"354","severity":1,"message":"428","line":54,"column":11,"nodeType":"356","messageId":"357","endLine":54,"endColumn":18},{"ruleId":"354","severity":1,"message":"429","line":59,"column":12,"nodeType":"356","messageId":"357","endLine":59,"endColumn":18},{"ruleId":"354","severity":1,"message":"430","line":60,"column":11,"nodeType":"356","messageId":"357","endLine":60,"endColumn":24},{"ruleId":"354","severity":1,"message":"362","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":13},{"ruleId":"354","severity":1,"message":"431","line":5,"column":42,"nodeType":"356","messageId":"357","endLine":5,"endColumn":56},{"ruleId":"354","severity":1,"message":"432","line":7,"column":7,"nodeType":"356","messageId":"357","endLine":7,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":36,"column":44,"nodeType":"380","messageId":"381","endLine":36,"endColumn":51,"fix":"433"},{"ruleId":"354","severity":1,"message":"434","line":11,"column":12,"nodeType":"356","messageId":"357","endLine":11,"endColumn":21},{"ruleId":"354","severity":1,"message":"435","line":11,"column":23,"nodeType":"356","messageId":"357","endLine":11,"endColumn":35},{"ruleId":"436","severity":1,"message":"437","line":89,"column":24,"nodeType":"416","messageId":"438","endLine":89,"endColumn":31},{"ruleId":"354","severity":1,"message":"439","line":9,"column":18,"nodeType":"356","messageId":"357","endLine":9,"endColumn":21},{"ruleId":"440","severity":1,"message":"441","line":3,"column":1,"nodeType":"442","endLine":59,"endColumn":3},{"ruleId":"354","severity":1,"message":"405","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"362","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":11},{"ruleId":"354","severity":1,"message":"392","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"354","severity":1,"message":"443","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":30},"no-native-reassign",["444"],"no-negated-in-lhs",["445"],"@typescript-eslint/no-unused-vars","'Places' is defined but never used.","Identifier","unusedVar","'LocationPicker' is defined but never used.","'useEffect' is defined but never used.","'RegularBtn' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'ProfileOverview' is defined but never used.","'Button' is defined but never used.","'SinglePostNew' is defined but never used.","'Popup' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Avatar' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'BadgeAvatar' is defined but never used.","'checkUserLoggedIn' is defined but never used.","'id' is assigned a value but never used.","'Component' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"446","text":"447"},{"range":"448","text":"447"},"'OccupationSelect' is defined but never used.","'Slide' is defined but never used.","'CssBaseline' is defined but never used.","'useScrollTrigger' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'IconButton' is defined but never used.","'coord' is assigned a value but never used.","'ArrowBackRoundedIcon' is defined but never used.","'withStyles' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'purple' is defined but never used.","'SwitchClassKey' is defined but never used.","'SwitchProps' is defined but never used.","'Container' is defined but never used.","'AddAvatar' is defined but never used.","'SmallAvatar' is assigned a value but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'MoreVertIcon' is defined but never used.","'GuessTheLocationPlay' is defined but never used.","'GTLicon' is defined but never used.","'GTLexpanded' is defined but never used.","NewExpression",{"range":"449","text":"447"},{"range":"450","text":"447"},"'snapshot' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'MenuButton' is defined but never used.","'makeStyles' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '===' and instead saw '=='.","'coordinates' is assigned a value but never used.","'setCoordinates' is assigned a value but never used.","'GuessTheLocationButton' is defined but never used.","'Camera' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'source' is assigned a value but never used.","'handleCapture' is assigned a value but never used.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.",{"range":"451","text":"447"},"'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'Fab' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'PhotoCameraRoundedIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[720,727],"[]",[769,776],[5747,5758],[5834,5845],[971,978]]