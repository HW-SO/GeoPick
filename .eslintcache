[{"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx":"1","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\reportWebVitals.ts":"2","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\App.tsx":"3","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\theme\\index.ts":"4","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"5","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx":"6","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"7","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx":"8","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\terms\\index.tsx":"9","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"10","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx":"11","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx":"12","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\view-points-screen\\points.tsx":"13","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx":"14","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\upload-image\\index.tsx":"15","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\search-page\\index.tsx":"16","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\camera\\index.tsx":"17","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Places.tsx":"18","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"19","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"20","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notificationset\\index.tsx":"21","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\post-view\\index.tsx":"22","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx":"23","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notification\\index.tsx":"24","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\accessSetting\\index.tsx":"25","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts":"26","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"27","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\tags.tsx":"28","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\profileOverview.tsx":"29","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Card.tsx":"30","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew.tsx":"31","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\uploadIcon.tsx":"32","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"33","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\index.ts":"34","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\auth.ts":"35","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\avatarSmall.tsx":"36","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\GTLexpanded.tsx":"37","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\sharePost.tsx":"38","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts":"39","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\occupation.tsx":"40","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"41","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"42","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\feed.tsx":"43","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\userFeed.tsx":"44","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\NavBar\\navbar.tsx":"45","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\Avatar.tsx":"46","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"47","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Posts.tsx":"48","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\report.tsx":"49","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Game\\GTLmenu.tsx":"50"},{"size":944,"mtime":1614603230390,"results":"51","hashOfConfig":"52"},{"size":482,"mtime":1614415233419,"results":"53","hashOfConfig":"52"},{"size":7092,"mtime":1614603230388,"results":"54","hashOfConfig":"52"},{"size":821,"mtime":1614415233420,"results":"55","hashOfConfig":"52"},{"size":4623,"mtime":1614415233107,"results":"56","hashOfConfig":"52"},{"size":1647,"mtime":1614415233108,"results":"57","hashOfConfig":"52"},{"size":3984,"mtime":1614415233108,"results":"58","hashOfConfig":"52"},{"size":4405,"mtime":1614667894951,"results":"59","hashOfConfig":"52"},{"size":28443,"mtime":1614415233146,"results":"60","hashOfConfig":"52"},{"size":5210,"mtime":1614415233146,"results":"61","hashOfConfig":"52"},{"size":5440,"mtime":1614415233107,"results":"62","hashOfConfig":"52"},{"size":5907,"mtime":1614415233012,"results":"63","hashOfConfig":"52"},{"size":2676,"mtime":1614415233147,"results":"64","hashOfConfig":"52"},{"size":5097,"mtime":1614519175768,"results":"65","hashOfConfig":"52"},{"size":9422,"mtime":1614519175769,"results":"66","hashOfConfig":"52"},{"size":5726,"mtime":1614519175768,"results":"67","hashOfConfig":"52"},{"size":415,"mtime":1614603230390,"results":"68","hashOfConfig":"52"},{"size":1732,"mtime":1614603230389,"results":"69","hashOfConfig":"52"},{"size":8647,"mtime":1614415233011,"results":"70","hashOfConfig":"52"},{"size":5380,"mtime":1614415233148,"results":"71","hashOfConfig":"52"},{"size":2904,"mtime":1614415233105,"results":"72","hashOfConfig":"52"},{"size":15449,"mtime":1614593149041,"results":"73","hashOfConfig":"52"},{"size":3207,"mtime":1614415233012,"results":"74","hashOfConfig":"52"},{"size":909,"mtime":1614519175767,"results":"75","hashOfConfig":"52"},{"size":4660,"mtime":1614415233010,"results":"76","hashOfConfig":"52"},{"size":2768,"mtime":1614519175758,"results":"77","hashOfConfig":"52"},{"size":1457,"mtime":1614415232996,"results":"78","hashOfConfig":"52"},{"size":2548,"mtime":1614519175742,"results":"79","hashOfConfig":"52"},{"size":3811,"mtime":1614519175731,"results":"80","hashOfConfig":"52"},{"size":2032,"mtime":1614415232998,"results":"81","hashOfConfig":"52"},{"size":11878,"mtime":1614666935192,"results":"82","hashOfConfig":"52"},{"size":3399,"mtime":1614519175741,"results":"83","hashOfConfig":"52"},{"size":1523,"mtime":1614415232991,"results":"84","hashOfConfig":"52"},{"size":137,"mtime":1614415233009,"results":"85","hashOfConfig":"52"},{"size":969,"mtime":1614415233008,"results":"86","hashOfConfig":"52"},{"size":1478,"mtime":1614519175731,"results":"87","hashOfConfig":"52"},{"size":2954,"mtime":1614415232993,"results":"88","hashOfConfig":"52"},{"size":3347,"mtime":1614415232994,"results":"89","hashOfConfig":"52"},{"size":272,"mtime":1614415233008,"results":"90","hashOfConfig":"52"},{"size":2728,"mtime":1614415232997,"results":"91","hashOfConfig":"52"},{"size":896,"mtime":1614415232992,"results":"92","hashOfConfig":"52"},{"size":1808,"mtime":1614415232996,"results":"93","hashOfConfig":"52"},{"size":4351,"mtime":1614593149039,"results":"94","hashOfConfig":"52"},{"size":2014,"mtime":1614519175755,"results":"95","hashOfConfig":"52"},{"size":2894,"mtime":1614415232999,"results":"96","hashOfConfig":"52"},{"size":682,"mtime":1614519175731,"results":"97","hashOfConfig":"52"},{"size":1284,"mtime":1614415232993,"results":"98","hashOfConfig":"52"},{"size":1881,"mtime":1614593149039,"results":"99","hashOfConfig":"52"},{"size":1574,"mtime":1614604430515,"results":"100","hashOfConfig":"52"},{"size":6299,"mtime":1614668365269,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1t5v4mh",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"104"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx",[],["222","223"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\reportWebVitals.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\App.tsx",["224"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\nimport WelcomeScreen from './pages/welcome screen';\r\nimport SignInScreen from './pages/sign-in screen/SignInForm';\r\nimport SignUpScreen from './pages/sign-up screen/SignupForm';\r\nimport CreateProfileScreen from './pages/create-profile-screen';\r\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\r\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\r\nimport { Terms } from './pages/terms/index';\r\nimport { HomeScreen } from './pages/home-screen/home';\r\nimport PostViewScreen from './pages/post-view';\r\nimport HelpandFeedback from './pages/helpandfeedback';\r\nimport SettingsScreen from './pages/settings-screen/SettingsMenu';\r\nimport UserPage from './pages/profile-screen/userPage';\r\nimport SearchScreen from \"./pages/search-page/index\";\r\n\r\nimport { UploadImage } from './pages/upload-image/index';\r\nimport Accessibility from './pages/accessSetting';\r\nimport Notification from './pages/notificationset';\r\nimport Notificationpg from './pages/notification';\r\nimport Places from './components/Inputs/Places'\r\nimport ViewPoints from './pages/view-points-screen/points';\r\nimport EditProfile from './pages/edit-profile/editProfile';\r\nimport LocationPicker from './components/Inputs/LocationPicker';\r\nimport WebCamFun from './pages/camera/index'\r\n// import GTLexpanded from './components/Display/GTLexpanded';\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route exact path=\"/welcome\">\r\n                        <WelcomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-in\">\r\n                        <SignInScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-up\">\r\n                        <SignUpScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/create-profile\">\r\n                        <CreateProfileScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Set-password\">\r\n                        <SetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ReSet-password\">\r\n                        <ReSetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/home\">\r\n                        <HomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/helpnfeedback\">\r\n                        <HelpandFeedback />\r\n                    </Route>\r\n                    <Route exact path=\"/accessibility\">\r\n                        <Accessibility />\r\n                    </Route>\r\n                    <Route exact path=\"/notificationset\">\r\n                        <Notification />\r\n                    </Route>\r\n                    <Route exact path=\"/notification\">\r\n                        <Notificationpg />\r\n                    </Route>\r\n                    <Route exact path=\"/terms\">\r\n                        <Terms />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\">\r\n                        <SettingsScreen />\r\n                    </Route>\r\n                    <Route path=\"/post/:catId\" component={PostViewScreen}></Route>\r\n                    <Route path=\"/user/:catId\" component={UserPage}></Route>\r\n                    <Route exact path=\"/upload-image\">\r\n                        <UploadImage />\r\n                    </Route>\r\n                    <Route exact path=\"/search\">\r\n                        <SearchScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ViewPoints\">\r\n                        <ViewPoints />\r\n                    </Route>\r\n                    <Route exact path=\"/EditProfile\">\r\n                        <EditProfile />\r\n                    </Route>\r\n                    <Route exact path=\"/webcam\">\r\n                        <WebCamFun />\r\n                    </Route>\r\n                    {/* <Route exact path=\"/GTLexpanded\">\r\n                        <GTLexpanded />\r\n                    </Route> */}\r\n                </Switch>\r\n            </Router>\r\n            {/* need to populate the places in this */}\r\n            <Places />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/welcome\">Welcome</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-up\">Sign-Up</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-profile\">Create Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Set-password\">Set new password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ReSet-password\">reset password </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home Screen</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/post\">Post View Screen</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/terms\">Terms and Conditions</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/settings\">Settings</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/helpnfeedback\">Help and Feedback</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ProfilePage\">Profile Page</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/upload-image\">Upload Image</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/accessibility\">Accessibility</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/search\">Search</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/notificationset\">Notifications</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/notification\">NotificationsPage</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ViewPoints\">View points</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/EditProfile\">Edit Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/webcam\">camera</Link>\r\n                    </li>\r\n\r\n                    {/* <li>\r\n                        <Link to=\"/GTLexpanded\">GTL Expanded component</Link>\r\n                    </li> */}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\theme\\index.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx",["225","226","227","228","229"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\terms\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx",["230"],"import * as React from 'react';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Component } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './styles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport NotificationImportantRoundedIcon from '@material-ui/icons/NotificationImportantRounded';\r\nimport AccessibilityNewRoundedIcon from '@material-ui/icons/AccessibilityNewRounded';\r\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\r\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\r\nimport { Link } from 'react-router-dom';\r\nexport interface SettingsMenuProps {}\r\nexport interface SettingsMenuState {\r\n    user: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            // backgroundColor: theme.palette.background.paper,\r\n            backgroundColor: '#fafafa',\r\n        },\r\n    }),\r\n);\r\n\r\nconst SettingsMenu = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{ width: '100%', height: '100%' }}>\r\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n                <ListItem button>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <AccountCircleRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Account Settings\" />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <NotificationImportantRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Notification Settings\" />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <AccessibilityNewRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Accessibility Settings\" />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <HelpRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Help and Feedback\" />\r\n                </ListItem>\r\n                <ListItem button divider>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ background: '#fafafa' }}>\r\n                            <GavelRoundedIcon style={{ color: 'black' }} />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Terms and Conditions\" />\r\n                </ListItem>\r\n            </List>\r\n            <Box m={5} />\r\n            <div>\r\n                <Typography variant=\"body1\" style={{ color: '#1b1b1b', textAlign: 'center' }}>\r\n                    Designed <span style={{ color: '#f56920' }}>& </span> Developed by<br></br>The Geo\r\n                    <span style={{ color: '#f56920' }}>Pic</span>K team.\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default class SettingsMenuScreen extends Component<SettingsMenuProps, SettingsMenuState> {\r\n    constructor(SettingsMenuProps: any) {\r\n        super(SettingsMenuProps);\r\n        this.state = {\r\n            user: checkUserLoggedIn(),\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n                <Toolbar>\r\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                    <IconButton edge=\"end\">\r\n                        <Avatar alt={this.state.user.User_name} src={this.state.user.Avatar} />\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <div style={{ color: '#fafafa' }}>\r\n                    <Card background=\"#fafafa\" title=\"Settings\" split={1}>\r\n                        <div style={{ color: 'black' }}>\r\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <SettingsMenu />\r\n                            </Grid>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx",["231"],"import { Avatar, Box, Button, Card, CardContent, Divider, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport OccupationSelect from '../../components/Inputs/occupation';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport interface EditProfileProps {}\r\n\r\nexport interface EditProfileState {}\r\n\r\nclass EditProfile extends Component<EditProfileProps, EditProfileState> {\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    handleonclickSubmit() {\r\n        console.log('Profile edit changes!');\r\n    }\r\n    handleonclickChangePassword() {\r\n        console.log('Go to change password screen!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto', paddingBottom: '5em' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        marginBottom: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                        paddingBottom: '1em',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        style={{\r\n                            float: 'right',\r\n                            width: '120px',\r\n                            height: '120px',\r\n                            marginRight: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                    ></Avatar>\r\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                        {/* <Grid container direction=\"column\">\r\n                    <Grid item> */}\r\n\r\n                        <Typography variant=\"h3\" style={{ color: '#fafafa' }}>\r\n                            Hi<br></br>\r\n                            {\r\n                                <Typography variant=\"h4\" style={{ color: '#f56920' }}>\r\n                                    'mo.kvs_'\r\n                                </Typography>\r\n                            }\r\n                            {/* The username comes here */}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <div style={{ margin: '20px', textAlign: 'center' }}>\r\n                        <Box m={2}></Box>\r\n                        <TextField label=\"Name\" color=\"primary\"></TextField>\r\n                        <Box m={2}></Box>\r\n                        <TextField\r\n                            label=\"Something about yourself...\"\r\n                            color=\"primary\"\r\n                            multiline\r\n                            rows={1}\r\n                            rowsMax={4}\r\n                        ></TextField>\r\n                    </div>\r\n                    <Box m={3}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickSubmit}\r\n                        style={{\r\n                            background: '#f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '25px',\r\n                        }}\r\n                    >\r\n                        Submit changes\r\n                    </Button>\r\n\r\n                    <Box m={3}></Box>\r\n                    <Divider style={{ background: '#f56920' }} />\r\n                    <Box m={2}></Box>\r\n                    <Typography variant=\"body2\" style={{ color: '#fafafa' }}>\r\n                        looking for something else?\r\n                    </Typography>\r\n                    <Box m={-1}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickChangePassword}\r\n                        style={{\r\n                            // background: '#f56920',\r\n                            border: '3px solid #f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '5px',\r\n                        }}\r\n                    >\r\n                        Change Password\r\n                    </Button>\r\n                    <br></br>\r\n                    <Box m={-1.5}></Box>\r\n                    <Button\r\n                        style={{\r\n                            background: '#2f4858',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                        onClick={this.signOut}\r\n                    >\r\n                        <Link to=\"/welcome\">\r\n                            <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                                Sign Out\r\n                            </Typography>\r\n                        </Link>\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\view-points-screen\\points.tsx",["232","233","234"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { Avatar, Box, Button, Card, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nexport interface ViewPointsProps {}\r\n\r\nexport interface ViewPointsState {}\r\n\r\nclass ViewPoints extends React.Component<ViewPointsProps, ViewPointsState> {\r\n    handleonclick() {\r\n        console.log('Share with friends!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', paddingTop: '10px', paddingBottom: '50px' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        height: '80%',\r\n                        width: '30em',\r\n                        maxWidth: '70%',\r\n                        margin: 'auto',\r\n                        padding: '20px',\r\n                        borderRadius: '50px',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        src={'avatar comes here'}\r\n                        alt={'username comes here'}\r\n                        style={{ margin: 'auto', width: '100px', height: '100px', marginBottom: '20px' }}\r\n                    ></Avatar>\r\n                    <Typography variant=\"h5\" style={{ color: '#f56920' }}>\r\n                        {'username comes here'}\r\n                    </Typography>\r\n                    <Box m={5}></Box>\r\n\r\n                    <Typography variant=\"h6\">Congratulations, you have</Typography>\r\n                    <Typography variant=\"h1\" style={{ fontWeight: 'bolder' }}>\r\n                        {'10000'}\r\n                    </Typography>\r\n                    <Box m={-2}></Box>\r\n                    <Typography variant=\"h3\" style={{ color: '#f56920' }}>\r\n                        points\r\n                    </Typography>\r\n                    <Box m={3}></Box>\r\n                </Card>\r\n                <Button\r\n                    onClick={this.handleonclick}\r\n                    style={{\r\n                        background: '#f56920',\r\n                        color: '#fafafa',\r\n                        padding: '10px 20px 10px 20px',\r\n                        margin: 'auto',\r\n                        borderRadius: '20px',\r\n                        marginTop: '20px',\r\n                    }}\r\n                >\r\n                    Share it with your friends\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewPoints;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx",["235","236","237","238","239","240","241","242","243"],"import { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport UserFeed from '../../components/Layouts/userFeed';\r\n\r\n\r\n\r\nimport { auth } from '../../firebase';\r\nexport interface UserPageProps {}\r\n\r\nexport interface UserPageState {\r\n    posts: any;\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n}\r\n\r\nclass UserPage extends Component<UserPageProps, UserPageState> {\r\n\r\n    constructor(UserPageProps: any) {\r\n        super(UserPageProps);\r\n        this.state = {\r\n            posts: [],\r\n            user: {},\r\n            isAuthenticated: false,\r\n            uid: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        this.getUser().then((user) => {\r\n            this.setState({ isAuthenticated: true, user: user, uid: uid});\r\n            console.log(this.state.user)\r\n            console.log(this.state.uid)\r\n            }, (error) => {\r\n            this.setState({ isAuthenticated: true });\r\n            });\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n        \r\n    //     const auth = checkUserLoggedIn();\r\n    //     if(auth != undefined){\r\n            \r\n    //     }\r\n        \r\n    // }\r\n\r\n    // getData = () => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .orderBy('likes_count')\r\n    //         .get()\r\n    //         .then((querySnapshot) => {\r\n    //             querySnapshot.forEach(function () {\r\n    //                 // console.log(doc.id, ' => ', doc.data());\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('Error getting documents: ', err);\r\n    //         });\r\n    // };\r\n\r\n    getUser = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase.firestore()\r\n                    .collection('users')\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        const id = querySnapshot.id;\r\n                        if(data){\r\n                            resolve(data)\r\n                        } else {\r\n                            reject('User not authenticated')\r\n                        }\r\n                        \r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <ProfileOverview User={this.state.user} User_name = {this.state.user.User_name} Avatar = {this.state.user.Avatar} Size = \"large\"/>\r\n                <br></br>\r\n                <br></br>\r\n                <Button style={{ paddingLeft: '15%', paddingRight: '15%', background: '#f56920' }}>\r\n                    <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                        Edit Profile\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                    }}\r\n                    onClick={this.signOut}\r\n                >\r\n                    <Link to=\"/welcome\">\r\n                        <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                            Sign Out\r\n                        </Typography>\r\n                    </Link>\r\n                </Button>\r\n                <div style={{ margin: 'auto' }}>\r\n                    <Typography variant=\"h4\" style={{ color: '#fafafa', paddingTop: '25px' }}>\r\n                        My <span style={{ color: '#f56920' }}>Posts</span>\r\n                    </Typography>\r\n                </div>\r\n                <UserFeed uid = {this.state.uid} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\upload-image\\index.tsx",["244"],"import { Card, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './Styles.scss';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Box } from '@material-ui/core';\r\nimport UploadIcon from '../../components/Display/uploadIcon';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Tags from '../../components/Inputs/tags';\r\nimport { auth } from '../../firebase';\r\nimport Compress from 'react-image-file-resizer';\r\nimport { storage } from '../../firebase/firebase';\r\nexport interface UploadImageProps {}\r\n\r\nexport interface UploadImageState {\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    imgurl: string;\r\n    img: any;\r\n    caption: string;\r\n    tags: any;\r\n    height: number;\r\n    width: number;\r\n    rawurl: string;\r\n}\r\n\r\nexport class UploadImage extends Component<UploadImageProps, UploadImageState> {\r\n    constructor(UploadImageProps: any) {\r\n        super(UploadImageProps);\r\n        // firebase.auth().onAuthStateChanged(function(user) {\r\n        //     this.setState({ user: user });\r\n        // });\r\n        this.state = {\r\n            user: {},\r\n            isAuthenticated: false,\r\n            imgurl: '',\r\n            img: {},\r\n            caption: '',\r\n            tags: [],\r\n            height: 0,\r\n            width: 0,\r\n            rawurl: 'https://wallpapercave.com/wp/wp3597484.jpg',\r\n        };\r\n        \r\n    }\r\n\r\n    selectedTags = (tagses: any) => {this.setState({ tags: tagses})}\r\n\r\n    componentDidMount() {\r\n        this.getUser().then((user) => {\r\n            this.setState({ isAuthenticated: true, user: user });\r\n            }, (error) => {\r\n            this.setState({ isAuthenticated: true });\r\n            });\r\n    }\r\n\r\n    getUser = () => {\r\n        const auth = checkUserLoggedIn();\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase.firestore()\r\n                    .collection('users')\r\n                    .doc(auth.uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        if(data){\r\n                            resolve(data)\r\n                        } else {\r\n                            reject('User not authenticated')\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const file = this.state.img;\r\n        const user = auth.checkUserLoggedIn();\r\n        const image = new Image();\r\n        let fr = new FileReader();\r\n        \r\n        if (!user) return;\r\n        fr.onload = async function () {\r\n            if (fr !== null && typeof fr.result == 'string') {\r\n                image.src = fr.result;\r\n                console.log('in frload');\r\n                console.log('frwidg', image.width);\r\n                console.log('frhigg', image.height);\r\n            }\r\n        };\r\n        fr.readAsDataURL(file);\r\n\r\n        var width = 0;\r\n        var height = 0;\r\n\r\n        image.onload = function () {\r\n            height = image.height;\r\n            width = image.width;\r\n        };\r\n\r\n        setTimeout(() => {\r\n            Compress.imageFileResizer(\r\n                file,\r\n                width,\r\n                height,\r\n                'JPEG',\r\n                50,\r\n                0,\r\n                async (uri: any) => {\r\n                    if (typeof uri === 'string') {\r\n                        const urinew = uri.split('base64,')[1];\r\n                        storage\r\n                            .ref(`/Images/${user.uid}/Posts/${file.name}`)\r\n                            .putString(urinew, 'base64')\r\n                            .then((data) => {\r\n                                data.ref.getDownloadURL().then((url) => {\r\n                                    // this.setState({ imgurl: url });\r\n                                    firebase\r\n                                        .firestore()\r\n                                        .collection('Posts/')\r\n                                        .add({\r\n                                            Image: url,\r\n                                            caption: this.state.caption,\r\n                                            comments: [],\r\n                                            comment_count: 0,\r\n                                            likes_count: 0,\r\n                                            uid: user.uid,\r\n                                            username: this.state.user.User_name,\r\n                                            post_time: new Date(),\r\n                                            tags: this.state.tags,\r\n                                        }).then(function(docRef) {\r\n                                            console.log(\"Document written with ID: \", docRef.id);\r\n                                        }).catch(function(error) {\r\n                                            console.error(\"Error adding document: \", error);\r\n                                        });\r\n                                });\r\n                                \r\n                                // console.log(this.state.imgurl);\r\n                            });\r\n                    }\r\n                    \r\n                },\r\n                'base64',\r\n            );\r\n        }, 2500);\r\n\r\n        \r\n        \r\n        // push('/home');\r\n        // console.log(postRef.documentID);\r\n\r\n    }\r\n\r\n    changeImage = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!event.target.files || !event.target.files[0]) return;\r\n        const file = await event.target.files[0];\r\n        this.setState({ img: file, rawurl: URL.createObjectURL(file)});\r\n\r\n        // console.log(this.state.img);\r\n    }\r\n\r\n    updateCaption = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({caption : event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                style={{\r\n                    maxHeight: 800,\r\n                    maxWidth: 600,\r\n                    margin: 'auto',\r\n                    marginBlock: '20px',\r\n                    background: '#1b1b1b',\r\n                    // border: '3px solid #fafafa',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar\r\n                            aria-label=\"recipe\"\r\n                            alt={this.state.user.User_name}\r\n                            src={this.state.user.Avatar}\r\n                            style={{ backgroundColor: 'auto' }}\r\n                        >\r\n                            {this.state.user.User_name}\r\n                        </Avatar>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{this.state.user.User_name}</Typography>}\r\n                \r\n                    style={{ textAlign: 'left', color: '#fafafa' }}\r\n                />\r\n                <CardMedia\r\n                    image={this.state.rawurl}\r\n                    title={`A Photo by ${this.state.user.User_name}`}\r\n                    style={{\r\n                        borderRadius: '20px 20px 20px 20px',\r\n                        height: 0,\r\n                        paddingTop: '56.25%',\r\n                        marginLeft: '10px',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <Box m={-2} />\r\n                <CardActions disableSpacing>\r\n                    <UploadIcon onChange={this.changeImage}/>\r\n                </CardActions>\r\n                <CardContent>\r\n                    <TextField \r\n                        name=\"caption\"\r\n                        id=\"caption\"\r\n                        label=\"Enter Caption\"\r\n                        type=\"caption\"\r\n                        onChange = {this.updateCaption}\r\n                    />\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Tags selectedTags={this.selectedTags}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ color: '#fafafa', textAlign: 'center' }}\r\n                    >\r\n                        Before submitting, you are aware that the post does not go against the community guidelines and does not feature any human faces\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n\r\n                    \r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }} onClick={this.onSubmit}>\r\n                        Upload Post!\r\n                    </RegularBtn>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\search-page\\index.tsx",["245","246","247"],"import React, { useState } from 'react'\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { Box } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport Button from '@material-ui/core/Button';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\n\r\n\r\n\r\nexport interface SearchProps {}\r\n\r\nexport default function SearchScreen() {\r\n    const [users, setUsers] = useState(Array());\r\n    const [posts, setPosts] = useState(Array());\r\n    const [userOn, setUserOn] = useState(false);\r\n    const [postOn, setPostOn] = useState(false);\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const toggleUser = () => {\r\n        setUserOn(true);\r\n        setPostOn(false);\r\n        firebase.firestore()\r\n            .collection('users')\r\n            .where('User_name', '>=', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                });\r\n                setUsers(users);\r\n                setPosts([]);\r\n            })\r\n    }\r\n\r\n    const togglePost = () => {\r\n        setUserOn(false);\r\n        setPostOn(true);\r\n        firebase.firestore()\r\n            .collection('Posts')\r\n            .where('tags', 'array-contains', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                });\r\n                setPosts(posts);\r\n                setUsers([]);\r\n            })\r\n    }\r\n\r\n    const fetchResults = (search: React.ChangeEvent<HTMLInputElement>) => {\r\n        setQuery(search.target.value.toLowerCase());\r\n        if(userOn){\r\n            toggleUser();\r\n        }\r\n        if(postOn){\r\n            togglePost();\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"button\" style={{ float: 'left' }}>\r\n                <ArrowBackRoundedIcon />\r\n            </div>\r\n            <div className=\"image\">\r\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\r\n            </div>\r\n            <div id=\"titleDiv\">\r\n                <Card background=\"#202020\" title=\"Search\" split={2}>\r\n                    <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Search here...\"\r\n                        onChange = {fetchResults}\r\n                    />\r\n                    <br></br>\r\n                    <Box>\r\n                        <Button variant=\"contained\" style={{float:'left'}} onClick={toggleUser}>Users</Button>\r\n                        <Button variant=\"contained\" style={{float:'right'}} onClick={togglePost}>Posts</Button>\r\n                    </Box>\r\n                    <br/>\r\n                    <br/>\r\n                    {users.length>0 && users.map((data) => {\r\n                        // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                  <ProfileOverview \r\n                                      key = {data.id}\r\n                                      uid = {data.id} \r\n                                      User_name = {data.User_name} \r\n                                      Avatar = {data.Avatar} \r\n                                      Size = \"small\"\r\n                                      User = {data}\r\n                                  />\r\n                                  <br/><br/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    )}\r\n\r\n                    {posts.length>0 && posts.map((data) => {\r\n                        // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                  <SinglePostNew\r\n                                    key={data.id}\r\n                                    id={data.id}\r\n                                    // profileUrl={post.profileUrl}\r\n                                    username={data.user_name}\r\n                                    postPic={data.Image}\r\n                                    uid={data.uid}\r\n                                    // caption={post.caption}\r\n                                    // comments={post.comments}\r\n                                    date={new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                                    likes_count={data.likes_count}\r\n                                    caption={data.caption}\r\n                                    sharedURL={window.location.href}\r\n                                    hidden={false}\r\n                                    comments_count={data.comments_count}\r\n                                />\r\n                                  <br/><br/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    )}\r\n                 \r\n                  \r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\camera\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\Places.tsx",["248"],"import React from 'react';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\n\r\nexport default function Places() {\r\n    const [address, setAddress] = React.useState('');\r\n    const [coordinates, setCoordinates] = React.useState({\r\n        lat: null,\r\n        lng: null,\r\n    });\r\n\r\n    const handleSelect = async (value: any) => {\r\n        const results = await geocodeByAddress(value);\r\n        const latLng = await getLatLng(results[0]);\r\n        setAddress(value);\r\n        setCoordinates((latLng as unknown) as { lat: null; lng: null });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <input {...getInputProps({ placeholder: 'Type address' })} />\r\n\r\n                        <div>\r\n                            {loading ? <div>...loading</div> : null}\r\n\r\n                            {suggestions.map((suggestion) => {\r\n                                const style = {\r\n                                    backgroundColor: suggestion.active ? '#41b6e6' : '#fff',\r\n                                };\r\n\r\n                                return (\r\n                                    <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                                        {suggestion.description}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\welcome screen\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notificationset\\index.tsx",["249","250","251","252","253","254","255","256","257"],"import * as React from 'react';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface NotificationProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Notification() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Notification Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        {/* <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\"> */}\r\n                        <WhiteTypography>\r\n                            Push notification\r\n                            <Box m={-3.7}></Box>\r\n                            <FormGroup style={{ float: 'right' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                />\r\n                            </FormGroup>\r\n                        </WhiteTypography>\r\n                        {/* </Grid> */}\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\post-view\\index.tsx",["258"],"/* eslint-disable no-lone-blocks */\r\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\nimport { Component } from 'react';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SharePost from '../../components/Display/sharePost';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport interface PostViewState {\r\n    newComment: string;\r\n    user: any;\r\n    Image: string;\r\n    caption: string;\r\n    likes_count: number;\r\n    post_time: string;\r\n    user_name: string;\r\n    favourited: boolean;\r\n    post_uid: string;\r\n    post_user: any;\r\n    comments: any;\r\n}\r\n\r\nexport interface PostViewProps {\r\n    state: string;\r\n}\r\n\r\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\r\n    constructor(PostViewProps: any) {\r\n        super(PostViewProps);\r\n        this.state = {\r\n            favourited: false,\r\n            user: {},\r\n            Image: '',\r\n            caption: '',\r\n            likes_count: 0,\r\n            post_time: '',\r\n            user_name: '',\r\n            newComment: '',\r\n            post_uid: '',\r\n            post_user: {},\r\n            comments: [],\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        const auth = checkUserLoggedIn();\r\n        // console.log(pid);\r\n        if (auth === undefined) {\r\n        } else {\r\n            fb.firestore()\r\n                .collection('users')\r\n                .doc(auth.uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    // console.log(data);\r\n                    this.setState({\r\n                        user: data,\r\n                    });\r\n                });\r\n        }\r\n\r\n        await fb\r\n            .firestore()\r\n            .collection('Posts')\r\n            .doc(pid)\r\n            .get()\r\n            .then((doc) => {\r\n                // console.log(doc.data());\r\n                const data = doc.data();\r\n                if (data) {\r\n                    this.setState({\r\n                        Image: data.Image,\r\n                        caption: data.caption,\r\n                        likes_count: data.likes_count,\r\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\r\n                        user_name: data.user_name,\r\n                        post_uid: data.uid,\r\n                        comments: data.comments,\r\n                    });\r\n                }\r\n            });\r\n\r\n        console.log(this.state.post_uid);\r\n        fb.firestore()\r\n            .collection('users')\r\n            .doc(this.state.post_uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            favourited: false,\r\n        });\r\n    }\r\n\r\n    handleColorChange = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: increment,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count + 1,\r\n            });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: decrement,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count - 1,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        // console.log(uid);\r\n        const handleChange = (event: any) => {\r\n            // console.log(event.target.value);\r\n            this.setState({\r\n                newComment: event.target.value as string,\r\n                // user: checkUserLoggedIn(),\r\n            });\r\n        };\r\n\r\n        const handleClick = (event: any) => {\r\n            const FieldValue = fb.firestore.FieldValue;\r\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\r\n            fb.firestore()\r\n                .collection('Posts')\r\n                .doc(pid)\r\n                .update({\r\n                    comments: FieldValue.arrayUnion(comment),\r\n                    comments_count: fb.firestore.FieldValue.increment(1),\r\n                });\r\n            // console.log(`${this.state.user.User_name} : ${comment}`);\r\n            // console.log(this.state.user);\r\n            this.setState({\r\n                comments: [...this.state.comments, comment],\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: 'auto',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 800,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        color=\"#fafafa\"\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.post_user.User_name}\r\n                                src={this.state.post_user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.post_user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                        subheader={\r\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        }\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.Image}\r\n                        title=\"Paella dish\"\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\r\n                            {this.state.caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <SharePost sharedURL={window.location.href} />\r\n                        </IconButton>\r\n                        {/* <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton> */}\r\n                    </CardActions>\r\n                </Card>\r\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\r\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\r\n                            Latest comments\r\n                        </Typography>\r\n                        <ul>\r\n                            {this.state.comments.map((val: string, index: any) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\r\n                                            {val}\r\n                                        </Typography>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </Grid>\r\n                </Grid>\r\n                <InputBase\r\n                    onChange={handleChange}\r\n                    placeholder=\"Start typing...\"\r\n                    style={{\r\n                        width: '80%',\r\n                        // marginRight: '-12%',\r\n                        margin: 'auto',\r\n                        marginTop: '20px',\r\n                        marginBottom: '20px',\r\n                        textDecorationColor: '#FAFAFA',\r\n                        border: '1px solid #FAFAFA',\r\n                        borderRadius: '10px',\r\n                        height: '50px',\r\n                        padding: '10px',\r\n                        color: '#fafafa',\r\n                    }}\r\n                    endAdornment={\r\n                        <IconButton\r\n                            onClick={handleClick}\r\n                            aria-label=\"upload\"\r\n                            type=\"submit\"\r\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\r\n                        >\r\n                            <PublishRoundedIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                    <Grid\r\n                        item\r\n                        justify=\"flex-start\"\r\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\r\n                    >\r\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\r\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\r\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_user.User_name}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\r\n                        <Card\r\n                            style={{\r\n                                color: '#F56920',\r\n                                borderRadius: '22px',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            className=\"boxField\"\r\n                        >\r\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Container>\r\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\r\n                            <img\r\n                                src={this.state.Image}\r\n                                alt=\"not loading...\"\r\n                                // width= \"80%\"\r\n                                width=\"600px\"\r\n                                height=\"500px\"\r\n                                className=\"postImage\"\r\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\r\n                            ></img>\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <span>{this.state.caption}</span>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {this.state.likes_count}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <SharePost sharedURL={window.location.href} />\r\n                    </Grid>\r\n                </Grid> */\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\notification\\index.tsx",["259","260","261","262","263","264","265","266","267"],"import * as React from 'react';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport interface NotificationpgProps {}\r\n\r\nexport default function Notificationpg() {\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                        <Card background=\"#202020\" title=\"Notification\" split={1}></Card>\r\n            </div>\r\n        </div>\r\n            )\r\n}","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\accessSetting\\index.tsx",["268","269","270","271","272","273","274","275","276"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface AccessibilityProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Accessibility() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Accessibility Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Dark Mode\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Change to mono colors\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedB}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedB\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Increase overall text size\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedC}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedC\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\TextField.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\tags.tsx",["277","278","279","280"],"import React from \"react\";\r\nimport \"./tags.scss\";\r\nimport Textfield from \"./TextField\";\r\n\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\nconst Tags = (props: any) => {\r\n    const [tags, setTags] = React.useState(Array());\r\n\r\n    const addTags = (event: any) => {\r\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value.toLowerCase()]);\r\n            props.selectedTags([...tags, event.target.value.toLowerCase()]);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n    const removeTags = (index: any) => {\r\n        setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\r\n    };\r\n    return (\r\n        <div className=\"tags-input\">\r\n            <ul id=\"tags\">\r\n                {tags.map((tag, index) => (\r\n                    <li key={index} className=\"tag\">\r\n                        <span className='tag-title'>{tag}</span>\r\n                        <span className='tag-close-icon'\r\n                        onClick={() => removeTags(index)}\r\n                        >\r\n                        x\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <input\r\n                type=\"text\"\r\n                id=\"tags-input\"\r\n                style={{display: 'none'}}\r\n                \r\n                placeholder=\"Press enter to add tags\"\r\n            />\r\n            <label htmlFor=\"tags-input\">\r\n                <Textfield\r\n                    // variant=\"filled\"\r\n                    // fullWidth\r\n                    className=\"tags-input\"\r\n                    label=\"Press Enter To Add Tags\"\r\n                    onKeyUp={event => addTags(event)}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\nexport default Tags;","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\profileOverview.tsx",["281","282","283","284","285","286","287"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAvatar from './AddAvatar.png';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport AvatarSmall from '../../components/Display/avatarSmall';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nexport default function ProfileOverview(props: any) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                        {/* <Grid container direction=\"column\">\r\n                            <Grid item> */}\r\n                        {/* <Avatar\r\n                            style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\r\n                        ></Avatar> */}\r\n                        <Grid style ={{float: 'right'}}>\r\n                            <AvatarSmall uid = {props.uid} User_name = {props.User_name} Avatar = {props.Avatar} Size = {props.Size} />\r\n                        </Grid>\r\n                        <Typography style={{ color: '#fafafa', fontSize: '3vw' }}>\r\n                            Hi,<br></br>\r\n                            </Typography>\r\n                        <Typography style={{ color: '#f56920', fontSize: '2vw' }}>\r\n                                {props.User_name}\r\n                            </Typography>\r\n                    \r\n                        \r\n                        \r\n\r\n                        {/* </Grid>\r\n                            <Grid item></Grid> */}\r\n                        {/* </Grid> */}\r\n                        <br></br>\r\n                        {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\r\n                            <CardContent> */}\r\n                        <Button style={{ padding: '1px' }}>\r\n                            <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                                <span style={{ color: '#fafafa' }}>2</span>\r\n                                <br></br>\r\n                                <span style={{ color: '#f56920' }}>posts</span>\r\n                            </Typography>\r\n                            {/* Number of posts by user */}\r\n                        </Button>\r\n\r\n                        <Button style={{ marginLeft: '10px', padding: '1px' }}>\r\n                            <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\r\n                                <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\r\n                                <br></br>\r\n                                <span style={{ color: '#f56920' }}>points</span>\r\n                            </Typography>\r\n                            {/* Number of posts by user */}\r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePostNew.tsx",["288","289","290","291","292","293"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\uploadIcon.tsx",["294","295","296"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\r\n\r\nimport UploadPic from './uploadPic';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // transform: 'translateZ(0px)',\r\n            flexGrow: 1,\r\n            backgroundColor: 'transparent',\r\n        },\r\n        speedDial: {\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n            '&.MuiFab-primary': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n        options: {\r\n            width: '80px',\r\n            height: '40px',\r\n            textSizeAdjust: 'auto',\r\n            fontSize: '0.7em',\r\n            borderRadius: '0%',\r\n        },\r\n        fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n        transform: 'translate(0em, -6em)',\r\n\r\n        },\r\n         input: {\r\n        display: 'none',\r\n    },\r\n    }),\r\n);\r\n\r\nexport default function UploadIcon(props: any) {\r\n    const classes = useStyles();\r\n    const [direction] = React.useState<SpeedDialProps['direction']>('up');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden] = React.useState(false);\r\n\r\n    const actions = [\r\n        { icon: <p>Select From Gallery</p>, name: 'gallery' },\r\n        { icon: <p>Take a photo</p>, name: 'camera' },\r\n    ];\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        //   <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n            className={classes.fabButton}\r\n            ariaLabel=\"SpeedDial example\"\r\n            // className={classes.speedDial}\r\n            hidden={hidden}\r\n            icon={\r\n                <Fab color=\"secondary\" aria-label=\"add\" >\r\n                    <CameraAltRoundedIcon />\r\n                </Fab>\r\n            }\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            open={open}\r\n            direction={direction}\r\n        >\r\n            <SpeedDialAction\r\n                key=\"gallery\"\r\n                className={classes.options}\r\n                icon={<div>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.options} color=\"inherit\" aria-label=\"upload picture\" component=\"span\" > Select from Gallery </IconButton>\r\n                        </label>\r\n                        </div>}\r\n                tooltipTitle=\"gallery\"\r\n                onClick={handleClose}\r\n            />\r\n            <SpeedDialAction\r\n                key=\"camera\"\r\n                className={classes.options}\r\n                icon={<p> Take Photo </p>}\r\n                tooltipTitle=\"camera\"\r\n                onClick={handleClose}\r\n            />\r\n        </SpeedDial>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\index.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\auth.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\avatarSmall.tsx",["297","298","299","300","301","302","303"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(24),\r\n        height: theme.spacing(24),\r\n    },\r\n}));\r\n\r\nexport default function AvatarSmall(props: any) {\r\n    const [user, setUser] = useState({});\r\n    \r\n    const classes = useStyles();\r\n    if (props.uid != undefined)\r\n    return (\r\n                <Link to={{ pathname: `/user/${props.uid}`, state: props.uid }}>\r\n                <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n                </IconButton>\r\n                </Link>\r\n    );\r\n    else return (\r\n        <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n        </IconButton>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\GTLexpanded.tsx",["304"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\sharePost.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\occupation.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\feed.tsx",["305"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\userFeed.tsx",["306"],"import * as React from 'react';\r\nimport { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport SinglePostNew from '../Display/singlePostNew';\r\n\r\nexport default function UserFeed(props: any) {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const firstUpdate = useRef(true);\r\n    \r\n    // loadData = async () => {\r\n    //     const res = await fetch(\"https://api.agify.io/?name=michael\");\r\n    //     setData(await res.json());\r\n      \r\n    // };\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return;\r\n        }\r\n    \r\n        // console.log(\"componentDidUpdateFunction\");\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('uid', '==', props.uid)\r\n            .onSnapshot((snapshot: any) => {\r\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(props.uid)\r\n      });\r\n    //   console.log(props.uid)\r\n    return (\r\n        <div>\r\n            {posts.map(({ id, post }) => {\r\n                return (\r\n                    <SinglePostNew\r\n                        key={id}\r\n                        id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.user_name}\r\n                        postPic={post.Image}\r\n                        uid={post.uid}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                        likes_count={post.likes_count}\r\n                        caption={post.caption}\r\n                        sharedURL={window.location.href}\r\n                        hidden={false}\r\n                        comments_count={post.comments_count}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\NavBar\\navbar.tsx",["307"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport UploadIcon from '../Display/uploadIcon';\r\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        justifyContent: 'space-evenly',\r\n        // marginTop: 20,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nexport default function LabelBottomNavigation() {\r\n    // const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n\r\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    //     setValue(newValue);\r\n    // };\r\n\r\n    // return (\r\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\r\n    //     </BottomNavigation>\r\n    // );\r\n\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <HomeRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <SearchRoundedIcon />\r\n                </IconButton>\r\n                <UploadIcon/>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\">\r\n                    <ExploreRoundedIcon/>\r\n                </IconButton>\r\n                <IconButton color=\"inherit\">\r\n                    <SettingsRoundedIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\Avatar.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Layouts\\Posts.tsx",["308"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\report.tsx",["309"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function ReportButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleReport = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post reported!');\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button  >\r\n        Open with fade transition\r\n      </Button> */}\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                style={{ color: '#fafafa' }}\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleReport}>Report post</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Game\\GTLmenu.tsx",["310","311","312"],{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","severity":1,"message":"318","line":25,"column":8,"nodeType":"319","messageId":"320","endLine":25,"endColumn":22},{"ruleId":"317","severity":1,"message":"321","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":12},{"ruleId":"317","severity":1,"message":"322","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":16},{"ruleId":"317","severity":1,"message":"323","line":7,"column":39,"nodeType":"319","messageId":"320","endLine":7,"endColumn":42},{"ruleId":"317","severity":1,"message":"324","line":9,"column":8,"nodeType":"319","messageId":"320","endLine":9,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":37,"column":18,"nodeType":"327","messageId":"328","endLine":37,"endColumn":20},{"ruleId":"317","severity":1,"message":"329","line":20,"column":10,"nodeType":"319","messageId":"320","endLine":20,"endColumn":14},{"ruleId":"317","severity":1,"message":"330","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":24},{"ruleId":"317","severity":1,"message":"331","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":19},{"ruleId":"317","severity":1,"message":"332","line":3,"column":37,"nodeType":"319","messageId":"320","endLine":3,"endColumn":47},{"ruleId":"317","severity":1,"message":"333","line":3,"column":49,"nodeType":"319","messageId":"320","endLine":3,"endColumn":53},{"ruleId":"317","severity":1,"message":"322","line":1,"column":10,"nodeType":"319","messageId":"320","endLine":1,"endColumn":16},{"ruleId":"317","severity":1,"message":"334","line":1,"column":26,"nodeType":"319","messageId":"320","endLine":1,"endColumn":30},{"ruleId":"317","severity":1,"message":"335","line":1,"column":32,"nodeType":"319","messageId":"320","endLine":1,"endColumn":43},{"ruleId":"317","severity":1,"message":"332","line":1,"column":45,"nodeType":"319","messageId":"320","endLine":1,"endColumn":55},{"ruleId":"317","severity":1,"message":"333","line":1,"column":57,"nodeType":"319","messageId":"320","endLine":1,"endColumn":61},{"ruleId":"317","severity":1,"message":"336","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":19},{"ruleId":"317","severity":1,"message":"337","line":7,"column":8,"nodeType":"319","messageId":"320","endLine":7,"endColumn":21},{"ruleId":"317","severity":1,"message":"338","line":9,"column":10,"nodeType":"319","messageId":"320","endLine":9,"endColumn":27},{"ruleId":"317","severity":1,"message":"339","line":86,"column":31,"nodeType":"319","messageId":"320","endLine":86,"endColumn":33},{"ruleId":"317","severity":1,"message":"340","line":10,"column":8,"nodeType":"319","messageId":"320","endLine":10,"endColumn":18},{"ruleId":"317","severity":1,"message":"341","line":4,"column":10,"nodeType":"319","messageId":"320","endLine":4,"endColumn":20},{"ruleId":"342","severity":1,"message":"343","line":18,"column":40,"nodeType":"344","messageId":"345","endLine":18,"endColumn":47,"fix":"346"},{"ruleId":"342","severity":1,"message":"343","line":19,"column":40,"nodeType":"344","messageId":"345","endLine":19,"endColumn":47,"fix":"347"},{"ruleId":"317","severity":1,"message":"348","line":6,"column":12,"nodeType":"319","messageId":"320","endLine":6,"endColumn":23},{"ruleId":"317","severity":1,"message":"349","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":28},{"ruleId":"317","severity":1,"message":"333","line":4,"column":10,"nodeType":"319","messageId":"320","endLine":4,"endColumn":14},{"ruleId":"317","severity":1,"message":"322","line":6,"column":10,"nodeType":"319","messageId":"320","endLine":6,"endColumn":16},{"ruleId":"317","severity":1,"message":"340","line":6,"column":18,"nodeType":"319","messageId":"320","endLine":6,"endColumn":28},{"ruleId":"317","severity":1,"message":"350","line":7,"column":22,"nodeType":"319","messageId":"320","endLine":7,"endColumn":27},{"ruleId":"317","severity":1,"message":"351","line":7,"column":29,"nodeType":"319","messageId":"320","endLine":7,"endColumn":41},{"ruleId":"317","severity":1,"message":"352","line":8,"column":10,"nodeType":"319","messageId":"320","endLine":8,"endColumn":16},{"ruleId":"317","severity":1,"message":"353","line":11,"column":18,"nodeType":"319","messageId":"320","endLine":11,"endColumn":32},{"ruleId":"317","severity":1,"message":"354","line":11,"column":34,"nodeType":"319","messageId":"320","endLine":11,"endColumn":45},{"ruleId":"317","severity":1,"message":"355","line":2,"column":54,"nodeType":"319","messageId":"320","endLine":2,"endColumn":63},{"ruleId":"317","severity":1,"message":"349","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":28},{"ruleId":"317","severity":1,"message":"333","line":4,"column":10,"nodeType":"319","messageId":"320","endLine":4,"endColumn":14},{"ruleId":"317","severity":1,"message":"356","line":4,"column":16,"nodeType":"319","messageId":"320","endLine":4,"endColumn":26},{"ruleId":"317","severity":1,"message":"323","line":4,"column":28,"nodeType":"319","messageId":"320","endLine":4,"endColumn":31},{"ruleId":"317","severity":1,"message":"322","line":6,"column":10,"nodeType":"319","messageId":"320","endLine":6,"endColumn":16},{"ruleId":"317","severity":1,"message":"340","line":6,"column":18,"nodeType":"319","messageId":"320","endLine":6,"endColumn":28},{"ruleId":"317","severity":1,"message":"357","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":20},{"ruleId":"317","severity":1,"message":"350","line":7,"column":22,"nodeType":"319","messageId":"320","endLine":7,"endColumn":27},{"ruleId":"317","severity":1,"message":"351","line":7,"column":29,"nodeType":"319","messageId":"320","endLine":7,"endColumn":41},{"ruleId":"317","severity":1,"message":"349","line":3,"column":8,"nodeType":"319","messageId":"320","endLine":3,"endColumn":28},{"ruleId":"317","severity":1,"message":"333","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":14},{"ruleId":"317","severity":1,"message":"322","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":16},{"ruleId":"317","severity":1,"message":"340","line":7,"column":18,"nodeType":"319","messageId":"320","endLine":7,"endColumn":28},{"ruleId":"317","severity":1,"message":"350","line":8,"column":22,"nodeType":"319","messageId":"320","endLine":8,"endColumn":27},{"ruleId":"317","severity":1,"message":"351","line":8,"column":29,"nodeType":"319","messageId":"320","endLine":8,"endColumn":41},{"ruleId":"317","severity":1,"message":"352","line":9,"column":10,"nodeType":"319","messageId":"320","endLine":9,"endColumn":16},{"ruleId":"317","severity":1,"message":"353","line":12,"column":18,"nodeType":"319","messageId":"320","endLine":12,"endColumn":32},{"ruleId":"317","severity":1,"message":"354","line":12,"column":34,"nodeType":"319","messageId":"320","endLine":12,"endColumn":45},{"ruleId":"317","severity":1,"message":"323","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":13},{"ruleId":"317","severity":1,"message":"358","line":5,"column":42,"nodeType":"319","messageId":"320","endLine":5,"endColumn":56},{"ruleId":"317","severity":1,"message":"359","line":7,"column":7,"nodeType":"319","messageId":"320","endLine":7,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":36,"column":44,"nodeType":"344","messageId":"345","endLine":36,"endColumn":51,"fix":"360"},{"ruleId":"317","severity":1,"message":"340","line":3,"column":8,"nodeType":"319","messageId":"320","endLine":3,"endColumn":18},{"ruleId":"317","severity":1,"message":"361","line":4,"column":8,"nodeType":"319","messageId":"320","endLine":4,"endColumn":17},{"ruleId":"317","severity":1,"message":"336","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":19},{"ruleId":"317","severity":1,"message":"332","line":7,"column":45,"nodeType":"319","messageId":"320","endLine":7,"endColumn":55},{"ruleId":"317","severity":1,"message":"329","line":8,"column":10,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":22,"column":7,"nodeType":"319","messageId":"320","endLine":22,"endColumn":18},{"ruleId":"317","severity":1,"message":"363","line":31,"column":11,"nodeType":"319","messageId":"320","endLine":31,"endColumn":18},{"ruleId":"317","severity":1,"message":"364","line":15,"column":8,"nodeType":"319","messageId":"320","endLine":15,"endColumn":20},{"ruleId":"317","severity":1,"message":"365","line":21,"column":8,"nodeType":"319","messageId":"320","endLine":21,"endColumn":28},{"ruleId":"317","severity":1,"message":"366","line":22,"column":8,"nodeType":"319","messageId":"320","endLine":22,"endColumn":15},{"ruleId":"317","severity":1,"message":"367","line":23,"column":15,"nodeType":"319","messageId":"320","endLine":23,"endColumn":21},{"ruleId":"317","severity":1,"message":"368","line":24,"column":8,"nodeType":"319","messageId":"320","endLine":24,"endColumn":19},{"ruleId":"317","severity":1,"message":"369","line":151,"column":13,"nodeType":"319","messageId":"320","endLine":151,"endColumn":22},{"ruleId":"317","severity":1,"message":"370","line":5,"column":8,"nodeType":"319","messageId":"320","endLine":5,"endColumn":30},{"ruleId":"317","severity":1,"message":"371","line":9,"column":8,"nodeType":"319","messageId":"320","endLine":9,"endColumn":17},{"ruleId":"317","severity":1,"message":"372","line":53,"column":11,"nodeType":"319","messageId":"320","endLine":53,"endColumn":18},{"ruleId":"317","severity":1,"message":"373","line":17,"column":12,"nodeType":"319","messageId":"320","endLine":17,"endColumn":16},{"ruleId":"317","severity":1,"message":"374","line":17,"column":18,"nodeType":"319","messageId":"320","endLine":17,"endColumn":25},{"ruleId":"325","severity":1,"message":"326","line":20,"column":19,"nodeType":"327","messageId":"328","endLine":20,"endColumn":21},{"ruleId":"325","severity":1,"message":"375","line":24,"column":33,"nodeType":"327","messageId":"328","endLine":24,"endColumn":35},{"ruleId":"325","severity":1,"message":"375","line":27,"column":33,"nodeType":"327","messageId":"328","endLine":27,"endColumn":35},{"ruleId":"325","severity":1,"message":"375","line":35,"column":33,"nodeType":"327","messageId":"328","endLine":35,"endColumn":35},{"ruleId":"325","severity":1,"message":"375","line":38,"column":33,"nodeType":"327","messageId":"328","endLine":38,"endColumn":35},{"ruleId":"317","severity":1,"message":"331","line":3,"column":10,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":79,"column":24,"nodeType":"378","messageId":"379","endLine":79,"endColumn":31},{"ruleId":"317","severity":1,"message":"380","line":2,"column":20,"nodeType":"319","messageId":"320","endLine":2,"endColumn":29},{"ruleId":"317","severity":1,"message":"381","line":9,"column":18,"nodeType":"319","messageId":"320","endLine":9,"endColumn":21},{"ruleId":"382","severity":1,"message":"383","line":3,"column":1,"nodeType":"384","endLine":59,"endColumn":3},{"ruleId":"317","severity":1,"message":"367","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":14},{"ruleId":"317","severity":1,"message":"385","line":2,"column":26,"nodeType":"319","messageId":"320","endLine":2,"endColumn":36},{"ruleId":"317","severity":1,"message":"386","line":9,"column":10,"nodeType":"319","messageId":"320","endLine":9,"endColumn":20},{"ruleId":"317","severity":1,"message":"350","line":9,"column":22,"nodeType":"319","messageId":"320","endLine":9,"endColumn":27},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"@typescript-eslint/no-unused-vars","'LocationPicker' is defined but never used.","Identifier","unusedVar","'Feed' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'BottomNavigation' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'OccupationSelect' is defined but never used.","'Component' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'BadgeAvatar' is defined but never used.","'SinglePostNew' is defined but never used.","'checkUserLoggedIn' is defined but never used.","'id' is assigned a value but never used.","'IconButton' is defined but never used.","'RegularBtn' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"389","text":"390"},{"range":"391","text":"390"},"'coordinates' is assigned a value but never used.","'ArrowBackRoundedIcon' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'purple' is defined but never used.","'SwitchClassKey' is defined but never used.","'SwitchProps' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'withStyles' is defined but never used.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.",{"range":"392","text":"390"},"'AddAvatar' is defined but never used.","'SmallAvatar' is assigned a value but never used.","'classes' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'GuessTheLocationPlay' is defined but never used.","'GTLicon' is defined but never used.","'Button' is defined but never used.","'GTLexpanded' is defined but never used.","'questions' is assigned a value but never used.","'GuessTheLocationButton' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useEffect' is defined but never used.","'Fab' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MenuButton' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",[738,745],"[]",[788,795],[988,995]]