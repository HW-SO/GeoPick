[{"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\index.tsx":"1","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts":"2","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\App.tsx":"3","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts":"4","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx":"5","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"6","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"7","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\explore-page\\index.tsx":"8","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\terms\\index.tsx":"9","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\search-page\\index.tsx":"10","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx":"11","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\camera\\index.tsx":"12","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\view-points-screen\\points.tsx":"13","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"14","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx":"15","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx":"16","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx":"17","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\upload-image\\index.tsx":"18","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Camera.tsx":"19","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"20","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"21","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\accessSetting\\index.tsx":"22","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\post-view\\index.tsx":"23","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx":"24","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\notificationset\\index.tsx":"25","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\notification\\index.tsx":"26","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts":"27","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"28","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Places.tsx":"29","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePostNew.tsx":"30","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\profileOverview.tsx":"31","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\tags.tsx":"32","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts":"33","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"34","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx":"35","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts":"36","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\avatarSmall.tsx":"37","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\report.tsx":"38","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\sharePost.tsx":"39","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Game\\GTLmenu.tsx":"40","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts":"41","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx":"42","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"43","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx":"44","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\uploadIcon.tsx":"45","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\userFeed1.tsx":"46","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"47","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx":"48","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx":"49","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"50","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Posts.tsx":"51","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePostNew1.tsx":"52","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\edit.tsx":"53","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\followers-page\\ViewFollowers.tsx":"54","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\delete-post\\index.tsx":"55","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\edit-post\\index.tsx":"56","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\followers-page\\CustomTab.tsx":"57"},{"size":944,"mtime":1614943547210,"results":"58","hashOfConfig":"59"},{"size":482,"mtime":1613206871973,"results":"60","hashOfConfig":"59"},{"size":7874,"mtime":1615647731689,"results":"61","hashOfConfig":"59"},{"size":821,"mtime":1613206871975,"results":"62","hashOfConfig":"59"},{"size":1647,"mtime":1613206871850,"results":"63","hashOfConfig":"59"},{"size":5210,"mtime":1613206871909,"results":"64","hashOfConfig":"59"},{"size":3984,"mtime":1613206871849,"results":"65","hashOfConfig":"59"},{"size":3262,"mtime":1615090359049,"results":"66","hashOfConfig":"59"},{"size":28443,"mtime":1613770679642,"results":"67","hashOfConfig":"59"},{"size":6320,"mtime":1615018176097,"results":"68","hashOfConfig":"59"},{"size":5907,"mtime":1613887740427,"results":"69","hashOfConfig":"59"},{"size":415,"mtime":1614943547212,"results":"70","hashOfConfig":"59"},{"size":2676,"mtime":1613887740446,"results":"71","hashOfConfig":"59"},{"size":4623,"mtime":1615554168342,"results":"72","hashOfConfig":"59"},{"size":4692,"mtime":1615554168308,"results":"73","hashOfConfig":"59"},{"size":5692,"mtime":1615647731774,"results":"74","hashOfConfig":"59"},{"size":5488,"mtime":1615554168320,"results":"75","hashOfConfig":"59"},{"size":12065,"mtime":1615554168352,"results":"76","hashOfConfig":"59"},{"size":1672,"mtime":1615554168239,"results":"77","hashOfConfig":"59"},{"size":5380,"mtime":1613770679643,"results":"78","hashOfConfig":"59"},{"size":8647,"mtime":1613229796049,"results":"79","hashOfConfig":"59"},{"size":4660,"mtime":1614436722283,"results":"80","hashOfConfig":"59"},{"size":15449,"mtime":1614587600957,"results":"81","hashOfConfig":"59"},{"size":3253,"mtime":1615090359063,"results":"82","hashOfConfig":"59"},{"size":2904,"mtime":1614436722314,"results":"83","hashOfConfig":"59"},{"size":1692,"mtime":1615636194324,"results":"84","hashOfConfig":"59"},{"size":3345,"mtime":1615636175682,"results":"85","hashOfConfig":"59"},{"size":1457,"mtime":1613206871742,"results":"86","hashOfConfig":"59"},{"size":2084,"mtime":1615647731716,"results":"87","hashOfConfig":"59"},{"size":15672,"mtime":1615554168193,"results":"88","hashOfConfig":"59"},{"size":9890,"mtime":1615647741809,"results":"89","hashOfConfig":"59"},{"size":3165,"mtime":1615647731724,"results":"90","hashOfConfig":"59"},{"size":137,"mtime":1613206871778,"results":"91","hashOfConfig":"59"},{"size":1523,"mtime":1613206871733,"results":"92","hashOfConfig":"59"},{"size":2032,"mtime":1613206871746,"results":"93","hashOfConfig":"59"},{"size":969,"mtime":1613206871776,"results":"94","hashOfConfig":"59"},{"size":1478,"mtime":1614454629394,"results":"95","hashOfConfig":"59"},{"size":1574,"mtime":1614943547191,"results":"96","hashOfConfig":"59"},{"size":3347,"mtime":1613206871738,"results":"97","hashOfConfig":"59"},{"size":19398,"mtime":1615554168227,"results":"98","hashOfConfig":"59"},{"size":272,"mtime":1613206871777,"results":"99","hashOfConfig":"59"},{"size":2728,"mtime":1613206871745,"results":"100","hashOfConfig":"59"},{"size":896,"mtime":1613206871735,"results":"101","hashOfConfig":"59"},{"size":4624,"mtime":1615090359036,"results":"102","hashOfConfig":"59"},{"size":4430,"mtime":1615554168216,"results":"103","hashOfConfig":"59"},{"size":2018,"mtime":1615554168297,"results":"104","hashOfConfig":"59"},{"size":1808,"mtime":1613206871742,"results":"105","hashOfConfig":"59"},{"size":2894,"mtime":1613229796047,"results":"106","hashOfConfig":"59"},{"size":682,"mtime":1614454629393,"results":"107","hashOfConfig":"59"},{"size":1284,"mtime":1613206871736,"results":"108","hashOfConfig":"59"},{"size":1881,"mtime":1614592239257,"results":"109","hashOfConfig":"59"},{"size":15674,"mtime":1615647731702,"results":"110","hashOfConfig":"59"},{"size":1741,"mtime":1615554168170,"results":"111","hashOfConfig":"59"},{"size":908,"mtime":1615647731767,"results":"112","hashOfConfig":"59"},{"size":9529,"mtime":1615647731731,"results":"113","hashOfConfig":"59"},{"size":12462,"mtime":1615647731740,"results":"114","hashOfConfig":"59"},{"size":5236,"mtime":1615647731751,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"10ad72d",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"189","usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194","usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\index.tsx",[],["255","256"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\App.tsx",["257","258"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\explore-page\\index.tsx",["259","260","261","262","263","264","265","266","267"],"import React, { useState, useLayoutEffect, useRef, useEffect } from 'react'\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { Box } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport Button from '@material-ui/core/Button';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport interface SearchProps {}\r\n\r\nexport default function ExploreScreen() {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const firstUpdate = useRef(true);\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 45.4211,\r\n        longitude: -75.6903,\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        zoom: 5\r\n      });\r\n\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return;\r\n        }\r\n    \r\n        // console.log(\"componentDidUpdateFunction\");\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .onSnapshot((snapshot: any) => {\r\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(posts)\r\n      });\r\n\r\n    // useEffect(() => {\r\n        \r\n    // });\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"button\" style={{ float: 'left' }}>\r\n                <ArrowBackRoundedIcon />\r\n            </div>\r\n            <div className=\"image\">\r\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\r\n            </div>\r\n            <div id=\"titleDiv\">\r\n                <Card background=\"#202020\" title=\"Explore\" split={2}>\r\n                <ReactMapGL\r\n                    {...viewport}\r\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n                    mapStyle=\"mapbox://styles/geopick2021/cklr56ufp069x18pss5neglc4\"\r\n                    onViewportChange={(viewport: any) => {\r\n                    setViewport(viewport);\r\n                    }}\r\n                >\r\n                    {posts.map(({id, post}) => (\r\n                        <Marker\r\n                            key={id}\r\n                            latitude={post.coordinates.lat}\r\n                            longitude={post.coordinates.lng}\r\n                        >\r\n                            <Link to={{ pathname: `/post/${id}`, state: post.uid}}>\r\n                                <Avatar alt={post.user_name} src={post.Image} />\r\n                            </Link>\r\n                            \r\n                        </Marker>\r\n                    ))}\r\n\r\n                </ReactMapGL>\r\n                 \r\n                  \r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\terms\\index.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\search-page\\index.tsx",["268","269","270"],"import React, { useState } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { Box } from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport Button from '@material-ui/core/Button';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\n\r\nexport interface SearchProps {}\r\n\r\nexport default function SearchScreen() {\r\n    const [users, setUsers] = useState(Array());\r\n    const [posts, setPosts] = useState(Array());\r\n    const [userOn, setUserOn] = useState(false);\r\n    const [postOn, setPostOn] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const toggleUser = () => {\r\n        setUserOn(true);\r\n        setPostOn(false);\r\n        firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .where('User_name', '>=', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setUsers(users);\r\n                setPosts([]);\r\n            });\r\n    };\r\n\r\n    const togglePost = () => {\r\n        setUserOn(false);\r\n        setPostOn(true);\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('tags', 'array-contains', query)\r\n            .limit(5)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map((doc) => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data };\r\n                });\r\n                setPosts(posts);\r\n                setUsers([]);\r\n            });\r\n    };\r\n\r\n    const fetchResults = (search: React.ChangeEvent<HTMLInputElement>) => {\r\n        setQuery(search.target.value.toLowerCase());\r\n        if (userOn) {\r\n            toggleUser();\r\n        }\r\n        if (postOn) {\r\n            togglePost();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"button\" style={{ float: 'left' }}>\r\n                <ArrowBackRoundedIcon />\r\n            </div>\r\n            <div className=\"image\">\r\n                <img src={WhiteLogo} alt=\"GeoPicK Logo\" className=\"WhiteLogo\" />\r\n            </div>\r\n            <div id=\"titleDiv\">\r\n                <Card background=\"#202020\" title=\"Search\" split={2}>\r\n                    <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Search here...\"\r\n                        onChange={fetchResults}\r\n                    />\r\n                    <br></br>\r\n                    <Box>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ float: 'left', borderRadius: '20px' }}\r\n                            onClick={toggleUser}\r\n                        >\r\n                            Users\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ float: 'right', borderRadius: '20px' }}\r\n                            onClick={togglePost}\r\n                        >\r\n                            Posts\r\n                        </Button>\r\n                    </Box>\r\n                    <br />\r\n                    <br />\r\n                    {users.length > 0 &&\r\n                        users.map((data) => {\r\n                            // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                    <ProfileOverview\r\n                                        key={data.id}\r\n                                        uid={data.id}\r\n                                        User_name={data.User_name}\r\n                                        Avatar={data.Avatar}\r\n                                        Size=\"small\"\r\n                                        User={data}\r\n                                        followers\r\n                                    />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                    {posts.length > 0 &&\r\n                        posts.map((data) => {\r\n                            // console.log(data);\r\n                            return (\r\n                                <div>\r\n                                    <SinglePostNew\r\n                                        key={data.id}\r\n                                        id={data.id}\r\n                                        // profileUrl={post.profileUrl}\r\n                                        username={data.user_name}\r\n                                        postPic={data.Image}\r\n                                        uid={data.uid}\r\n                                        // caption={post.caption}\r\n                                        // comments={post.comments}\r\n                                        date={new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                                        likes_count={data.likes_count}\r\n                                        caption={data.caption}\r\n                                        sharedURL={window.location.href}\r\n                                        hidden={false}\r\n                                        comments_count={data.comments_count}\r\n                                    />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\edit-profile\\editProfile.tsx",["271"],"import { Avatar, Box, Button, Card, CardContent, Divider, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport OccupationSelect from '../../components/Inputs/occupation';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport interface EditProfileProps {}\r\n\r\nexport interface EditProfileState {}\r\n\r\nclass EditProfile extends Component<EditProfileProps, EditProfileState> {\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    handleonclickSubmit() {\r\n        console.log('Profile edit changes!');\r\n    }\r\n    handleonclickChangePassword() {\r\n        console.log('Go to change password screen!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto', paddingBottom: '5em' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        marginBottom: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                        paddingBottom: '1em',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        style={{\r\n                            float: 'right',\r\n                            width: '120px',\r\n                            height: '120px',\r\n                            marginRight: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                    ></Avatar>\r\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\r\n                        {/* <Grid container direction=\"column\">\r\n                    <Grid item> */}\r\n\r\n                        <Typography variant=\"h3\" style={{ color: '#fafafa' }}>\r\n                            Hi<br></br>\r\n                            {\r\n                                <Typography variant=\"h4\" style={{ color: '#f56920' }}>\r\n                                    'mo.kvs_'\r\n                                </Typography>\r\n                            }\r\n                            {/* The username comes here */}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <div style={{ margin: '20px', textAlign: 'center' }}>\r\n                        <Box m={2}></Box>\r\n                        <TextField label=\"Name\" color=\"primary\"></TextField>\r\n                        <Box m={2}></Box>\r\n                        <TextField\r\n                            label=\"Something about yourself...\"\r\n                            color=\"primary\"\r\n                            multiline\r\n                            rows={1}\r\n                            rowsMax={4}\r\n                        ></TextField>\r\n                    </div>\r\n                    <Box m={3}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickSubmit}\r\n                        style={{\r\n                            background: '#f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '25px',\r\n                        }}\r\n                    >\r\n                        Submit changes\r\n                    </Button>\r\n\r\n                    <Box m={3}></Box>\r\n                    <Divider style={{ background: '#f56920' }} />\r\n                    <Box m={2}></Box>\r\n                    <Typography variant=\"body2\" style={{ color: '#fafafa' }}>\r\n                        looking for something else?\r\n                    </Typography>\r\n                    <Box m={-1}></Box>\r\n                    <Button\r\n                        onClick={this.handleonclickChangePassword}\r\n                        style={{\r\n                            // background: '#f56920',\r\n                            border: '3px solid #f56920',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                            // marginBottom: '5px',\r\n                        }}\r\n                    >\r\n                        Change Password\r\n                    </Button>\r\n                    <br></br>\r\n                    <Box m={-1.5}></Box>\r\n                    <Button\r\n                        style={{\r\n                            background: '#2f4858',\r\n                            color: '#fafafa',\r\n                            padding: '10px 20px 10px 20px',\r\n                            margin: 'auto',\r\n                            borderRadius: '20px',\r\n                            marginTop: '20px',\r\n                        }}\r\n                        onClick={this.signOut}\r\n                    >\r\n                        <Link to=\"/welcome\">\r\n                            <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                                Sign Out\r\n                            </Typography>\r\n                        </Link>\r\n                    </Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\camera\\index.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\view-points-screen\\points.tsx",["272","273","274"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { Avatar, Box, Button, Card, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nexport interface ViewPointsProps {}\r\n\r\nexport interface ViewPointsState {}\r\n\r\nclass ViewPoints extends React.Component<ViewPointsProps, ViewPointsState> {\r\n    handleonclick() {\r\n        console.log('Share with friends!');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', paddingTop: '10px', paddingBottom: '50px' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <Card\r\n                    style={{\r\n                        height: '80%',\r\n                        width: '30em',\r\n                        maxWidth: '70%',\r\n                        margin: 'auto',\r\n                        padding: '20px',\r\n                        borderRadius: '50px',\r\n                    }}\r\n                >\r\n                    <Avatar\r\n                        src={'avatar comes here'}\r\n                        alt={'username comes here'}\r\n                        style={{ margin: 'auto', width: '100px', height: '100px', marginBottom: '20px' }}\r\n                    ></Avatar>\r\n                    <Typography variant=\"h5\" style={{ color: '#f56920' }}>\r\n                        {'username comes here'}\r\n                    </Typography>\r\n                    <Box m={5}></Box>\r\n\r\n                    <Typography variant=\"h6\">Congratulations, you have</Typography>\r\n                    <Typography variant=\"h1\" style={{ fontWeight: 'bolder' }}>\r\n                        {'10000'}\r\n                    </Typography>\r\n                    <Box m={-2}></Box>\r\n                    <Typography variant=\"h3\" style={{ color: '#f56920' }}>\r\n                        points\r\n                    </Typography>\r\n                    <Box m={3}></Box>\r\n                </Card>\r\n                <Button\r\n                    onClick={this.handleonclick}\r\n                    style={{\r\n                        background: '#f56920',\r\n                        color: '#fafafa',\r\n                        padding: '10px 20px 10px 20px',\r\n                        margin: 'auto',\r\n                        borderRadius: '20px',\r\n                        marginTop: '20px',\r\n                    }}\r\n                >\r\n                    Share it with your friends\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewPoints;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx",["275","276","277","278","279","280"],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\nimport { Avatar, IconButton, Toolbar, Box, AppBar, Slide } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport BottomNavigation from '../../components/NavBar/navbar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { auth } from '../../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport AvatarSmall from '../../components/Display/avatarSmall';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any;\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n}\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n    constructor(HomeScreenProps: any) {\r\n        super(HomeScreenProps);\r\n        this.state = {\r\n            posts: [],\r\n            user: {},\r\n            isAuthenticated: false,\r\n            uid: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const auth = checkUserLoggedIn();\r\n        if (auth != undefined) {\r\n            this.getUser().then(\r\n                (user) => {\r\n                    this.setState({ isAuthenticated: true, user: user, uid: auth.uid });\r\n                },\r\n                (error) => {\r\n                    this.setState({ isAuthenticated: true });\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .onSnapshot((snapshot: any) => {\r\n                this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(this.state);\r\n    }\r\n\r\n    // getData = () => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .orderBy('likes_count')\r\n    //         .get()\r\n    //         .then((querySnapshot) => {\r\n    //             querySnapshot.forEach(function () {\r\n    //                 // console.log(doc.id, ' => ', doc.data());\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('Error getting documents: ', err);\r\n    //         });\r\n    // };\r\n\r\n    getUser = () => {\r\n        const auth = checkUserLoggedIn();\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(auth.uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        // this.se\r\n                        if (querySnapshot.data()) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        // console.log(\"hello\");\r\n        if (!this.state.isAuthenticated) return null;\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }}>\r\n                <AppBar position=\"fixed\" style={{ background: '#1b1b1b' }}>\r\n                    <Toolbar style={{ position: 'relative' }}>\r\n                        <Link to=\"/welcome\">\r\n                            <IconButton edge=\"end\" onClick={this.signOut}>\r\n                                <ExitToAppIcon style={{ color: 'white' }} />\r\n                            </IconButton>\r\n                        </Link>\r\n\r\n                        <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                        <AvatarSmall\r\n                            User={this.state.user}\r\n                            uid={this.state.uid}\r\n                            User_name={this.state.user.User_name}\r\n                            Avatar={this.state.user.Avatar}\r\n                            Size=\"small\"\r\n                        />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <SinglePostNew />\r\n                <Feed />\r\n\r\n                <div style={{ padding: '30px' }}></div>\r\n                <BottomNavigation />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\settings-screen\\SettingsMenu.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\profile-screen\\userPage.tsx",["281","282","283","284","285","286","287","288","289"],"import { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport SinglePostNew from '../../components/Display/singlePostNew';\r\nimport ProfileOverview from '../../components/Display/profileOverview';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport UserFeed1 from '../../components/Layouts/userFeed1';\r\n\r\nimport { auth } from '../../firebase';\r\nexport interface UserPageProps {}\r\n\r\nexport interface UserPageState {\r\n    posts: any;\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    uid: string;\r\n}\r\n\r\nclass UserPage extends Component<UserPageProps, UserPageState> {\r\n    constructor(UserPageProps: any) {\r\n        super(UserPageProps);\r\n        this.state = {\r\n            posts: [],\r\n            user: {},\r\n            isAuthenticated: false,\r\n            uid: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, user: user, uid: uid });\r\n                console.log(this.state.user);\r\n                console.log(this.state.uid);\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n\r\n    //     const auth = checkUserLoggedIn();\r\n    //     if(auth != undefined){\r\n\r\n    //     }\r\n\r\n    // }\r\n\r\n    // getData = () => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .orderBy('likes_count')\r\n    //         .get()\r\n    //         .then((querySnapshot) => {\r\n    //             querySnapshot.forEach(function () {\r\n    //                 // console.log(doc.id, ' => ', doc.data());\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('Error getting documents: ', err);\r\n    //         });\r\n    // };\r\n\r\n    getUser = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const uid = path[path.length - 1];\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        const id = querySnapshot.id;\r\n                        if (data) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    signOut = () => {\r\n        auth.doSignOut();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', height: 'auto' }}>\r\n                <img\r\n                    src={WhiteLogo}\r\n                    alt=\"GeoPicK\"\r\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\r\n                />\r\n                <ProfileOverview\r\n                    User={this.state.user}\r\n                    User_name={<span style={{ fontSize: 'calc(12px + 2vw)' }}>{this.state.user.User_name}</span>}\r\n                    Avatar={this.state.user.Avatar}\r\n                    Size=\"large\"\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                <Button\r\n                    style={{\r\n                        paddingLeft: '15%',\r\n                        paddingRight: '15%',\r\n                        background: '#f56920',\r\n                        borderRadius: '20px',\r\n                        marginRight: '10%',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                        Edit Profile\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{\r\n                        background: '#1b1b1b',\r\n                        border: '3px solid #f56920',\r\n                        borderRadius: '20px',\r\n                        maxWidth: '600px',\r\n                        margin: 'auto',\r\n                        paddingLeft: '5%',\r\n                        paddingRight: '5%',\r\n                    }}\r\n                    onClick={this.signOut}\r\n                >\r\n                    <Link to=\"/welcome\">\r\n                        <Typography variant=\"button\" style={{ color: '#fafafa' }}>\r\n                            Sign Out\r\n                        </Typography>\r\n                    </Link>\r\n                </Button>\r\n                <div style={{ margin: 'auto' }}>\r\n                    <Typography variant=\"h4\" style={{ color: '#fafafa', paddingTop: '25px' }}>\r\n                        My <span style={{ color: '#f56920' }}>Posts</span>\r\n                    </Typography>\r\n                </div>\r\n                <UserFeed1 uid={this.state.uid} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\upload-image\\index.tsx",["290","291"],"import { Card, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './Styles.scss';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Box } from '@material-ui/core';\r\nimport UploadIcon from '../../components/Display/uploadIcon';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Tags from '../../components/Inputs/tags';\r\nimport { auth } from '../../firebase';\r\nimport Compress from 'react-image-file-resizer';\r\nimport { storage } from '../../firebase/firebase';\r\nimport Places from '../../components/Inputs/Places';\r\nexport interface UploadImageProps {}\r\n\r\nexport interface UploadImageState {\r\n    user: any;\r\n    isAuthenticated: boolean;\r\n    imgurl: string;\r\n    img: any;\r\n    caption: string;\r\n    tags: any;\r\n    height: number;\r\n    width: number;\r\n    rawurl: string;\r\n    location: any;\r\n    check: boolean;\r\n    coordinates: any;\r\n}\r\n\r\nexport class UploadImage extends Component<UploadImageProps, UploadImageState> {\r\n    constructor(UploadImageProps: any) {\r\n        super(UploadImageProps);\r\n        // firebase.auth().onAuthStateChanged(function(user) {\r\n        //     this.setState({ user: user });\r\n        // });\r\n        this.state = {\r\n            user: {},\r\n            isAuthenticated: false,\r\n            imgurl: '',\r\n            img: {},\r\n            caption: '',\r\n            tags: [],\r\n            height: 0,\r\n            width: 0,\r\n            rawurl: 'https://wallpapercave.com/wp/wp3597484.jpg',\r\n            location: {},\r\n            check: false,\r\n            coordinates: {},\r\n        };\r\n    }\r\n\r\n    selectedTags = (tagses: any) => {\r\n        this.setState({ tags: tagses });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n    }\r\n\r\n    getUser = () => {\r\n        const auth = checkUserLoggedIn();\r\n        return new Promise(function (resolve, reject) {\r\n            if (auth === undefined) {\r\n            } else {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(auth.uid)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        const data = querySnapshot.data();\r\n                        if (data) {\r\n                            resolve(data);\r\n                        } else {\r\n                            reject('User not authenticated');\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        const file = this.state.img;\r\n        const user = auth.checkUserLoggedIn();\r\n        const image = new Image();\r\n        let fr = new FileReader();\r\n\r\n        if (!user) return;\r\n\r\n        if (!this.state.check) {\r\n            alert('You must check the condition');\r\n            return;\r\n        }\r\n        fr.onload = async function () {\r\n            if (fr !== null && typeof fr.result == 'string') {\r\n                image.src = fr.result;\r\n                console.log('in frload');\r\n                console.log('frwidg', image.width);\r\n                console.log('frhigg', image.height);\r\n            }\r\n        };\r\n        fr.readAsDataURL(file);\r\n\r\n        var width = 0;\r\n        var height = 0;\r\n\r\n        image.onload = function () {\r\n            height = image.height;\r\n            width = image.width;\r\n        };\r\n\r\n        setTimeout(() => {\r\n            Compress.imageFileResizer(\r\n                file,\r\n                width,\r\n                height,\r\n                'JPEG',\r\n                50,\r\n                0,\r\n                async (uri: any) => {\r\n                    if (typeof uri === 'string') {\r\n                        const urinew = uri.split('base64,')[1];\r\n                        storage\r\n                            .ref(`/Images/${user.uid}/Posts/${file.name}`)\r\n                            .putString(urinew, 'base64')\r\n                            .then((data) => {\r\n                                data.ref.getDownloadURL().then((url) => {\r\n                                    // this.setState({ imgurl: url });\r\n                                    firebase\r\n                                        .firestore()\r\n                                        .collection('Posts/')\r\n                                        .add({\r\n                                            Image: url,\r\n                                            caption: this.state.caption,\r\n                                            comments: [],\r\n                                            comment_count: 0,\r\n                                            likes_count: 0,\r\n                                            uid: user.uid,\r\n                                            username: this.state.user.User_name,\r\n                                            post_time: new Date(),\r\n                                            tags: this.state.tags,\r\n                                            location: this.state.location,\r\n                                            coordinates: this.state.coordinates,\r\n                                        })\r\n                                        .then(function (docRef) {\r\n                                            console.log('Document written with ID: ', docRef.id);\r\n                                        })\r\n                                        .catch(function (error) {\r\n                                            console.error('Error adding document: ', error);\r\n                                        });\r\n                                });\r\n\r\n                                // console.log(this.state.imgurl);\r\n                            });\r\n                    }\r\n                },\r\n                'base64',\r\n            );\r\n        }, 2500);\r\n\r\n        // push('/home');\r\n        // console.log(postRef.documentID);\r\n    };\r\n\r\n    changeImage = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!event.target.files || !event.target.files[0]) return;\r\n        const file = await event.target.files[0];\r\n        this.setState({ img: file, rawurl: URL.createObjectURL(file) });\r\n\r\n        // console.log(this.state.img);\r\n    };\r\n\r\n    updateCaption = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ caption: event.target.value });\r\n    };\r\n\r\n    updateLocation = (address: string) => {\r\n        this.setState({ location: address });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.location);\r\n    };\r\n\r\n    updateCoordinates = (coordinates: any) => {\r\n        const coord = {\r\n            latitude: coordinates.lat,\r\n            longtitude: coordinates.lng,\r\n        };\r\n        this.setState({ coordinates: coordinates });\r\n        // this.setState({ : event.target.value });\r\n        console.log(this.state.coordinates);\r\n    };\r\n\r\n    toggleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ check: !this.state.check });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b', padding: '10px' }}>\r\n                <Typography style={{ color: '#fafafa', fontWeight: 'normal' }} variant=\"h2\">\r\n                    <span style={{ color: '#f56920' }}>Upload</span> Image\r\n                </Typography>\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 900,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        // border: '3px solid #fafafa',\r\n                        borderRadius: '20px',\r\n                        boxShadow: 'inherit',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.user.User_name}\r\n                                src={this.state.user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.user.User_name}</Typography>}\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.rawurl}\r\n                        title={`A Photo by ${this.state.user.User_name}`}\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <Box m={-2} />\r\n                    <CardActions disableSpacing>\r\n                        <UploadIcon onChange={this.changeImage} />\r\n                    </CardActions>\r\n                </Card>\r\n                <CardContent>\r\n                    <TextField\r\n                        name=\"caption\"\r\n                        id=\"caption\"\r\n                        label=\"Enter Caption\"\r\n                        type=\"caption\"\r\n                        onChange={this.updateCaption}\r\n                    />\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Tags selectedTags={this.selectedTags} />\r\n                </CardContent>\r\n                <CardContent>\r\n                    {/* <TextField label=\"Add Location\"> */}\r\n                    <Places updateLocation={this.updateLocation} updateCoordinates={this.updateCoordinates} />\r\n                    {/* </TextField> */}\r\n                    {/* </CardContent>\r\n                    <CardContent> */}\r\n                    <br></br>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{\r\n                            color: '#fafafa',\r\n                            textAlign: 'center',\r\n                            fontWeight: 'lighter',\r\n                            width: '90%',\r\n                            margin: 'auto',\r\n                        }}\r\n                    >\r\n                        <label>\r\n                            <input type=\"checkbox\" name=\"Accept\" required onChange={this.toggleCheck} />\r\n                            By checking this box, you confirm that you are aware of the community guidelines and terms\r\n                            of use. Make sure that this post doesn't contain any human face.\r\n                        </label>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <RegularBtn\r\n                        type=\"submit\"\r\n                        colorType=\"white\"\r\n                        style={{ width: '200px', borderRadius: '15px', margin: 'auto' }}\r\n                        onClick={this.onSubmit}\r\n                    >\r\n                        Upload Post!\r\n                    </RegularBtn>\r\n                </CardActions>\r\n                {/* <Places /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Camera.tsx",["292","293","294","295"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCameraRoundedIcon from \"@material-ui/icons/PhotoCameraRounded\";const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    textAlign: 'center',\r\n  },\r\n  imgBox: {\r\n    maxWidth: \"80%\",\r\n    maxHeight: \"80%\",\r\n    margin: \"10px\"\r\n  },\r\n  img: {\r\n    height: \"inherit\",\r\n    maxWidth: \"inherit\",\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));function Camera() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <h5>Capture your image</h5>\r\n          {/* {source &&\r\n            <Box display=\"flex\" justifyContent=\"center\" border={1} className={classes.imgBox}>\r\n              <img src={source} alt={\"snap\"} className={classes.img}></img>\r\n            </Box>}\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            capture=\"environment\"\r\n            // onChange={(e) => handleCapture(e.target)}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCameraRoundedIcon fontSize=\"large\" color=\"primary\" />\r\n            </IconButton>\r\n          </label> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default Camera;","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\accessSetting\\index.tsx",["296","297","298","299","300","301","302","303","304"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface AccessibilityProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Accessibility() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Accessibility Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Dark Mode\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Change to mono colors\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedB}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedB\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <FormGroup>\r\n                            <WhiteTypography>\r\n                                Increase overall text size\r\n                                <Box m={-3.7}></Box>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedC}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedC\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                    style={{ float: 'right' }}\r\n                                />\r\n                            </WhiteTypography>\r\n                        </FormGroup>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\post-view\\index.tsx",["305"],"/* eslint-disable no-lone-blocks */\r\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\nimport { Component } from 'react';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SharePost from '../../components/Display/sharePost';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport interface PostViewState {\r\n    newComment: string;\r\n    user: any;\r\n    Image: string;\r\n    caption: string;\r\n    likes_count: number;\r\n    post_time: string;\r\n    user_name: string;\r\n    favourited: boolean;\r\n    post_uid: string;\r\n    post_user: any;\r\n    comments: any;\r\n}\r\n\r\nexport interface PostViewProps {\r\n    state: string;\r\n}\r\n\r\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\r\n    constructor(PostViewProps: any) {\r\n        super(PostViewProps);\r\n        this.state = {\r\n            favourited: false,\r\n            user: {},\r\n            Image: '',\r\n            caption: '',\r\n            likes_count: 0,\r\n            post_time: '',\r\n            user_name: '',\r\n            newComment: '',\r\n            post_uid: '',\r\n            post_user: {},\r\n            comments: [],\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        const auth = checkUserLoggedIn();\r\n        // console.log(pid);\r\n        if (auth === undefined) {\r\n        } else {\r\n            fb.firestore()\r\n                .collection('users')\r\n                .doc(auth.uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    // console.log(data);\r\n                    this.setState({\r\n                        user: data,\r\n                    });\r\n                });\r\n        }\r\n\r\n        await fb\r\n            .firestore()\r\n            .collection('Posts')\r\n            .doc(pid)\r\n            .get()\r\n            .then((doc) => {\r\n                // console.log(doc.data());\r\n                const data = doc.data();\r\n                if (data) {\r\n                    this.setState({\r\n                        Image: data.Image,\r\n                        caption: data.caption,\r\n                        likes_count: data.likes_count,\r\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\r\n                        user_name: data.user_name,\r\n                        post_uid: data.uid,\r\n                        comments: data.comments,\r\n                    });\r\n                }\r\n            });\r\n\r\n        console.log(this.state.post_uid);\r\n        fb.firestore()\r\n            .collection('users')\r\n            .doc(this.state.post_uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            favourited: false,\r\n        });\r\n    }\r\n\r\n    handleColorChange = () => {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: increment,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count + 1,\r\n            });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(pid).update({\r\n                likes_count: decrement,\r\n            });\r\n            this.setState({\r\n                likes_count: this.state.likes_count - 1,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const path = window.location.pathname.split('/');\r\n        const pid = path[path.length - 1];\r\n        // console.log(uid);\r\n        const handleChange = (event: any) => {\r\n            // console.log(event.target.value);\r\n            this.setState({\r\n                newComment: event.target.value as string,\r\n                // user: checkUserLoggedIn(),\r\n            });\r\n        };\r\n\r\n        const handleClick = (event: any) => {\r\n            const FieldValue = fb.firestore.FieldValue;\r\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\r\n            fb.firestore()\r\n                .collection('Posts')\r\n                .doc(pid)\r\n                .update({\r\n                    comments: FieldValue.arrayUnion(comment),\r\n                    comments_count: fb.firestore.FieldValue.increment(1),\r\n                });\r\n            // console.log(`${this.state.user.User_name} : ${comment}`);\r\n            // console.log(this.state.user);\r\n            this.setState({\r\n                comments: [...this.state.comments, comment],\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: 'auto',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Card\r\n                    style={{\r\n                        maxHeight: 800,\r\n                        maxWidth: 600,\r\n                        margin: 'auto',\r\n                        marginBlock: '20px',\r\n                        background: '#1b1b1b',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <CardHeader\r\n                        color=\"#fafafa\"\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"recipe\"\r\n                                alt={this.state.post_user.User_name}\r\n                                src={this.state.post_user.Avatar}\r\n                                style={{ backgroundColor: 'auto' }}\r\n                            >\r\n                                {this.state.post_user.User_name}\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                        subheader={\r\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        }\r\n                        style={{ textAlign: 'left', color: '#fafafa' }}\r\n                    />\r\n                    <CardMedia\r\n                        image={this.state.Image}\r\n                        title=\"Paella dish\"\r\n                        style={{\r\n                            borderRadius: '20px 20px 20px 20px',\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                            marginLeft: '10px',\r\n                            marginRight: '10px',\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\r\n                            {this.state.caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <SharePost sharedURL={window.location.href} />\r\n                        </IconButton>\r\n                        {/* <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton> */}\r\n                    </CardActions>\r\n                </Card>\r\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\r\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\r\n                            Latest comments\r\n                        </Typography>\r\n                        <ul>\r\n                            {this.state.comments.map((val: string, index: any) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\r\n                                            {val}\r\n                                        </Typography>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </Grid>\r\n                </Grid>\r\n                <InputBase\r\n                    onChange={handleChange}\r\n                    placeholder=\"Start typing...\"\r\n                    style={{\r\n                        width: '80%',\r\n                        // marginRight: '-12%',\r\n                        margin: 'auto',\r\n                        marginTop: '20px',\r\n                        marginBottom: '20px',\r\n                        textDecorationColor: '#FAFAFA',\r\n                        border: '1px solid #FAFAFA',\r\n                        borderRadius: '10px',\r\n                        height: '50px',\r\n                        padding: '10px',\r\n                        color: '#fafafa',\r\n                    }}\r\n                    endAdornment={\r\n                        <IconButton\r\n                            onClick={handleClick}\r\n                            aria-label=\"upload\"\r\n                            type=\"submit\"\r\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\r\n                        >\r\n                            <PublishRoundedIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                    <Grid\r\n                        item\r\n                        justify=\"flex-start\"\r\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\r\n                    >\r\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\r\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\r\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_user.User_name}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\r\n                        <Card\r\n                            style={{\r\n                                color: '#F56920',\r\n                                borderRadius: '22px',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            className=\"boxField\"\r\n                        >\r\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_time}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Container>\r\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\r\n                            <img\r\n                                src={this.state.Image}\r\n                                alt=\"not loading...\"\r\n                                // width= \"80%\"\r\n                                width=\"600px\"\r\n                                height=\"500px\"\r\n                                className=\"postImage\"\r\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\r\n                            ></img>\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\r\n                        <span>{this.state.caption}</span>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {this.state.likes_count}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <SharePost sharedURL={window.location.href} />\r\n                    </Grid>\r\n                </Grid> */\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\helpandfeedback\\index.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\notificationset\\index.tsx",["306","307","308","309","310","311","312","313","314"],"import * as React from 'react';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\r\nexport interface NotificationProps {}\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#fafafa',\r\n        '&$checked': {\r\n            color: '#F56920',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f56920',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst WhiteTypography = withStyles({\r\n    root: {\r\n        color: '#FAFAFA',\r\n        textAlign: 'left',\r\n    },\r\n})(Typography);\r\n\r\nexport default function Notification() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n    });\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\r\n            <Toolbar>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n            </Toolbar>\r\n            <div style={{ color: '#fafafa' }}>\r\n                <Card background=\"#202020\" title=\"Notification Settings\" split={1}>\r\n                    <div style={{ color: 'black' }}>\r\n                        {/* <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\"> */}\r\n                        <WhiteTypography>\r\n                            Push notification\r\n                            <Box m={-3.7}></Box>\r\n                            <FormGroup style={{ float: 'right' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <OrangeSwitch\r\n                                            checked={state.checkedA}\r\n                                            onChange={handleChange}\r\n                                            name=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label=\"\"\r\n                                />\r\n                            </FormGroup>\r\n                        </WhiteTypography>\r\n                        {/* </Grid> */}\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\notification\\index.tsx",["315","316","317","318","319","320","321","322","323","324"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Places.tsx",["325","326","327"],"import React, { useEffect } from 'react';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport TextField from './TextField';\r\nimport './Places.scss';\r\n\r\nexport default function Places(props: any) {\r\n    const [address, setAddress] = React.useState('');\r\n    const [coordinates, setCoordinates] = React.useState({\r\n        lat: null,\r\n        lng: null,\r\n    });\r\n\r\n    // console.log(coordinates);\r\n    // console.log(address);\r\n\r\n    const handleSelect = async (value: any) => {\r\n        geocodeByAddress(value)\r\n            .then((results) => getLatLng(results[0]))\r\n            .then((latLng) => props.updateCoordinates(latLng))\r\n            .catch((error) => console.error('Error', error));\r\n        setAddress(value);\r\n        props.updateLocation(address);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <TextField {...getInputProps({ placeholder: 'Add Location', className: 'search' })} />\r\n\r\n                        <div>\r\n                            {loading ? <div>...loading</div> : null}\r\n\r\n                            {suggestions.map((suggestion) => {\r\n                                const style = {\r\n                                    backgroundColor: suggestion.active ? '#fff' : '#fff',\r\n                                };\r\n\r\n                                return (\r\n                                    <div className=\"suggestion\" {...getSuggestionItemProps(suggestion, { style })}>\r\n                                        <i className=\"material-icons\">location_on</i>\r\n                                        {suggestion.description}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePostNew.tsx",["328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport SharePost from './sharePost';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\r\nimport './singlePostStyles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport GuessTheLocationPlay from '../Game/guessPlay';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport GTLexpanded from './GTLexpanded';\r\nimport ReportButton from './report';\r\nimport GTLmenu from '../Game/GTLmenu';\r\n// import randomLocation from 'random-location';\r\n\r\nexport interface SinglePostNewProps {\r\n    username?: string;\r\n    postPic?: string;\r\n    date?: string;\r\n    avatar?: string;\r\n    uid?: string;\r\n    likes_count?: number;\r\n    caption?: string;\r\n    id?: string;\r\n    sharedURL?: string;\r\n    hidden?: boolean;\r\n    comments_count?: number;\r\n    location?: any;\r\n    otherLocs?: any;\r\n}\r\n\r\nexport interface SinglePostNewState {\r\n    favourited: boolean;\r\n    user: any;\r\n    post_user: any;\r\n    open_share: boolean;\r\n    isOpen: boolean;\r\n    path_name: string;\r\n    likes: number | undefined;\r\n    isAuthenticated: boolean;\r\n    // location1: String;\r\n    // location2: String;\r\n    // location3: String;\r\n    // questions: any;\r\n    // displayQuestions: boolean;\r\n    random: any;\r\n    locations: any;\r\n    gotLocs: boolean;\r\n    loc1: string;\r\n    loc2: string;\r\n}\r\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\r\n    constructor(SinglePostNewProps: any) {\r\n        super(SinglePostNewProps);\r\n\r\n        this.state = {\r\n            favourited: false,\r\n            user: checkUserLoggedIn(),\r\n            post_user: {},\r\n            likes: this.props.likes_count,\r\n            open_share: false,\r\n            isOpen: false,\r\n            path_name: `/post/${this.props.id}`,\r\n            isAuthenticated: false,\r\n            gotLocs: false,\r\n            // // questions: [{ location1: 'UAE', location2: 'Russia', location3: 'Algeria' }],\r\n            // questions: { correctLocation: 'Dubai', Location2: 'Sharjah', Location3: 'RAK' },\r\n            // displayQuestions: false,\r\n            random: 1,\r\n            locations: [],\r\n            loc1: '',\r\n            loc2: '',\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleClickRandomizer = this.handleClickRandomizer.bind(this);\r\n        this.getLocations = this.getLocations.bind(this);\r\n        this.randomizeLocations = this.randomizeLocations.bind(this);\r\n        // this.GTLexpanded = this.GTLexpanded.bind(this);\r\n    }\r\n    handleClickRandomizer = () => {\r\n        const min = 1;\r\n        const max = 4;\r\n        const rand = Math.floor(Math.random() * (max - min) + min);\r\n        this.setState({ random: rand });\r\n    };\r\n\r\n    randomizeLocations = (locs: any) => {\r\n        const rand1 = Math.floor(Math.random() * this.state.random);\r\n        const rand2 = Math.floor(Math.random() * this.state.random);\r\n\r\n        // console.log(locs);\r\n        // while((this.state.locations.length == 0));\r\n\r\n        //   return (this.state.locations[rand1])\r\n        this.setState({ loc1: this.state.locations[rand1], loc2: this.state.locations[rand2] });\r\n    };\r\n    handleColorChange = () => {\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            console.log(this.props.id); //undefined\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: increment,\r\n            });\r\n            let like = this.state.likes ? this.state.likes + 1 : 0;\r\n            this.setState({ likes: like });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: decrement,\r\n            });\r\n            let like = this.state.likes ? this.state.likes - 1 : 0;\r\n            this.setState({ likes: like });\r\n        }\r\n    };\r\n    share_area = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, post_user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n\r\n        this.getLocations(this.props.location).then(\r\n            (locs) => {\r\n                this.setState({ gotLocs: true, locations: locs });\r\n                this.randomizeLocations(locs);\r\n            },\r\n            (error) => {\r\n                this.setState({ gotLocs: false });\r\n            },\r\n        );\r\n\r\n        // this.getLocations(this.props.location);\r\n        // const loc = this.props.location\r\n\r\n        // console.log(this.state.locations);\r\n        // const loc = []\r\n\r\n        // console.log(this.state.locations)\r\n    }\r\n\r\n    getLocations = (loc: string) => {\r\n        var locs = new Array();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let locs = new Array();\r\n            const snapshot = firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs.push(doc.data().location);\r\n                        }\r\n                    });\r\n                    resolve(locs);\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs = [...locs, doc.data().location];\r\n                        }\r\n                    });\r\n                });\r\n            if (locs) {\r\n                resolve(locs);\r\n            } else {\r\n                reject('not loading locations');\r\n            }\r\n        });\r\n    };\r\n\r\n    getUser = () => {\r\n        const uid = this.props.uid;\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    if (data) {\r\n                        resolve(data);\r\n                    } else {\r\n                        reject('User not authenticated');\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                open_share: !state.open_share,\r\n            };\r\n        });\r\n    };\r\n\r\n    // GTLexpanded = () => {\r\n    //     this.setState((state) => {\r\n    //         return { displayQuestions: !this.state.displayQuestions };\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        const path = window.location.href.split('/');\r\n        const root = path[path.length - 2];\r\n\r\n        // let questions = null;\r\n        // if (this.state.displayQuestions) {\r\n        //     console.log(\"Entered GTL\")\r\n        //     return (questions = (\r\n        //         <div>\r\n\r\n        //         </div>\r\n        //     ));\r\n        // }\r\n        if (!this.state.isAuthenticated) return null;\r\n        if (!this.state.gotLocs) return null;\r\n        return (\r\n            <Card\r\n                style={{\r\n                    maxHeight: 800,\r\n                    maxWidth: 600,\r\n                    margin: 'auto',\r\n                    marginBlock: '20px',\r\n                    background: '#1b1b1b',\r\n                    // border: '3px solid #fafafa',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar\r\n                            aria-label=\"recipe\"\r\n                            alt={this.state.post_user.User_name}\r\n                            src={this.state.post_user.Avatar}\r\n                            style={{ backgroundColor: 'auto' }}\r\n                        >\r\n                            {this.state.post_user.User_name}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            {/* <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton> */}\r\n                            <ReportButton />\r\n                        </>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                    subheader={\r\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\r\n                    }\r\n                    style={{ textAlign: 'left', color: '#fafafa' }}\r\n                />\r\n                <CardMedia\r\n                    image={this.props.postPic}\r\n                    title={`A Photo by ${this.state.post_user.User_name}`}\r\n                    style={{\r\n                        borderRadius: '20px 20px 20px 20px',\r\n                        height: 0,\r\n                        paddingTop: '56.25%',\r\n                        marginLeft: '10px',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ color: '#fafafa', textAlign: 'center' }}\r\n                    >\r\n                        {this.props.caption}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Box m={-2} />\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                        onClick={this.handleColorChange}\r\n                    >\r\n                        <FavoriteIcon />\r\n                        {<Typography style={{ color: '#fafafa' }}>{this.state.likes}</Typography>}\r\n                    </IconButton>\r\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\r\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\r\n                            <AddCommentRoundedIcon />\r\n                            <span>\r\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\r\n                            </span>\r\n                        </IconButton>\r\n                    </Link>\r\n                    <Box m={1} />\r\n                    <IconButton aria-label=\"share\">\r\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\r\n                    </IconButton>\r\n                    <div\r\n                        style={{ float: 'right', marginRight: '10px', marginLeft: 'auto' }}\r\n                        onClick={this.handleClickRandomizer}\r\n                    >\r\n                        <GTLmenu\r\n                            location2={this.state.loc1}\r\n                            correctLocation={this.props.location}\r\n                            location3={this.state.loc2}\r\n                            order={this.state.random}\r\n                            uid={this.props.uid}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* {this.state.displayQuestions &&\r\n                        this.state.questions.map( \r\n                            (item: any) => (location1: String, location2: String, location3: String) => {\r\n                                console.log('Entered GTL');\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <GTLexpanded\r\n                                            location1={location1}\r\n                                            location2={location2}\r\n                                            location3={location3}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            },\r\n                        )}\r\n                    {!this.state.displayQuestions && (\r\n                    <Button\r\n                        style={{\r\n                            padding: '5px 20px 5px 20px',\r\n                            // position: 'static',\r\n                            // // float: 'right',\r\n                            // right: '200px',\r\n                            marginLeft: 'auto',\r\n                            marginRight: '3px',\r\n                            background: '#202020',\r\n                            color: '#F56920',\r\n                            borderRadius: '20px',\r\n                            fontSize: '10px',\r\n                        }}\r\n                        onClick={this.GTLexpanded} ////////BUGGY LINE: do not uncomment until debugged/////////\r\n                        variant=\"contained\"\r\n                        endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                    >\r\n                        Guess The\r\n                        <br></br>\r\n                        Location\r\n                    </Button>\r\n                    )} */}\r\n\r\n                    {/* <div>{questions}</div> */}\r\n                    {/* <div>\r\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\r\n                    </div> */}\r\n\r\n                    {/* <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> */}\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default SinglePostNew;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\profileOverview.tsx",["340","341","342","343","344","345","346","347","348","349","350"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\tags.tsx",["351","352","353","354"],"import React from 'react';\r\nimport './tags.scss';\r\nimport Textfield from './TextField';\r\n\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles, Chip, Typography } from '@material-ui/core';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\nconst Tags = (props: any) => {\r\n    const [tags, setTags] = React.useState(Array());\r\n\r\n    const addTags = (event: any) => {\r\n        if (event.key === 'Enter' && event.target.value !== '') {\r\n            setTags([...tags, event.target.value.toLowerCase()]);\r\n            props.selectedTags([...tags, event.target.value.toLowerCase()]);\r\n            event.target.value = '';\r\n        }\r\n    };\r\n    const removeTags = (index: any) => {\r\n        setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\r\n    };\r\n    return (\r\n        <>\r\n            {/* <label htmlFor=\"tags-input\"> */}\r\n            <Textfield\r\n                // variant=\"filled\"\r\n                // fullWidth\r\n                // className=\"tags-input\"\r\n                label=\"Add tags\"\r\n                onKeyUp={(event) => addTags(event)}\r\n            />\r\n            {/* </label> */}\r\n            <div className=\"tags-input\">\r\n                <ul id=\"tags\">\r\n                    <Typography variant=\"h6\" style={{ color: '#fafafa', marginRight: '5px', fontSize: '20px' }}>\r\n                        Selected\r\n                        <span style={{ color: '#f56920' }}> tags:</span>\r\n                    </Typography>\r\n                    {tags.map((tag, index) => (\r\n                        <li key={index} className=\"tag\">\r\n                            {/* <span className=\"tag-title\">{tag}</span>\r\n                        <span className=\"tag-close-icon\" onClick={() => removeTags(index)}>\r\n                            x\r\n                        </span> */}\r\n                            <Chip\r\n                                label={tag}\r\n                                onDelete={() => removeTags(index)}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                style={{ color: '#fafafa' }}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {/* <input type=\"text\" id=\"tags-input\" style={{ display: 'none' }} placeholder=\"Press enter to add tags\" /> */}\r\n        </>\r\n    );\r\n};\r\nexport default Tags;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\avatarSmall.tsx",["355","356","357","358","359","360","361"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(24),\r\n        height: theme.spacing(24),\r\n    },\r\n}));\r\n\r\nexport default function AvatarSmall(props: any) {\r\n    const [user, setUser] = useState({});\r\n    \r\n    const classes = useStyles();\r\n    if (props.uid != undefined)\r\n    return (\r\n                <Link to={{ pathname: `/user/${props.uid}`, state: props.uid }}>\r\n                <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n                </IconButton>\r\n                </Link>\r\n    );\r\n    else return (\r\n        <IconButton edge=\"end\">\r\n                    {props.Size == \"small\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\r\n                    }\r\n                    {props.Size == \"large\" &&\r\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\r\n                    }\r\n        </IconButton>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\report.tsx",["362"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function ReportButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleReport = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post reported!');\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button  >\r\n        Open with fade transition\r\n      </Button> */}\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                style={{ color: '#fafafa' }}\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleReport}>Report post</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\sharePost.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Game\\GTLmenu.tsx",["363","364","365"],"import React from 'react';\r\nimport { Menu, MenuItem, MenuButton, MenuHeader } from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport fb from 'firebase/app';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function GTLmenus(props: {\r\n    correctLocation: String;\r\n    location2: String;\r\n    location3: String;\r\n    order: Number;\r\n    uid?: string;\r\n}) {\r\n    const [openCorrect, setOpenCorrect] = React.useState(false);\r\n    const [openWrong, setOpenWrong] = React.useState(false);\r\n\r\n    const handleClickRightAns = () => {\r\n        const increment = fb.firestore.FieldValue.increment(10);\r\n        if (props.uid !== undefined) {\r\n            fb.firestore().collection('users').doc(props.uid).update({\r\n                GamePoint: increment,\r\n            });\r\n        }\r\n        setOpenCorrect(true);\r\n    };\r\n\r\n    const handleCloseRightAns = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenCorrect(false);\r\n    };\r\n\r\n    const handleClickWrongAns = () => {\r\n        const decrement = fb.firestore.FieldValue.increment(-5);\r\n        if (props.uid !== undefined) {\r\n            fb.firestore().collection('users').doc(props.uid).update({\r\n                GamePoint: decrement,\r\n            });\r\n        }\r\n\r\n        setOpenWrong(true);\r\n    };\r\n\r\n    const handleCloseWrongAns = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenWrong(false);\r\n    };\r\n    if (props.order === 1) {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    } else if (props.order === 2) {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    styles={{\r\n                        background: '#1b1b1b',\r\n                        color: '#fafafa',\r\n                        width: '80%',\r\n                        borderRadius: '20px',\r\n                        border: '2px solid #F56920',\r\n                    }}\r\n                    menuButton={\r\n                        <Button\r\n                            style={{\r\n                                padding: '5px 20px 5px 20px',\r\n                                // position: 'static',\r\n                                float: 'right',\r\n                                // right: '200px',\r\n                                marginLeft: 'auto',\r\n                                marginRight: '10px',\r\n                                background: '#202020',\r\n                                color: '#F56920',\r\n                                borderRadius: '20px',\r\n                                fontSize: '10px',\r\n                                width: '160px',\r\n                                borderColor: 'solid 3px #F56920',\r\n                            }}\r\n                            variant=\"contained\"\r\n                            endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                        >\r\n                            <Typography variant=\"caption\" style={{ fontSize: '9px' }}>\r\n                                Guess The Location\r\n                            </Typography>\r\n                        </Button>\r\n                    }\r\n                    direction=\"top\"\r\n                    overflow=\"hidden\"\r\n                >\r\n                    <MenuHeader color=\"primary\">\r\n                        <Typography variant=\"caption\" style={{ color: '#f56920' }}>\r\n                            Pick a place\r\n                        </Typography>\r\n                    </MenuHeader>\r\n\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location2}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickWrongAns}\r\n                        >\r\n                            {props.location3}\r\n                        </Button>\r\n                    </MenuItem>\r\n                    <MenuItem styles={{ background: '#1b1b1b', color: '#fafafa', borderRadius: '20px' }}>\r\n                        <Button\r\n                            style={{\r\n                                // marginLeft: '3px',\r\n                                // marginRight: '3px',\r\n                                textAlign: 'center',\r\n                                fontSize: '10px',\r\n                                marginBottom: '5px',\r\n                                background: '#fafafa',\r\n                                width: '90%',\r\n                                borderRadius: '20px',\r\n                                margin: 'auto',\r\n                            }}\r\n                            onClick={handleClickRightAns}\r\n                        >\r\n                            {props.correctLocation}\r\n                        </Button>\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Snackbar\r\n                    open={openCorrect}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseRightAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseRightAns}\r\n                        severity=\"success\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        Woohoo! You guessed the right location!👏\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar\r\n                    open={openWrong}\r\n                    autoHideDuration={2000}\r\n                    onClose={handleCloseWrongAns}\r\n                    style={{ marginBottom: '50px' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleCloseWrongAns}\r\n                        severity=\"error\"\r\n                        style={{ borderRadius: '20px', minWidth: '250px' }}\r\n                    >\r\n                        sorry, you guessed it wrong!😞 Better luck next time👍\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx",["366","367","368"],"import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport SinglePostNew from '../Display/singlePostNew';\r\nimport Post from \"./Posts\";\r\n\r\nexport default function Feed() {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const [lastKey, setLastKey] = useState(\"\" as unknown  as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>);\r\n    const [nextPosts_loading, setNextPostsLoading] = useState(false);\r\n    const [locations, setLocations] = useState<any[]>([]);\r\n\r\n    // useEffect(() => {\r\n    //     firebase\r\n    //         .firestore()\r\n    //         .collection('Posts')\r\n    //         .onSnapshot((snapshot: any) => {\r\n    //             setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        // first 5 posts\r\n        Post.postsFirstBatch()\r\n          .then((res) => {\r\n            if (res) {\r\n            setPosts(res.posts);\r\n            console.log(res.posts[0])\r\n            setLastKey(res.lastKey);\r\n          } else return\r\n        })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n          \r\n\r\n      }, []);\r\n\r\n\r\n      \r\n\r\n      const fetchMorePosts = (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\r\n          console.log(\"hello thereee\")\r\n        if (key ) {\r\n          setNextPostsLoading(true);\r\n          Post.postsNextBatch(key)\r\n            .then((res) => {\r\n              if (res) {\r\n              setLastKey(res.lastKey);\r\n              // add new posts to old posts\r\n              setPosts(posts.concat(res.posts));\r\n              setNextPostsLoading(false);\r\n            } else return\r\n          })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              setNextPostsLoading(false);\r\n            });\r\n        }\r\n      };\r\n    \r\n    const allPosts = (\r\n        <div>\r\n            {posts.map((post) => {\r\n                if (post) {\r\n                  // console.log(\"feed id\", post)\r\n                  // const loc = getLocations(post.location);\r\n                  return (\r\n                    <SinglePostNew\r\n                        key={post.id}\r\n                        id={post.id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.user_name}\r\n                        postPic={post.Image}\r\n                        uid={post.uid}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                        likes_count={post.likes_count}\r\n                        caption={post.caption}\r\n                        sharedURL={window.location.href}\r\n                        hidden={false}\r\n                        comments_count={post.comments_count}\r\n                        location = {post.location}\r\n                        // otherLocs = {getLocations(post.location)}\r\n                    />\r\n                );\r\n                } else return;\r\n            })}\r\n        </div>\r\n    );\r\n    // console.log(lastKey)\r\n    return (\r\n        // <div>\r\n        //     {posts.map(({ id, post }) => {\r\n        //         return (\r\n        //             <SinglePostNew\r\n        //                 key={id}\r\n        //                 id={id}\r\n        //                 // profileUrl={post.profileUrl}\r\n        //                 username={post.user_name}\r\n        //                 postPic={post.Image}\r\n        //                 uid={post.uid}\r\n        //                 // caption={post.caption}\r\n        //                 // comments={post.comments}\r\n        //                 date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n        //                 likes_count={post.likes_count}\r\n        //                 caption={post.caption}\r\n        //                 sharedURL={window.location.href}\r\n        //                 hidden={false}\r\n        //                 comments_count={post.comments_count}\r\n        //             />\r\n        //         );\r\n        //     })}\r\n        // </div>\r\n        <div>\r\n            <div>{posts ? allPosts : null}</div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n        {nextPosts_loading ? (\r\n          <p>Loading..</p>\r\n        ) : ((lastKey) ? (\r\n          <button onClick={() => fetchMorePosts(lastKey)}>More Posts</button>\r\n        ) : (\r\n          <span>You are up to date!</span>\r\n        ))}\r\n      </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\uploadIcon.tsx",["369","370","371","372","373","374"],"import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\r\nimport Camera from '../Inputs/Camera';\r\n\r\nimport UploadPic from './uploadPic';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // transform: 'translateZ(0px)',\r\n            flexGrow: 1,\r\n            backgroundColor: 'transparent',\r\n        },\r\n        speedDial: {\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n            '&.MuiFab-primary': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n        options: {\r\n            width: '80px',\r\n            height: '40px',\r\n            textSizeAdjust: 'auto',\r\n            fontSize: '0.7em',\r\n            borderRadius: '0%',\r\n        },\r\n        fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n        transform: 'translate(0em, -6em)',\r\n\r\n        },\r\n         input: {\r\n        display: 'none',\r\n    },\r\n    }),\r\n);\r\n\r\nexport default function UploadIcon(props: any) {\r\n    const classes = useStyles();\r\n    const [direction] = React.useState<SpeedDialProps['direction']>('up');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden] = React.useState(false);\r\n\r\n    const actions = [\r\n        { icon: <p>Select From Gallery</p>, name: 'gallery' },\r\n        { icon: <p>Take a photo</p>, name: 'camera' },\r\n    ];\r\n\r\n    const [source, setSource] = useState(\"\");\r\n    const handleCapture = (target: any) => {\r\n        if (target.files) {\r\n        if (target.files.length !== 0) {\r\n            const file = target.files[0];\r\n            const newUrl = URL.createObjectURL(file); \r\n            setSource(newUrl);\r\n        }\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        //   <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n            className={classes.fabButton}\r\n            ariaLabel=\"SpeedDial example\"\r\n            // className={classes.speedDial}\r\n            hidden={hidden}\r\n            icon={\r\n                <Fab color=\"secondary\" aria-label=\"add\" >\r\n                    <CameraAltRoundedIcon />\r\n                </Fab>\r\n            }\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            open={open}\r\n            direction={direction}\r\n        >\r\n            <SpeedDialAction\r\n                key=\"gallery\"\r\n                className={classes.options}\r\n                icon={<div>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.options} color=\"inherit\" aria-label=\"upload picture\" component=\"span\" > Select From Gallery </IconButton>\r\n                        </label>\r\n                        </div>}\r\n                tooltipTitle=\"gallery\"\r\n                onClick={handleClose}\r\n            />\r\n            <SpeedDialAction\r\n                key=\"camera\"\r\n                className={classes.options}\r\n                icon={<div>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"direct-button-file\" type=\"file\" capture=\"environment\" onChange={props.onChange}/>\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"upload camera\"\r\n                            component=\"span\"\r\n                            className={classes.options}\r\n                            >\r\n                            Take A Photo\r\n                            </IconButton>\r\n                        </label>\r\n                    </div>\r\n                  }\r\n                tooltipTitle=\"camera\"\r\n                onClick={handleClose}\r\n            />\r\n        </SpeedDial>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\userFeed1.tsx",["375"],"import * as React from 'react';\r\nimport { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport SinglePostNew1 from '../Display/singlePostNew1';\r\n\r\nexport default function UserFeed1(props: any) {\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const firstUpdate = useRef(true);\r\n    \r\n    // loadData = async () => {\r\n    //     const res = await fetch(\"https://api.agify.io/?name=michael\");\r\n    //     setData(await res.json());\r\n      \r\n    // };\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return;\r\n        }\r\n    \r\n        // console.log(\"componentDidUpdateFunction\");\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .where('uid', '==', props.uid)\r\n            .onSnapshot((snapshot: any) => {\r\n                setPosts(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        // console.log(props.uid)\r\n      });\r\n    //   console.log(props.uid)\r\n    return (\r\n        <div>\r\n            {posts.map(({ id, post }) => {\r\n                return (\r\n                    <SinglePostNew1\r\n                        key={id}\r\n                        id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.user_name}\r\n                        postPic={post.Image}\r\n                        uid={post.uid}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                        date={new Date(post.post_time.seconds * 1000).toLocaleDateString('en-US')}\r\n                        likes_count={post.likes_count}\r\n                        caption={post.caption}\r\n                        sharedURL={window.location.href}\r\n                        hidden={false}\r\n                        comments_count={post.comments_count}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx",["376"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport UploadIcon from '../Display/uploadIcon';\r\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        justifyContent: 'space-evenly',\r\n        // marginTop: 20,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nexport default function LabelBottomNavigation() {\r\n    // const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n\r\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    //     setValue(newValue);\r\n    // };\r\n\r\n    // return (\r\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\r\n    //     </BottomNavigation>\r\n    // );\r\n\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <HomeRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <SearchRoundedIcon />\r\n                </IconButton>\r\n                <UploadIcon/>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\">\r\n                    <ExploreRoundedIcon/>\r\n                </IconButton>\r\n                <IconButton color=\"inherit\">\r\n                    <SettingsRoundedIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Posts.tsx",["377"],"import firebase from 'firebase';\r\n\r\nexport default {\r\n  /**\r\n   * this function will be fired when you first time run the app,\r\n   * and it will fetch first 5 posts, here I retrieve them in descending order, until the last added post appears first.\r\n   */\r\n  postsFirstBatch: async function () {\r\n    try {\r\n      const data = await firebase\r\n      .firestore()\r\n      .collection('Posts')\r\n      .orderBy('likes_count')\r\n        .limit(5)\r\n        .get();\r\n\r\n      let posts:Array<any> = [];\r\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\r\n      data.forEach((doc) => {\r\n        posts.push({...doc.data(), id: doc.id});\r\n        \r\n        lastKey = (doc)\r\n      });\r\n      console.log(lastKey)\r\n      return { posts, lastKey };\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * this function will be fired each time the user click on 'More Posts' button,\r\n   * it receive key of last post in previous batch, then fetch next 5 posts\r\n   * starting after last fetched post.  \r\n   */\r\n  postsNextBatch: async (key:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => {\r\n    try {\r\n      const data = await firebase\r\n      .firestore()\r\n      .collection('Posts')\r\n      .orderBy('likes_count')\r\n        .startAfter(key)\r\n        .limit(5)\r\n        .get();\r\n\r\n      let posts:Array<any> = [];\r\n      let lastKey:firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData> = \"\" as unknown as firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\r\n\r\n      data.forEach((doc) => {\r\n        posts.push({...doc.data(), id: doc.id});\r\n        lastKey = (doc);\r\n      });\r\n      \r\n      return { posts, lastKey };\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n};","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePostNew1.tsx",["378","379","380","381","382","383","384","385","386","387","388","389"],"import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport SharePost from './sharePost';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\r\nimport './singlePostStyles.scss';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport GuessTheLocationPlay from '../Game/guessPlay';\r\nimport GTLicon from '../Inputs/The pin.svg';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport GTLexpanded from './GTLexpanded';\r\nimport EditButton from './edit';\r\nimport GTLmenu from '../Game/GTLmenu';\r\n// import randomLocation from 'random-location';\r\n\r\nexport interface SinglePostNewProps {\r\n    username?: string;\r\n    postPic?: string;\r\n    date?: string;\r\n    avatar?: string;\r\n    uid?: string;\r\n    likes_count?: number;\r\n    caption?: string;\r\n    id?: string;\r\n    sharedURL?: string;\r\n    hidden?: boolean;\r\n    comments_count?: number;\r\n    location?: any;\r\n    otherLocs?: any;\r\n}\r\n\r\nexport interface SinglePostNewState {\r\n    favourited: boolean;\r\n    user: any;\r\n    post_user: any;\r\n    open_share: boolean;\r\n    isOpen: boolean;\r\n    path_name: string;\r\n    likes: number | undefined;\r\n    isAuthenticated: boolean;\r\n    // location1: String;\r\n    // location2: String;\r\n    // location3: String;\r\n    // questions: any;\r\n    // displayQuestions: boolean;\r\n    random: any;\r\n    locations: any;\r\n    gotLocs: boolean;\r\n    loc1: string;\r\n    loc2: string;\r\n}\r\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\r\n    constructor(SinglePostNewProps: any) {\r\n        super(SinglePostNewProps);\r\n\r\n        this.state = {\r\n            favourited: false,\r\n            user: checkUserLoggedIn(),\r\n            post_user: {},\r\n            likes: this.props.likes_count,\r\n            open_share: false,\r\n            isOpen: false,\r\n            path_name: `/post/${this.props.id}`,\r\n            isAuthenticated: false,\r\n            gotLocs: false,\r\n            // // questions: [{ location1: 'UAE', location2: 'Russia', location3: 'Algeria' }],\r\n            // questions: { correctLocation: 'Dubai', Location2: 'Sharjah', Location3: 'RAK' },\r\n            // displayQuestions: false,\r\n            random: 1,\r\n            locations: [],\r\n            loc1: '',\r\n            loc2: '',\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleClickRandomizer = this.handleClickRandomizer.bind(this);\r\n        this.getLocations = this.getLocations.bind(this);\r\n        this.randomizeLocations = this.randomizeLocations.bind(this);\r\n        // this.GTLexpanded = this.GTLexpanded.bind(this);\r\n    }\r\n    handleClickRandomizer = () => {\r\n        const min = 1;\r\n        const max = 4;\r\n        const rand = Math.floor(Math.random() * (max - min) + min);\r\n        this.setState({ random: rand });\r\n    };\r\n\r\n    randomizeLocations = (locs: any) => {\r\n        const rand1 = Math.floor(Math.random() * this.state.random);\r\n        const rand2 = Math.floor(Math.random() * this.state.random);\r\n\r\n        // console.log(locs);\r\n        // while((this.state.locations.length == 0));\r\n\r\n        //   return (this.state.locations[rand1])\r\n        this.setState({ loc1: this.state.locations[rand1], loc2: this.state.locations[rand2] });\r\n    };\r\n    handleColorChange = () => {\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            console.log(this.props.id); //undefined\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: increment,\r\n            });\r\n            let like = this.state.likes ? this.state.likes + 1 : 0;\r\n            this.setState({ likes: like });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: decrement,\r\n            });\r\n            let like = this.state.likes ? this.state.likes - 1 : 0;\r\n            this.setState({ likes: like });\r\n        }\r\n    };\r\n    share_area = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.getUser().then(\r\n            (user) => {\r\n                this.setState({ isAuthenticated: true, post_user: user });\r\n            },\r\n            (error) => {\r\n                this.setState({ isAuthenticated: true });\r\n            },\r\n        );\r\n\r\n        this.getLocations(this.props.location).then(\r\n            (locs) => {\r\n                this.setState({ gotLocs: true, locations: locs });\r\n                this.randomizeLocations(locs);\r\n            },\r\n            (error) => {\r\n                this.setState({ gotLocs: false });\r\n            },\r\n        );\r\n\r\n        // this.getLocations(this.props.location);\r\n        // const loc = this.props.location\r\n\r\n        // console.log(this.state.locations);\r\n        // const loc = []\r\n\r\n        // console.log(this.state.locations)\r\n    }\r\n\r\n    getLocations = (loc: string) => {\r\n        var locs = new Array();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let locs = new Array();\r\n            const snapshot = firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs.push(doc.data().location);\r\n                        }\r\n                    });\r\n                    resolve(locs);\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('Posts')\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (!locs.includes(doc.data().location) && loc != doc.data().location) {\r\n                            locs = [...locs, doc.data().location];\r\n                        }\r\n                    });\r\n                });\r\n            if (locs) {\r\n                resolve(locs);\r\n            } else {\r\n                reject('not loading locations');\r\n            }\r\n        });\r\n    };\r\n\r\n    getUser = () => {\r\n        const uid = this.props.uid;\r\n        return new Promise(function (resolve, reject) {\r\n            firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(uid)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    const data = querySnapshot.data();\r\n                    if (data) {\r\n                        resolve(data);\r\n                    } else {\r\n                        reject('User not authenticated');\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                open_share: !state.open_share,\r\n            };\r\n        });\r\n    };\r\n\r\n    // GTLexpanded = () => {\r\n    //     this.setState((state) => {\r\n    //         return { displayQuestions: !this.state.displayQuestions };\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        const path = window.location.href.split('/');\r\n        const root = path[path.length - 2];\r\n\r\n        // let questions = null;\r\n        // if (this.state.displayQuestions) {\r\n        //     console.log(\"Entered GTL\")\r\n        //     return (questions = (\r\n        //         <div>\r\n\r\n        //         </div>\r\n        //     ));\r\n        // }\r\n        if (!this.state.isAuthenticated) return null;\r\n        if (!this.state.gotLocs) return null;\r\n        return (\r\n            <Card\r\n                style={{\r\n                    maxHeight: 800,\r\n                    maxWidth: 600,\r\n                    margin: 'auto',\r\n                    marginBlock: '20px',\r\n                    background: '#1b1b1b',\r\n                    // border: '3px solid #fafafa',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar\r\n                            aria-label=\"recipe\"\r\n                            alt={this.state.post_user.User_name}\r\n                            src={this.state.post_user.Avatar}\r\n                            style={{ backgroundColor: 'auto' }}\r\n                        >\r\n                            {this.state.post_user.User_name}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            {/* <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\r\n                                <MoreVertIcon />\r\n                            </IconButton> */}\r\n                            <EditButton />\r\n                        </>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\r\n                    subheader={\r\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\r\n                    }\r\n                    style={{ textAlign: 'left', color: '#fafafa' }}\r\n                />\r\n                <CardMedia\r\n                    image={this.props.postPic}\r\n                    title={`A Photo by ${this.state.post_user.User_name}`}\r\n                    style={{\r\n                        borderRadius: '20px 20px 20px 20px',\r\n                        height: 0,\r\n                        paddingTop: '56.25%',\r\n                        marginLeft: '10px',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ color: '#fafafa', textAlign: 'center' }}\r\n                    >\r\n                        {this.props.caption}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Box m={-2} />\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                        onClick={this.handleColorChange}\r\n                    >\r\n                        <FavoriteIcon />\r\n                        {<Typography style={{ color: '#fafafa' }}>{this.state.likes}</Typography>}\r\n                    </IconButton>\r\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\r\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\r\n                            <AddCommentRoundedIcon />\r\n                            <span>\r\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\r\n                            </span>\r\n                        </IconButton>\r\n                    </Link>\r\n                    <Box m={1} />\r\n                    <IconButton aria-label=\"share\">\r\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\r\n                    </IconButton>\r\n                    <div\r\n                        style={{ float: 'right', marginRight: '10px', marginLeft: 'auto' }}\r\n                        onClick={this.handleClickRandomizer}\r\n                    >\r\n                        <GTLmenu\r\n                            location2={this.state.loc1}\r\n                            correctLocation={this.props.location}\r\n                            location3={this.state.loc2}\r\n                            order={this.state.random}\r\n                            uid={this.props.uid}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* {this.state.displayQuestions &&\r\n                        this.state.questions.map( \r\n                            (item: any) => (location1: String, location2: String, location3: String) => {\r\n                                console.log('Entered GTL');\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <GTLexpanded\r\n                                            location1={location1}\r\n                                            location2={location2}\r\n                                            location3={location3}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            },\r\n                        )}\r\n                    {!this.state.displayQuestions && (\r\n                    <Button\r\n                        style={{\r\n                            padding: '5px 20px 5px 20px',\r\n                            // position: 'static',\r\n                            // // float: 'right',\r\n                            // right: '200px',\r\n                            marginLeft: 'auto',\r\n                            marginRight: '3px',\r\n                            background: '#202020',\r\n                            color: '#F56920',\r\n                            borderRadius: '20px',\r\n                            fontSize: '10px',\r\n                        }}\r\n                        onClick={this.GTLexpanded} ////////BUGGY LINE: do not uncomment until debugged/////////\r\n                        variant=\"contained\"\r\n                        endIcon={<img src={GTLicon} alt=\"GeoPin\"></img>}\r\n                    >\r\n                        Guess The\r\n                        <br></br>\r\n                        Location\r\n                    </Button>\r\n                    )} */}\r\n\r\n                    {/* <div>{questions}</div> */}\r\n                    {/* <div>\r\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\r\n                    </div> */}\r\n\r\n                    {/* <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> */}\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default SinglePostNew;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\edit.tsx",["390"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function EditButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const deletepost = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post deleted!');\r\n    };\r\n    const editpost = () => {\r\n        // setAnchorEl(null);\r\n        console.log('post edited!');\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button  >\r\n        Open with fade transition\r\n      </Button> */}\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                style={{ color: '#fafafa' }}\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={editpost}>edit post</MenuItem>\r\n                <MenuItem onClick={deletepost}>delete post</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\followers-page\\ViewFollowers.tsx",["391"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\delete-post\\index.tsx",["392","393","394","395"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\edit-post\\index.tsx",["396","397","398","399","400","401","402"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\followers-page\\CustomTab.tsx",["403","404","405","406","407","408"],{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":25,"column":8,"nodeType":"415","messageId":"416","endLine":25,"endColumn":14},{"ruleId":"413","severity":1,"message":"417","line":28,"column":8,"nodeType":"415","messageId":"416","endLine":28,"endColumn":22},{"ruleId":"413","severity":1,"message":"418","line":1,"column":52,"nodeType":"415","messageId":"416","endLine":1,"endColumn":61},{"ruleId":"413","severity":1,"message":"419","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":20},{"ruleId":"413","severity":1,"message":"420","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":17},{"ruleId":"413","severity":1,"message":"421","line":7,"column":10,"nodeType":"415","messageId":"416","endLine":7,"endColumn":13},{"ruleId":"413","severity":1,"message":"422","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":23},{"ruleId":"413","severity":1,"message":"423","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":14},{"ruleId":"413","severity":1,"message":"424","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":21},{"ruleId":"413","severity":1,"message":"425","line":12,"column":30,"nodeType":"415","messageId":"416","endLine":12,"endColumn":35},{"ruleId":"413","severity":1,"message":"426","line":13,"column":10,"nodeType":"415","messageId":"416","endLine":13,"endColumn":20},{"ruleId":"413","severity":1,"message":"419","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":20},{"ruleId":"427","severity":1,"message":"428","line":16,"column":40,"nodeType":"429","messageId":"430","endLine":16,"endColumn":47,"fix":"431"},{"ruleId":"427","severity":1,"message":"428","line":17,"column":40,"nodeType":"429","messageId":"430","endLine":17,"endColumn":47,"fix":"432"},{"ruleId":"413","severity":1,"message":"433","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":24},{"ruleId":"413","severity":1,"message":"434","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":19},{"ruleId":"413","severity":1,"message":"435","line":3,"column":37,"nodeType":"415","messageId":"416","endLine":3,"endColumn":47},{"ruleId":"413","severity":1,"message":"436","line":3,"column":49,"nodeType":"415","messageId":"416","endLine":3,"endColumn":53},{"ruleId":"413","severity":1,"message":"437","line":7,"column":10,"nodeType":"415","messageId":"416","endLine":7,"endColumn":16},{"ruleId":"413","severity":1,"message":"421","line":7,"column":39,"nodeType":"415","messageId":"416","endLine":7,"endColumn":42},{"ruleId":"413","severity":1,"message":"438","line":7,"column":52,"nodeType":"415","messageId":"416","endLine":7,"endColumn":57},{"ruleId":"413","severity":1,"message":"439","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":19},{"ruleId":"413","severity":1,"message":"440","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":24},{"ruleId":"441","severity":1,"message":"442","line":38,"column":18,"nodeType":"443","messageId":"444","endLine":38,"endColumn":20},{"ruleId":"413","severity":1,"message":"437","line":1,"column":10,"nodeType":"415","messageId":"416","endLine":1,"endColumn":16},{"ruleId":"413","severity":1,"message":"445","line":1,"column":26,"nodeType":"415","messageId":"416","endLine":1,"endColumn":30},{"ruleId":"413","severity":1,"message":"446","line":1,"column":32,"nodeType":"415","messageId":"416","endLine":1,"endColumn":43},{"ruleId":"413","severity":1,"message":"435","line":1,"column":45,"nodeType":"415","messageId":"416","endLine":1,"endColumn":55},{"ruleId":"413","severity":1,"message":"436","line":1,"column":57,"nodeType":"415","messageId":"416","endLine":1,"endColumn":61},{"ruleId":"413","severity":1,"message":"447","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":19},{"ruleId":"413","severity":1,"message":"424","line":7,"column":8,"nodeType":"415","messageId":"416","endLine":7,"endColumn":21},{"ruleId":"413","severity":1,"message":"448","line":9,"column":10,"nodeType":"415","messageId":"416","endLine":9,"endColumn":27},{"ruleId":"413","severity":1,"message":"449","line":87,"column":31,"nodeType":"415","messageId":"416","endLine":87,"endColumn":33},{"ruleId":"413","severity":1,"message":"450","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":18},{"ruleId":"413","severity":1,"message":"451","line":200,"column":15,"nodeType":"415","messageId":"416","endLine":200,"endColumn":20},{"ruleId":"413","severity":1,"message":"452","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":25},{"ruleId":"413","severity":1,"message":"421","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"450","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":20},{"ruleId":"413","severity":1,"message":"453","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":30},{"ruleId":"413","severity":1,"message":"454","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":28},{"ruleId":"413","severity":1,"message":"436","line":5,"column":10,"nodeType":"415","messageId":"416","endLine":5,"endColumn":14},{"ruleId":"413","severity":1,"message":"437","line":7,"column":10,"nodeType":"415","messageId":"416","endLine":7,"endColumn":16},{"ruleId":"413","severity":1,"message":"450","line":7,"column":18,"nodeType":"415","messageId":"416","endLine":7,"endColumn":28},{"ruleId":"413","severity":1,"message":"455","line":8,"column":22,"nodeType":"415","messageId":"416","endLine":8,"endColumn":27},{"ruleId":"413","severity":1,"message":"456","line":8,"column":29,"nodeType":"415","messageId":"416","endLine":8,"endColumn":41},{"ruleId":"413","severity":1,"message":"457","line":9,"column":10,"nodeType":"415","messageId":"416","endLine":9,"endColumn":16},{"ruleId":"413","severity":1,"message":"458","line":12,"column":18,"nodeType":"415","messageId":"416","endLine":12,"endColumn":32},{"ruleId":"413","severity":1,"message":"459","line":12,"column":34,"nodeType":"415","messageId":"416","endLine":12,"endColumn":45},{"ruleId":"413","severity":1,"message":"460","line":2,"column":54,"nodeType":"415","messageId":"416","endLine":2,"endColumn":63},{"ruleId":"413","severity":1,"message":"454","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":28},{"ruleId":"413","severity":1,"message":"436","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":14},{"ruleId":"413","severity":1,"message":"437","line":6,"column":10,"nodeType":"415","messageId":"416","endLine":6,"endColumn":16},{"ruleId":"413","severity":1,"message":"450","line":6,"column":18,"nodeType":"415","messageId":"416","endLine":6,"endColumn":28},{"ruleId":"413","severity":1,"message":"455","line":7,"column":22,"nodeType":"415","messageId":"416","endLine":7,"endColumn":27},{"ruleId":"413","severity":1,"message":"456","line":7,"column":29,"nodeType":"415","messageId":"416","endLine":7,"endColumn":41},{"ruleId":"413","severity":1,"message":"457","line":8,"column":10,"nodeType":"415","messageId":"416","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"458","line":11,"column":18,"nodeType":"415","messageId":"416","endLine":11,"endColumn":32},{"ruleId":"413","severity":1,"message":"459","line":11,"column":34,"nodeType":"415","messageId":"416","endLine":11,"endColumn":45},{"ruleId":"413","severity":1,"message":"454","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":28},{"ruleId":"413","severity":1,"message":"436","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":14},{"ruleId":"413","severity":1,"message":"426","line":4,"column":16,"nodeType":"415","messageId":"416","endLine":4,"endColumn":26},{"ruleId":"413","severity":1,"message":"421","line":4,"column":28,"nodeType":"415","messageId":"416","endLine":4,"endColumn":31},{"ruleId":"413","severity":1,"message":"437","line":6,"column":10,"nodeType":"415","messageId":"416","endLine":6,"endColumn":16},{"ruleId":"413","severity":1,"message":"450","line":6,"column":18,"nodeType":"415","messageId":"416","endLine":6,"endColumn":28},{"ruleId":"413","severity":1,"message":"461","line":7,"column":10,"nodeType":"415","messageId":"416","endLine":7,"endColumn":20},{"ruleId":"413","severity":1,"message":"455","line":7,"column":22,"nodeType":"415","messageId":"416","endLine":7,"endColumn":27},{"ruleId":"413","severity":1,"message":"456","line":7,"column":29,"nodeType":"415","messageId":"416","endLine":7,"endColumn":41},{"ruleId":"413","severity":1,"message":"462","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"418","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"463","line":8,"column":12,"nodeType":"415","messageId":"416","endLine":8,"endColumn":23},{"ruleId":"413","severity":1,"message":"464","line":8,"column":25,"nodeType":"415","messageId":"416","endLine":8,"endColumn":39},{"ruleId":"413","severity":1,"message":"452","line":1,"column":28,"nodeType":"415","messageId":"416","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"465","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":20},{"ruleId":"413","severity":1,"message":"466","line":21,"column":8,"nodeType":"415","messageId":"416","endLine":21,"endColumn":28},{"ruleId":"413","severity":1,"message":"467","line":22,"column":8,"nodeType":"415","messageId":"416","endLine":22,"endColumn":15},{"ruleId":"413","severity":1,"message":"423","line":23,"column":15,"nodeType":"415","messageId":"416","endLine":23,"endColumn":21},{"ruleId":"413","severity":1,"message":"468","line":24,"column":8,"nodeType":"415","messageId":"416","endLine":24,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":166,"column":20,"nodeType":"469","messageId":"430","endLine":166,"endColumn":31,"fix":"470"},{"ruleId":"427","severity":1,"message":"428","line":169,"column":24,"nodeType":"469","messageId":"430","endLine":169,"endColumn":35,"fix":"471"},{"ruleId":"413","severity":1,"message":"472","line":170,"column":19,"nodeType":"415","messageId":"416","endLine":170,"endColumn":27},{"ruleId":"441","severity":1,"message":"442","line":176,"column":72,"nodeType":"443","messageId":"444","endLine":176,"endColumn":74},{"ruleId":"473","severity":1,"message":"474","line":187,"column":9,"nodeType":"475","messageId":"476","endLine":204,"endColumn":12},{"ruleId":"441","severity":1,"message":"442","line":194,"column":72,"nodeType":"443","messageId":"444","endLine":194,"endColumn":74},{"ruleId":"413","severity":1,"message":"450","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":18},{"ruleId":"413","severity":1,"message":"477","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":17},{"ruleId":"413","severity":1,"message":"447","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":19},{"ruleId":"413","severity":1,"message":"435","line":7,"column":45,"nodeType":"415","messageId":"416","endLine":7,"endColumn":55},{"ruleId":"413","severity":1,"message":"478","line":8,"column":10,"nodeType":"415","messageId":"416","endLine":8,"endColumn":14},{"ruleId":"413","severity":1,"message":"479","line":10,"column":10,"nodeType":"415","messageId":"416","endLine":10,"endColumn":18},{"ruleId":"413","severity":1,"message":"462","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":16},{"ruleId":"413","severity":1,"message":"480","line":15,"column":7,"nodeType":"415","messageId":"416","endLine":15,"endColumn":16},{"ruleId":"413","severity":1,"message":"481","line":26,"column":7,"nodeType":"415","messageId":"416","endLine":26,"endColumn":18},{"ruleId":"413","severity":1,"message":"482","line":39,"column":11,"nodeType":"415","messageId":"416","endLine":39,"endColumn":20},{"ruleId":"441","severity":1,"message":"483","line":62,"column":23,"nodeType":"443","messageId":"444","endLine":62,"endColumn":25},{"ruleId":"413","severity":1,"message":"421","line":5,"column":10,"nodeType":"415","messageId":"416","endLine":5,"endColumn":13},{"ruleId":"413","severity":1,"message":"484","line":5,"column":42,"nodeType":"415","messageId":"416","endLine":5,"endColumn":56},{"ruleId":"413","severity":1,"message":"485","line":7,"column":7,"nodeType":"415","messageId":"416","endLine":7,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":36,"column":44,"nodeType":"429","messageId":"430","endLine":36,"endColumn":51,"fix":"486"},{"ruleId":"413","severity":1,"message":"487","line":17,"column":12,"nodeType":"415","messageId":"416","endLine":17,"endColumn":16},{"ruleId":"413","severity":1,"message":"488","line":17,"column":18,"nodeType":"415","messageId":"416","endLine":17,"endColumn":25},{"ruleId":"441","severity":1,"message":"442","line":20,"column":19,"nodeType":"443","messageId":"444","endLine":20,"endColumn":21},{"ruleId":"441","severity":1,"message":"483","line":24,"column":33,"nodeType":"443","messageId":"444","endLine":24,"endColumn":35},{"ruleId":"441","severity":1,"message":"483","line":27,"column":33,"nodeType":"443","messageId":"444","endLine":27,"endColumn":35},{"ruleId":"441","severity":1,"message":"483","line":35,"column":33,"nodeType":"443","messageId":"444","endLine":35,"endColumn":35},{"ruleId":"441","severity":1,"message":"483","line":38,"column":33,"nodeType":"443","messageId":"444","endLine":38,"endColumn":35},{"ruleId":"413","severity":1,"message":"423","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":14},{"ruleId":"413","severity":1,"message":"489","line":2,"column":26,"nodeType":"415","messageId":"416","endLine":2,"endColumn":36},{"ruleId":"413","severity":1,"message":"490","line":10,"column":10,"nodeType":"415","messageId":"416","endLine":10,"endColumn":20},{"ruleId":"413","severity":1,"message":"455","line":10,"column":22,"nodeType":"415","messageId":"416","endLine":10,"endColumn":27},{"ruleId":"413","severity":1,"message":"491","line":11,"column":12,"nodeType":"415","messageId":"416","endLine":11,"endColumn":21},{"ruleId":"413","severity":1,"message":"492","line":11,"column":23,"nodeType":"415","messageId":"416","endLine":11,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":89,"column":24,"nodeType":"475","messageId":"495","endLine":89,"endColumn":31},{"ruleId":"413","severity":1,"message":"496","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":30},{"ruleId":"413","severity":1,"message":"497","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":14},{"ruleId":"413","severity":1,"message":"498","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":17},{"ruleId":"413","severity":1,"message":"499","line":54,"column":11,"nodeType":"415","messageId":"416","endLine":54,"endColumn":18},{"ruleId":"413","severity":1,"message":"500","line":59,"column":12,"nodeType":"415","messageId":"416","endLine":59,"endColumn":18},{"ruleId":"413","severity":1,"message":"501","line":60,"column":11,"nodeType":"415","messageId":"416","endLine":60,"endColumn":24},{"ruleId":"413","severity":1,"message":"418","line":2,"column":20,"nodeType":"415","messageId":"416","endLine":2,"endColumn":29},{"ruleId":"413","severity":1,"message":"502","line":9,"column":18,"nodeType":"415","messageId":"416","endLine":9,"endColumn":21},{"ruleId":"503","severity":1,"message":"504","line":3,"column":1,"nodeType":"505","endLine":59,"endColumn":3},{"ruleId":"413","severity":1,"message":"452","line":1,"column":28,"nodeType":"415","messageId":"416","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"465","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":20},{"ruleId":"413","severity":1,"message":"466","line":21,"column":8,"nodeType":"415","messageId":"416","endLine":21,"endColumn":28},{"ruleId":"413","severity":1,"message":"467","line":22,"column":8,"nodeType":"415","messageId":"416","endLine":22,"endColumn":15},{"ruleId":"413","severity":1,"message":"423","line":23,"column":15,"nodeType":"415","messageId":"416","endLine":23,"endColumn":21},{"ruleId":"413","severity":1,"message":"468","line":24,"column":8,"nodeType":"415","messageId":"416","endLine":24,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":166,"column":20,"nodeType":"469","messageId":"430","endLine":166,"endColumn":31,"fix":"506"},{"ruleId":"427","severity":1,"message":"428","line":169,"column":24,"nodeType":"469","messageId":"430","endLine":169,"endColumn":35,"fix":"507"},{"ruleId":"413","severity":1,"message":"472","line":170,"column":19,"nodeType":"415","messageId":"416","endLine":170,"endColumn":27},{"ruleId":"441","severity":1,"message":"442","line":176,"column":72,"nodeType":"443","messageId":"444","endLine":176,"endColumn":74},{"ruleId":"473","severity":1,"message":"474","line":187,"column":9,"nodeType":"475","messageId":"476","endLine":204,"endColumn":12},{"ruleId":"441","severity":1,"message":"442","line":194,"column":72,"nodeType":"443","messageId":"444","endLine":194,"endColumn":74},{"ruleId":"413","severity":1,"message":"423","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":14},{"ruleId":"413","severity":1,"message":"434","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":19},{"ruleId":"413","severity":1,"message":"460","line":2,"column":54,"nodeType":"415","messageId":"416","endLine":2,"endColumn":63},{"ruleId":"413","severity":1,"message":"508","line":2,"column":65,"nodeType":"415","messageId":"416","endLine":2,"endColumn":72},{"ruleId":"413","severity":1,"message":"509","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":17},{"ruleId":"413","severity":1,"message":"510","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":26},{"ruleId":"413","severity":1,"message":"460","line":2,"column":54,"nodeType":"415","messageId":"416","endLine":2,"endColumn":63},{"ruleId":"413","severity":1,"message":"509","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":17},{"ruleId":"413","severity":1,"message":"510","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":26},{"ruleId":"413","severity":1,"message":"451","line":82,"column":15,"nodeType":"415","messageId":"416","endLine":82,"endColumn":20},{"ruleId":"413","severity":1,"message":"511","line":197,"column":15,"nodeType":"415","messageId":"416","endLine":197,"endColumn":18},{"ruleId":"413","severity":1,"message":"512","line":199,"column":15,"nodeType":"415","messageId":"416","endLine":199,"endColumn":27},{"ruleId":"413","severity":1,"message":"513","line":207,"column":15,"nodeType":"415","messageId":"416","endLine":207,"endColumn":26},{"ruleId":"427","severity":1,"message":"428","line":54,"column":40,"nodeType":"429","messageId":"430","endLine":54,"endColumn":47,"fix":"514"},{"ruleId":"413","severity":1,"message":"515","line":55,"column":12,"nodeType":"415","messageId":"416","endLine":55,"endColumn":17},{"ruleId":"427","severity":1,"message":"428","line":55,"column":40,"nodeType":"429","messageId":"430","endLine":55,"endColumn":47,"fix":"516"},{"ruleId":"413","severity":1,"message":"517","line":100,"column":11,"nodeType":"415","messageId":"416","endLine":100,"endColumn":23},{"ruleId":"413","severity":1,"message":"518","line":117,"column":11,"nodeType":"415","messageId":"416","endLine":117,"endColumn":28},{"ruleId":"493","severity":1,"message":"494","line":144,"column":38,"nodeType":"519","messageId":"520","endLine":144,"endColumn":40},"no-native-reassign",["521"],"no-negated-in-lhs",["522"],"@typescript-eslint/no-unused-vars","'Places' is defined but never used.","Identifier","unusedVar","'LocationPicker' is defined but never used.","'useEffect' is defined but never used.","'RegularBtn' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'ProfileOverview' is defined but never used.","'Button' is defined but never used.","'SinglePostNew' is defined but never used.","'Popup' is defined but never used.","'Typography' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"523","text":"524"},{"range":"525","text":"524"},"'OccupationSelect' is defined but never used.","'Component' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Slide' is defined but never used.","'CssBaseline' is defined but never used.","'useScrollTrigger' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Card' is defined but never used.","'CardContent' is defined but never used.","'BadgeAvatar' is defined but never used.","'checkUserLoggedIn' is defined but never used.","'id' is assigned a value but never used.","'IconButton' is defined but never used.","'coord' is assigned a value but never used.","'useState' is defined but never used.","'PhotoCameraRoundedIcon' is defined but never used.","'ArrowBackRoundedIcon' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'purple' is defined but never used.","'SwitchClassKey' is defined but never used.","'SwitchProps' is defined but never used.","'Container' is defined but never used.","'withStyles' is defined but never used.","'firebase' is defined but never used.","'coordinates' is assigned a value but never used.","'setCoordinates' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'GuessTheLocationPlay' is defined but never used.","'GTLicon' is defined but never used.","'GTLexpanded' is defined but never used.","NewExpression",{"range":"526","text":"524"},{"range":"527","text":"524"},"'snapshot' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'AddAvatar' is defined but never used.","'Link' is defined but never used.","'truncate' is defined but never used.","'useStyles' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'Followers' is assigned a value but never used.","Expected '===' and instead saw '=='.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.",{"range":"528","text":"524"},"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'MenuButton' is defined but never used.","'makeStyles' is defined but never used.","'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedReturnValue","'GuessTheLocationButton' is defined but never used.","'Camera' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'source' is assigned a value but never used.","'handleCapture' is assigned a value but never used.","'Fab' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"529","text":"524"},{"range":"530","text":"524"},"'Divider' is defined but never used.","'InputBase' is defined but never used.","'PublishRoundedIcon' is defined but never used.","'pid' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClick' is assigned a value but never used.",{"range":"531","text":"524"},"'posts' is assigned a value but never used.",{"range":"532","text":"524"},"'fetchResults' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[735,742],"[]",[785,792],[5912,5923],[6002,6013],[1006,1013],[5908,5919],[5998,6009],[1562,1569],[1612,1619]]