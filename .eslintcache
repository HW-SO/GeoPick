[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"5","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"6","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"7","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"8","/home/ms374/GeoPick/src/pages/sign-in screen/index.tsx":"9","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"10","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"11","/home/ms374/GeoPick/src/pages/sign-up screen/index.tsx":"12","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"13","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"14","/home/ms374/GeoPick/src/pages/home-screen/singlePost.tsx":"15","/home/ms374/GeoPick/src/constants/routes.ts":"16","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx":"17","/home/ms374/GeoPick/src/firebase/index.ts":"18","/home/ms374/GeoPick/src/firebase/db.ts":"19","/home/ms374/GeoPick/src/firebase/firebase.ts":"20","/home/ms374/GeoPick/src/firebase/auth.ts":"21","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"22","/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx":"23","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx":"24","/home/ms374/GeoPick/src/components/Inputs/UsernameField.tsx":"25","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"26","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"27","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"28"},{"size":931,"mtime":1609151726850,"results":"29","hashOfConfig":"30"},{"size":467,"mtime":1609151726915,"results":"31","hashOfConfig":"30"},{"size":3159,"mtime":1610625789472,"results":"32","hashOfConfig":"30"},{"size":787,"mtime":1609751277182,"results":"33","hashOfConfig":"30"},{"size":1634,"mtime":1610523628749,"results":"34","hashOfConfig":"30"},{"size":1688,"mtime":1610523628757,"results":"35","hashOfConfig":"30"},{"size":1471,"mtime":1610345532488,"results":"36","hashOfConfig":"30"},{"size":809,"mtime":1610918476012,"results":"37","hashOfConfig":"30"},{"size":2588,"mtime":1610918476074,"results":"38","hashOfConfig":"30"},{"size":5098,"mtime":1610922469992,"results":"39","hashOfConfig":"30"},{"size":4555,"mtime":1610625789604,"results":"40","hashOfConfig":"30"},{"size":438,"mtime":1610919937264,"results":"41","hashOfConfig":"30"},{"size":1842,"mtime":1610345532515,"results":"42","hashOfConfig":"30"},{"size":1756,"mtime":1610918475958,"results":"43","hashOfConfig":"30"},{"size":4832,"mtime":1610918476027,"results":"44","hashOfConfig":"30"},{"size":144,"mtime":1610919912190,"results":"45","hashOfConfig":"30"},{"size":4270,"mtime":1610949067169,"results":"46","hashOfConfig":"30"},{"size":132,"mtime":1610625789561,"results":"47","hashOfConfig":"30"},{"size":262,"mtime":1610625789551,"results":"48","hashOfConfig":"30"},{"size":2662,"mtime":1610918476284,"results":"49","hashOfConfig":"30"},{"size":951,"mtime":1610918475997,"results":"50","hashOfConfig":"30"},{"size":1633,"mtime":1610862649219,"results":"51","hashOfConfig":"30"},{"size":1515,"mtime":1610949042666,"results":"52","hashOfConfig":"30"},{"size":2491,"mtime":1610922425216,"results":"53","hashOfConfig":"30"},{"size":2529,"mtime":1610015623241,"results":"54","hashOfConfig":"30"},{"size":2205,"mtime":1610657364660,"results":"55","hashOfConfig":"30"},{"size":693,"mtime":1610660199795,"results":"56","hashOfConfig":"30"},{"size":1391,"mtime":1610919733024,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1j1dccp",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},"/home/ms374/GeoPick/src/index.tsx",[],["130","131"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",["132","133","134","135","136"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport WelcomeScreen from './pages/welcome screen';\nimport SignInScreen from './pages/sign-in screen';\nimport SignUpScreen from './pages/sign-up screen';\nimport BottomNavigation from './components/NavBar/navbar';\nimport BackwardBtn from './components/Buttons/BackwardBtn';\nimport TextField from './components/Inputs/TextField';\nimport Card from './components/Layouts/Card';\nimport Checkbox from './components/Inputs/Checkbox';\nimport { RegularBtn } from './components/Buttons/RegularBtn';\nimport CreateProfileScreen from './pages/create-profile-screen';\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\nimport { HomeScreen } from './pages/home-screen/home';\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Nav />\n                <div style={{ background: 'black' }}>\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\n                </div>\n                <div>{/* <BottomNavigation /> */}</div>\n                <Switch>\n                    <Route exact path=\"/welcome\">\n                        <WelcomeScreen />\n                    </Route>\n                    <Route exact path=\"/sign-in\">\n                        <SignInScreen />\n                    </Route>\n                    <Route exact path=\"/sign-up\">\n                        <SignUpScreen />\n                    </Route>\n                    <Route exact path=\"/create-profile\">\n                        <CreateProfileScreen />\n                    </Route>\n                    <Route exact path=\"/Set-password\">\n                        <SetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/ReSet-password\">\n                        <ReSetNewPasswordScreen />\n                    </Route>\n                    <Route exact path=\"/home\">\n                        <HomeScreen />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nfunction Nav() {\n    return (\n        <div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/welcome\">Welcome</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-in\">Sign-In</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/sign-up\">Sign-Up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/create-profile\">Create Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/Set-password\">Set new password</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ReSet-password\">reset password </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/home\">Home Screen</Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default App;\n","/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",["137","138"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport './styles.scss';\nexport interface SetNewPassProps {}\n\nexport default class SetNewPass extends React.Component<SetNewPassProps> {\n    public render(): JSX.Element {\n        return (\n            <div>\n                <div className=\"bgnewpass\">\n                    <Card background=\"white\" title=\"Set a new Password\" split={2}>\n                        <Grid container spacing={5} direction=\"row\">\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n                                    <PasswordField> </PasswordField>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <PasswordField> Confirm Password </PasswordField>{' '}\n                                    {/* ask to add the cofirm text in the components */}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\n                                        Set Password\n                                    </RegularBtn>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/pages/home-screen/home.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/index.tsx",["139"],"import * as React from 'react';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\nimport { auth } from '../../firebase';\nexport interface SignInProps {}\n\nexport default class SignInScreen extends React.Component<SignInProps> {\n    public render(): JSX.Element {\n        /* const Signin = ()=> {\n            const email=document.querySelector(\"#Email\")?.nodeValue;\n            const password=document.querySelector(\"#Password\")?.nodeValue;\n            auth.doSignInWithEmailAndPassword(email,password).then((u)=>{\n                console.log(\"sucessfully logged\");\n                \n            }).catch((err)=>{\n                console.log(\"Error \"+ err.toString);\n            })\n        };*/\n        \n        return (\n            <div>\n                <div className=\"bg\">\n                    <Card background=\"white\" title=\"Sign In\" split={1}>\n                        <Grid container spacing={4} direction=\"row\">\n                            <Grid item>\n                                <Typography align=\"left\" variant=\"h3\">\n                                    <h5>You know what to do... </h5>\n                                </Typography>\n                            </Grid>\n\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField id=\"Email\" label=\"Email\"> </TextField>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <PasswordField id=\"Password\"> </PasswordField>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\n                                        Sign In\n                                    </RegularBtn>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <Link to=\"/ReSet-password\"> Forgot Password ?</Link>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",["140","141"],"import * as React from 'react';\nimport './styles.scss';\nimport UsernameField from '../../components/Inputs/UsernameField';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport { Grid, Typography } from '@material-ui/core';\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport sampleavatar from './sample-avatar.png';\nimport {storage} from '../../firebase/firebase';\nimport firebase from 'firebase';\nimport OccupationSelect from '../../components/Inputs/occupation';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\n\nexport interface CreateProfileProps {}\n\nexport default class CreateProfileScreen extends React.Component<CreateProfileProps> {\n\n    state = {\n        img: {},\n        email: \"\",\n        username: \"\",\n        occupation: \"\",\n        imgurl : sampleavatar,\n    }\n\n    changeAvatar = async (event:React.ChangeEvent<HTMLInputElement>) => {\n        if(event.target.files && event.target.files[0]){\n            const file = await event.target.files[0];\n            this.setState({img: file})\n            console.log(this.state.img);\n\n            const uploadRef = storage.ref(`/Images/User1/${file.name}`).put(file).then(data => {\n                data.ref.getDownloadURL().then(url => {\n                    this.setState({imgurl: url});\n                    firebase\n                    .firestore()\n                    .collection('users/').doc('User1/')\n                    .update({\n                        Avatar: url,\n                    })\n                });\n            });;\n        }\n    }\n\n    submitInfo = () => {\n\n        firebase.firestore()\n        .collection('users/').doc('User1/')\n        .update({\n            Avatar: this.state.imgurl,\n            Email: this.state.email,\n            User_name: this.state.username,\n            Occupation: this.state.occupation\n        })\n    }\n    \n    handleUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({username: event.target.value});\n    }\n    public render(): JSX.Element {\n        return (\n            <html>\n                <body>\n                    <div className=\"Create-Profile-Page\">\n                        <Card title=\"Create Profile\" split={1}>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Grid item>\n                                    <BadgeAvatar src={this.state.imgurl} onChange = {this.changeAvatar} />\n                                </Grid>\n                                <CreateProfileForm />\n                            </Grid>\n                        </Card>\n                    </div>\n                </body>\n            </html>\n        );\n    }\n}\n\n\nconst CreateProfileFields = ({ register, errors }: { register: any; errors: any }) => {\n    console.log(errors);\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%' }}>\n                <TextField\n                    name=\"username\"\n                    id=\"username\"\n                    label=\"username\"\n                    type=\"username\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9_]{3,8}$/i,\n                            message: 'invalid username',\n                        },\n                    })}\n                    error={errors.username ? true : false}\n                />\n            </Grid>\n            <Grid item style={{ width: '100%' }}>\n                <OccupationSelect register={register(register)}/>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst CreateProfileForm = () => {\n    const { handleSubmit, errors, register } = useForm();\n    const { push } = useHistory();\n    const onSubmit = (data: any) => {\n        console.log(data);\n        push('/home');\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <CreateProfileFields register={register} errors={errors} />\n                <Grid item container spacing={3}>\n                    <Grid item xs={10} alignContent=\"center\" alignItems=\"center\" style={{ paddingTop: '20px', verticalAlign: 'true' }}>\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\n                            *Other users will be able to view your username and display picture as\n                            set above\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\n                        Complete Registration\n                    </RegularBtn>\n                </Grid>\n            </form>\n        </>\n    );\n};\n","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import * as React from 'react';\nimport './styles.scss';\nimport { auth } from '../../firebase';\nimport app from 'firebase/app';\nimport SignUpScreen from '../sign-up screen/index';\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\nimport WhiteLogo from './WhiteLogo.svg';\nimport googleButton from './googleButton.svg';\n// import background from './welcome-pg.png';\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { AlternateEmailTwoTone, Widgets } from '@material-ui/icons';\ninterface WelcomeProps {}\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             flexGrow: 1,\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//             color: theme.palette.text.secondary,\n//         },\n//     }),\n// );\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\n    // const classes = useStyles();\n    /* var config={\n   apiKey:\"\",\n   authDomain:\"\",\n   databaseURL:\"\",\n   project:\"\",\n   storeageBucket:\"\",\n   messageingSenderid:\"\"\n};*/\n    const GoogleSignin = () => {\n        auth.doGoogleSignUp().catch((error) => {\n            console.log(error);\n            window.alert('Failed to login');\n        });\n    };\n    return (\n        <html>\n            <body>\n                {/* <img src ={background} width='auto'> */}\n                <div className=\"welcomepg\">\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                        <Grid item>\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h3\" align=\"center\">\n                                <span>A tool for</span>\n                                <br></br>shutterbugs!\n                            </Typography>\n                        </Grid>\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <Grid\n                                item\n                                xs={2}\n                                alignContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ verticalAlign: 'true' }}\n                            ></Grid>\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                                <Grid item>\n                                    <button onClick={GoogleSignin} className=\"g-btn\">\n                                        <img src={googleButton} width=\"22px\" alt=\"Google\" />\n                                        <p className=\"text\">Sign in</p>\n                                    </button>\n                                    <br></br>\n                                    <hr style={{ width: '500px' }} />\n                                    <div style={{ paddingBottom: '5%' }}>\n                                        <a href=\"/sign-up\">\n                                            <button className=\"sign-btn\">Sign up now!</button>\n                                        </a>\n                                    </div>\n                                    {/* <br></br> */}\n                                    <div style={{ paddingBottom: '20%' }}>\n                                        <a href=\"/sign-in\">\n                                            <button className=\"sign-btn1\">Sign in</button>\n                                        </a>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </body>\n        </html>\n    );\n};\n\nexport default WelcomeScreen;\n","/home/ms374/GeoPick/src/pages/sign-up screen/index.tsx",["160","161"],"\nimport React from 'react';\nimport { RouteChildrenProps, useHistory } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { CREATE_PROFILE } from '../../constants/routes';\nimport SignupForm from './SignupForm';\nimport { useForm } from 'react-hook-form';\n\nfunction Signup() {\n    const { push } = useHistory();\n    if (auth.checkUserLoggedIn()) push(CREATE_PROFILE);\n    return <SignupForm />;\n}\n\nexport default Signup;\n","/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/pages/home-screen/singlePost.tsx",["162"],"import { Avatar, Grid, Card, Typography, IconButton, TextField, Button, Container } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport './singlePostStyles.scss';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\nexport interface SinglePostProps {\n    username?: string;\n    postPic?: string;\n    date?: string;\n    postImage?: string;\n    avatar?: string;\n}\n\nexport interface SinglePostState {}\n\nclass SinglePost extends Component<SinglePostProps, SinglePostState> {\n    // state = { :  }\n    render() {\n        return (\n            // <Container fixed style={{ background: '#FAFAFA', padding: '2%' }}>\n            <>\n                <Grid container direction=\"row\" spacing={1} justify=\"center\">\n                    <Grid item justify=\"flex-start\" style={{ marginLeft: '0%' }}>\n                        <Avatar alt={this.props.username} src={this.props.avatar}></Avatar>\n                    </Grid>\n                    <Grid item justify=\"flex-start\">\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.props.username}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item justify=\"flex-end\" style={{ marginLeft: '18%' }}>\n                        <Card\n                            style={{\n                                color: '#F56920',\n                                borderRadius: '22px',\n                                justifyContent: 'center',\n                            }}\n                            className=\"boxField\"\n                        >\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.props.date}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <br></br>\n                {/* <Grid container direction=\"row\" spacing={2} justify={'center'}>\n                    <Grid item> */}\n                <Container fixed>\n                    <div className=\"postImage\" style={{ justifyItems: 'normal' }}>\n                        <img\n                            src={this.props.postPic}\n                            alt=\"not loading...\"\n                            width=\"50%\"\n                            height=\"90%\"\n                            className=\"postImage\"\n                            style={{ borderRadius: '20px 20px 0px 0px' }}\n                        ></img>\n                        <Button style={{ transform: 'translate(-130%, -50%)' }}>GeoPick</Button>\n                    </div>\n                </Container>\n\n                {/* </Grid>\n                </Grid> */}\n                <Grid container direction=\"column\" spacing={2} justify={'center'}>\n                    <Grid item justify=\"flex-start\" direction=\"column\" style={{ marginLeft: '-15%' }}>\n                        <div style={{ alignContent: 'flex-start', justifyContent: 'left' }}>\n                            <IconButton aria-label=\"add to favorites\" style={{ color: '#FAFAFA' }}>\n                                <FavoriteIcon />\n                            </IconButton>\n                            <IconButton aria-label=\"share\" style={{ color: '#FAFAFA' }}>\n                                <ShareIcon />\n                            </IconButton>\n                            {/* <Grid item> */}\n                            <TextField\n                                label=\"Start typing...\"\n                                variant=\"outlined\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <IconButton\n                                            aria-label=\"upload\"\n                                            style={{ color: '#FAFAFA', alignContent: 'end' }}\n                                        >\n                                            <PublishRoundedIcon />\n                                        </IconButton>\n                                    ),\n                                }}\n                            />\n                            {/* </Grid> */}\n                        </div>\n                    </Grid>\n                </Grid>\n\n                <div style={{ padding: '25px' }}></div>\n            </>\n        );\n    }\n}\n\nexport default SinglePost;\n\n// {/* <IconButton type=\"submit\" aria-label=\"submit\" style={{ color: '#FAFAFA' }}></IconButton> */}\n","/home/ms374/GeoPick/src/constants/routes.ts",[],"/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx",["163"],"/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/firebase/db.ts",[],"/home/ms374/GeoPick/src/firebase/firebase.ts",["164"],"/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport 'firebase/auth';\nimport 'firebase/database';\nimport firebase from 'firebase';\nimport cred from '../constants/firebase-creds.json';\nimport 'dot-env';\nimport 'firebase/storage';\n//import './sign-in screen';\nconst prodConfig = {\n    apiKey: cred.REACT_APP_API_KEY,\n    authDomain: cred.REACT_APP_AUTH_DOMAIN,\n    databaseURL: cred.REACT_APP_DATABASE_URL,\n    projectId: cred.REACT_APP_PROJECT_ID,\n    storageBucket: cred.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: cred.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nconst devConfig = {\n    apiKey: cred.REACT_APP_DEV_API_KEY,\n    authDomain: cred.REACT_APP_DEV_AUTH_DOMAIN,\n    databaseURL: cred.REACT_APP_DEV_DATABASE_URL,\n    projectId: cred.REACT_APP_DEV_PROJECT_ID,\n    storageBucket: cred.REACT_APP_DEV_STORAGE_BUCKET,\n    messagingSenderId: cred.REACT_APP_DEV_MESSAGING_SENDER_ID,\n};\n\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\n// class firebase {\n//     auth: app.auth.Auth; // variable assigned for auth\n//     static auth: app.auth.Auth;\n//     providerGoogle: app.auth.GoogleAuthProvider | undefined;\n\n//     constructor() {\n//         app.initializeApp(config);\n//         this.auth = app.auth(); // auth api, use this.auth to use it\n//     }\n\n//     /**============================================\n//      **               AUTH API\n//      *=============================================**/\n\n//     // signup with email and pass\n//     doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n//         this.auth.createUserWithEmailAndPassword(email, password);\n\n//     doSignInWithEmailAndPassword = (email: string, password: string) =>\n//         this.auth.signInWithEmailAndPassword(email, password);\n\n//     doSignOut = () => this.auth.signOut();\n\n//     getGoogleProvider = () => {\n//         this.providerGoogle = new app.auth.GoogleAuthProvider();\n//         return this.providerGoogle;\n//     };\n\n//     getApp = () => {\n//         return app;\n//     }\n\n//     getStorage = () => {\n//         return app.storage();\n//     }\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(config);\n}\n// app.initializeApp(config);\n\nconst signIn=(email:string,password:string)=>{\n    auth.signInWithEmailAndPassword(email,password).then((u)=>{\n        console.log(\"sucessfully logged\");\n        \n    }).catch((err)=>{\n        console.log(\"Error \"+ err.toString);\n    })\n}\nexport const auth = firebase.auth();\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\nexport const db = firebase.database();\nexport default auth;\nexport const storage = firebase.storage();","/home/ms374/GeoPick/src/firebase/auth.ts",[],"/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",["165"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\nfunction TextField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    InputProps={{\n                        ...InputProps,\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n\nexport default TextField;\n","/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx",["166","167","168"],"/home/ms374/GeoPick/src/components/Inputs/occupation.tsx",["169","170","171"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\nborderRadius: 20,\n    position: 'relative',\n    backgroundColor: 'white',\n    borderColor: 'white',\n    fontSize: 14,\n    width: '100%',\n    // transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n    //   borderRadius: 20,\n    //   borderColor: '#80bdff',\n    //   boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n    },\n}));\n\nexport default function OccupationSelect({ register }: { register: any}) {\n  const classes = useStyles();\n  const [occ, setOcc] = React.useState('');\n  const handleChange = (event: any) => {\n    setOcc(event.target.value);\n  };\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.root}>\n        <InputLabel id=\"occupation-select\">Occupation (Optional)</InputLabel>\n        <Select\n          labelId=\"occupation-outlines\"\n          id=\"occupation-select\"\n          value={occ}\n          onChange={handleChange}\n          label=\"Occupation\"\n          inputProps={{\n            inputRef: (ref: any) => {\n              if (!ref) return;\n              register({\n                name: \"occupation\",\n                value: ref.value,\n              });\n            },}}\n        >\n          <MenuItem value=\"\">\n          </MenuItem>\n          <MenuItem value={\"Historian\"}>Historian</MenuItem>\n          <MenuItem value={\"Student\"}>Student</MenuItem>\n          <MenuItem value={\"Teacher\"}>Teacher</MenuItem>\n          <MenuItem value={\"Photographer\"}>Photographer</MenuItem>\n          <MenuItem value={\"Collector\"}>Collector</MenuItem>\n          <MenuItem value={\"Academcian\"}>Academcian</MenuItem>\n          <MenuItem value={\"Gamer\"}>Gamer</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","/home/ms374/GeoPick/src/components/Inputs/UsernameField.tsx",["172","173","174","175","176"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { InputAdornment } from '@material-ui/core';\nimport Tick from './Tick.svg';\nimport cross from './cross.svg';\n\n// const styles = {\n//     root: {\n//         background: 'red',\n//         borderRadius: 20,\n//         borderColor: 'red',\n//     },\n//     notched: {\n//         borderColor: 'red',\n//     },\n// };\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\ninterface State {\n    username: string;\n    acceptableUsername: boolean;\n}\n\nexport default function UsernameField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    const [values, setValues] = React.useState<State>({\n        username: '',\n        acceptableUsername: false,\n    });\n\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n    return (\n        <Box display=\"flex\">\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\n                <CssTextField\n                    variant=\"filled\"\n                    fullWidth\n                    \n                    InputProps={{\n                        ...InputProps,\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                {values.acceptableUsername ? <img src={Tick} /> : <img src={cross} />}\n                            </InputAdornment>\n                        ),\n                        disableUnderline: true,\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n}\n",["177","178"],"/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",["179","180","181","182"],"import React, {useState}from 'react';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport UploadButton from './AddAvatarIcon';\nimport Avatars from './Avatar';\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n        width: 22,\n        height: 22,\n        border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\ninterface Image {\n    src: string\n}\n\nexport default function BadgeAvatar(props: any) {\n    const classes = useStyles();\n\n    // const [avat, setAvat] = useState({})\n    // const [changeDetected, setChangeDetected] = useState(false);\n    // const changeAvatar = (newAvat: File) => {\n    //     setAvat(newAvat);\n    //     console.log(avat);\n    //     setChangeDetected(true);\n    //     // props.newAvatar(avat);\n    // }\n\n\n    return (\n        <div className={classes.root}>\n            <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                badgeContent={<UploadButton onChange = {props.onChange} />}\n            >\n                <Avatars imgsrc={props.src}/>\n            </Badge>\n        </div>\n    );\n}\n\n","/home/ms374/GeoPick/src/components/Display/Avatar.tsx",["183"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    large: {\n        width: theme.spacing(24),\n        height: theme.spacing(24),\n    },\n}));\n\ninterface Image {\n    imgsrc: string\n}\n\nexport default function Avatars(props: any) {\n    const classes = useStyles();\n    console.log(props.imgsrc);\n    return (\n        <div className={classes.root}>\n            <Avatar alt=\"Avatar Image\" src={props.imgsrc} className={classes.large} />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",["184","185"],"\nimport React, {useState} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAvatar from './AddAvatar.png';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n      width: 22,\n      height: 22,\n      border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nexport default function UploadButton(props: any) {\n  const classes = useStyles();\n  // const imageInputs = {imgUrl: ''}\n  // const [imageAsFile, setImageAsFile] = useState<File | null>(null)\n  // const [imageAsUrl, setImageAsUrl] = useState(imageInputs) \n  \n  // console.log(imageAsFile)\n\n  \n  return (\n    <div className={classes.root}>\n      {/* <form onSubmit = {submitInfo}> */}\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\n      <label htmlFor=\"icon-button-file\">\n      \n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" >\n      <SmallAvatar alt=\"Add Avatar Icon\" src={AddAvatar} />\n      </IconButton>\n      </label>\n      {/* </form> */}\n    </div>\n  );\n}",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":24},{"ruleId":"190","severity":1,"message":"194","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":19},{"ruleId":"190","severity":1,"message":"195","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":17},{"ruleId":"190","severity":1,"message":"196","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":12},{"ruleId":"190","severity":1,"message":"197","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":16},{"ruleId":"190","severity":1,"message":"198","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":17},{"ruleId":"190","severity":1,"message":"199","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":14},{"ruleId":"190","severity":1,"message":"200","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":21},{"ruleId":"190","severity":1,"message":"201","line":34,"column":19,"nodeType":"192","messageId":"193","endLine":34,"endColumn":28},{"ruleId":"190","severity":1,"message":"202","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":11},{"ruleId":"190","severity":1,"message":"203","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":20},{"ruleId":"190","severity":1,"message":"204","line":6,"column":27,"nodeType":"192","messageId":"193","endLine":6,"endColumn":33},{"ruleId":"190","severity":1,"message":"205","line":6,"column":35,"nodeType":"192","messageId":"193","endLine":6,"endColumn":40},{"ruleId":"190","severity":1,"message":"206","line":6,"column":42,"nodeType":"192","messageId":"193","endLine":6,"endColumn":48},{"ruleId":"190","severity":1,"message":"207","line":6,"column":50,"nodeType":"192","messageId":"193","endLine":6,"endColumn":54},{"ruleId":"190","severity":1,"message":"208","line":6,"column":56,"nodeType":"192","messageId":"193","endLine":6,"endColumn":69},{"ruleId":"190","severity":1,"message":"209","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":22},{"ruleId":"190","severity":1,"message":"210","line":10,"column":30,"nodeType":"192","messageId":"193","endLine":10,"endColumn":40},{"ruleId":"190","severity":1,"message":"211","line":10,"column":42,"nodeType":"192","messageId":"193","endLine":10,"endColumn":47},{"ruleId":"190","severity":1,"message":"212","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":15},{"ruleId":"190","severity":1,"message":"197","line":12,"column":8,"nodeType":"192","messageId":"193","endLine":12,"endColumn":16},{"ruleId":"190","severity":1,"message":"195","line":13,"column":8,"nodeType":"192","messageId":"193","endLine":13,"endColumn":17},{"ruleId":"190","severity":1,"message":"213","line":14,"column":8,"nodeType":"192","messageId":"193","endLine":14,"endColumn":21},{"ruleId":"190","severity":1,"message":"196","line":15,"column":8,"nodeType":"192","messageId":"193","endLine":15,"endColumn":12},{"ruleId":"190","severity":1,"message":"214","line":16,"column":10,"nodeType":"192","messageId":"193","endLine":16,"endColumn":20},{"ruleId":"190","severity":1,"message":"215","line":17,"column":10,"nodeType":"192","messageId":"193","endLine":17,"endColumn":31},{"ruleId":"190","severity":1,"message":"216","line":17,"column":33,"nodeType":"192","messageId":"193","endLine":17,"endColumn":40},{"ruleId":"190","severity":1,"message":"217","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":28},{"ruleId":"190","severity":1,"message":"218","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":17},{"ruleId":"190","severity":1,"message":"219","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":17},{"ruleId":"190","severity":1,"message":"199","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":14},{"ruleId":"190","severity":1,"message":"220","line":70,"column":7,"nodeType":"192","messageId":"193","endLine":70,"endColumn":13},{"ruleId":"190","severity":1,"message":"221","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":12},{"ruleId":"190","severity":1,"message":"210","line":1,"column":35,"nodeType":"192","messageId":"193","endLine":1,"endColumn":45},{"ruleId":"190","severity":1,"message":"209","line":1,"column":47,"nodeType":"192","messageId":"193","endLine":1,"endColumn":59},{"ruleId":"190","severity":1,"message":"222","line":26,"column":7,"nodeType":"192","messageId":"193","endLine":26,"endColumn":16},{"ruleId":"190","severity":1,"message":"223","line":2,"column":22,"nodeType":"192","messageId":"193","endLine":2,"endColumn":32},{"ruleId":"190","severity":1,"message":"224","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":20},{"ruleId":"190","severity":1,"message":"219","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":17},{"ruleId":"190","severity":1,"message":"221","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":12},{"ruleId":"190","severity":1,"message":"225","line":58,"column":11,"nodeType":"192","messageId":"193","endLine":58,"endColumn":23},{"ruleId":"190","severity":1,"message":"226","line":62,"column":11,"nodeType":"192","messageId":"193","endLine":62,"endColumn":34},{"ruleId":"227","severity":1,"message":"228","line":76,"column":62,"nodeType":"229","endLine":76,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":76,"column":83,"nodeType":"229","endLine":76,"endColumn":102},{"ruleId":"186","replacedBy":"230"},{"ruleId":"188","replacedBy":"231"},{"ruleId":"190","severity":1,"message":"232","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"233","line":9,"column":7,"nodeType":"192","messageId":"193","endLine":9,"endColumn":18},{"ruleId":"190","severity":1,"message":"234","line":38,"column":7,"nodeType":"192","messageId":"193","endLine":38,"endColumn":18},{"ruleId":"190","severity":1,"message":"235","line":55,"column":11,"nodeType":"192","messageId":"193","endLine":55,"endColumn":16},{"ruleId":"190","severity":1,"message":"235","line":18,"column":11,"nodeType":"192","messageId":"193","endLine":18,"endColumn":16},{"ruleId":"190","severity":1,"message":"232","line":2,"column":16,"nodeType":"192","messageId":"193","endLine":2,"endColumn":24},{"ruleId":"190","severity":1,"message":"236","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-unused-vars","'BottomNavigation' is defined but never used.","Identifier","unusedVar","'BackwardBtn' is defined but never used.","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'auth' is defined but never used.","'UsernameField' is defined but never used.","'uploadRef' is assigned a value but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'PasswordField' is defined but never used.","'RegularBtn' is defined but never used.","'AlternateEmailTwoTone' is defined but never used.","'Widgets' is defined but never used.","'RouteChildrenProps' is defined but never used.","'useForm' is defined but never used.","'InputBase' is defined but never used.","'signIn' is assigned a value but never used.","'clsx' is defined but never used.","'Custombox' is assigned a value but never used.","'withStyles' is defined but never used.","'NativeSelect' is defined but never used.","'handleChange' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["237"],["238"],"'useState' is defined but never used.","'StyledBadge' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'Image' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]