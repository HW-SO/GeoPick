[{"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\index.tsx":"1","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts":"2","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\App.tsx":"3","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts":"4","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx":"5","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"6","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"7","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\index.tsx":"8","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\set-new-password\\index.tsx":"9","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\reset-password\\index.tsx":"10","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"11","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\index.tsx":"12","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"13","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx":"14","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"15","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx":"16","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\UsernameField.tsx":"17","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"18","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx":"19","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"20","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts":"21","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts":"22","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\context.ts":"23"},{"size":956,"mtime":1609159220764,"results":"24","hashOfConfig":"25"},{"size":482,"mtime":1609106075345,"results":"26","hashOfConfig":"25"},{"size":3008,"mtime":1610196352939,"results":"27","hashOfConfig":"25"},{"size":821,"mtime":1609330750321,"results":"28","hashOfConfig":"25"},{"size":1567,"mtime":1609335296860,"results":"29","hashOfConfig":"25"},{"size":1523,"mtime":1610289923936,"results":"30","hashOfConfig":"25"},{"size":4079,"mtime":1610036782199,"results":"31","hashOfConfig":"25"},{"size":3005,"mtime":1610036782228,"results":"32","hashOfConfig":"25"},{"size":3455,"mtime":1610198865432,"results":"33","hashOfConfig":"25"},{"size":2997,"mtime":1610220020445,"results":"34","hashOfConfig":"25"},{"size":5189,"mtime":1610304382464,"results":"35","hashOfConfig":"25"},{"size":2218,"mtime":1610289923968,"results":"36","hashOfConfig":"25"},{"size":1695,"mtime":1609330750131,"results":"37","hashOfConfig":"25"},{"size":1894,"mtime":1610289923952,"results":"38","hashOfConfig":"25"},{"size":1854,"mtime":1609330750123,"results":"39","hashOfConfig":"25"},{"size":1398,"mtime":1609335296784,"results":"40","hashOfConfig":"25"},{"size":2593,"mtime":1609938598130,"results":"41","hashOfConfig":"25"},{"size":1866,"mtime":1609938598112,"results":"42","hashOfConfig":"25"},{"size":685,"mtime":1609938598114,"results":"43","hashOfConfig":"25"},{"size":1198,"mtime":1609938598113,"results":"44","hashOfConfig":"25"},{"size":90,"mtime":1609150518878,"results":"45","hashOfConfig":"25"},{"size":1981,"mtime":1610303988815,"results":"46","hashOfConfig":"25"},{"size":234,"mtime":1609150518810,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ly2p8e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\index.tsx",[],["105","106"],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\App.tsx",["107","108","109","110"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport WelcomeScreen from './pages/welcome screen';\r\nimport SignInScreen from './pages/sign-in screen';\r\nimport SignUpScreen from './pages/sign-up screen';\r\nimport BottomNavigation from './components/NavBar/navbar';\r\nimport BackwardBtn from './components/Buttons/BackwardBtn';\r\nimport TextField from './components/Inputs/TextField';\r\nimport Card from './components/Layouts/Card';\r\nimport Checkbox from './components/Inputs/Checkbox';\r\nimport { RegularBtn } from './components/Buttons/RegularBtn';\r\nimport CreateProfileScreen from './pages/create-profile-screen';\r\nimport SetNewPasswordScreen from './pages/set-new-password';\r\nimport ReSetNewPasswordScreen from './pages/reset-password';\r\n\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Nav />\r\n                <div style={{ background: 'black' }}>\r\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\r\n                </div>\r\n                <div>\r\n                    <BottomNavigation />\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path=\"/welcome\">\r\n                        <WelcomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-in\">\r\n                        <SignInScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-up\">\r\n                        <SignUpScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/create-profile\">\r\n                        <CreateProfileScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Set-password\">\r\n                        <SetNewPasswordScreen/>\r\n                    </Route> \r\n                    <Route exact path=\"/ReSet-password\">\r\n                        <ReSetNewPasswordScreen/>\r\n                    </Route>                                        \r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/welcome\">Welcome</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-up\">Sign-Up</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-profile\">Create Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Set-password\">Set new password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ReSet-password\">reset password </Link></li>  \r\n                                  </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\index.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\set-new-password\\index.tsx",["111","112","113","114"],"import { colors, Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport './styles.scss';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\n//import Card1 from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\n\r\nexport interface SetNewPassProps {}\r\n\r\nexport default class SetNewPasswordScreen extends React.Component<SetNewPassProps> {\r\n    public render(): JSX.Element {\r\n        function message() {\r\n            alert('your password has been sucessfilly reset!');\r\n        }\r\n        return (\r\n            <html>\r\n                <body>\r\n                    <div className=\"set-password\">\r\n                        <Grid container direction=\"column\" xs={12} alignItems=\"center\" style={{ padding: '16px' }}>\r\n                        <SetpasswordHeader/>\r\n                       </Grid>\r\n                        <Card background=\"#FFFFFF\">\r\n                           <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                           <br/><br/><br/><br/><br/><br/>\r\n                                 <form>\r\n                                    <Setpasswordtextbox/>\r\n                                    <Setpassworditem/>\r\n                                    <br/>\r\n                                 </form>\r\n                                    <Setpasswordbutton/>\r\n                            </Grid>                            \r\n                        </Card>\r\n                        <br/>\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nconst SetpasswordHeader = () => {\r\n    return (\r\n        <Typography variant=\"h3\" align=\"left\" style={{ fontWeight: 'bolder' }}>\r\n        set a{' '}\r\n        <span style={{ color: 'orange' }}>\r\n            new <br></br>password!\r\n        </span>\r\n    </Typography>\r\n\r\n    );};\r\n  \r\n\r\n    const Setpasswordbutton=()=>{\r\n        return(\r\n            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n            <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                Set password\r\n            </RegularBtn>\r\n          </Grid>\r\n        );\r\n    };\r\n\r\n    const Setpasswordtextbox=()=>{\r\n        return(\r\n        <Grid\r\n            item\r\n            container\r\n            spacing={3}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item xs={12}>\r\n                <PasswordField> </PasswordField>\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField label=\"Confirm Password\" />\r\n            </Grid>\r\n        </Grid>\r\n);\r\n    };\r\n\r\n    const Setpassworditem=()=>{\r\n       return(<Grid item container spacing={3}>\r\n        <Grid\r\n            item\r\n            xs={2}\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ verticalAlign: 'true' }}\r\n        >\r\n            \r\n        </Grid>\r\n        <Grid\r\n            item\r\n            xs={10}\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n        ></Grid>\r\n    </Grid>\r\n);\r\n};","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\reset-password\\index.tsx",["115","116","117"],"import { colors, Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport './styles.scss';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\n//import Card1 from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nexport interface ReSetNewPassProps {}\r\n\r\nexport default class ReSetNewPasswordScreen extends React.Component<ReSetNewPassProps> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <html>\r\n                <body>\r\n                    <div className=\"set-password\">\r\n                        <Grid container direction=\"column\" xs={12} alignItems=\"center\" style={{ padding: '16px' }}>\r\n                        <ReSetpasswordHeader/>                       </Grid>\r\n                        <Card background=\"#FFFFFF\">\r\n                           <Grid container spacing={8} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                               <ReSetpasswordCardHeader/>\r\n                                 <form>\r\n                                    <ReSetpasswordtextbox/>\r\n                                 \r\n                                    <br/>\r\n                                 </form>\r\n                                    <ReSetpasswordbutton/>\r\n                            </Grid>                            \r\n                        </Card>\r\n                        <br/>\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nconst ReSetpasswordHeader = () => {\r\n    return (\r\n        <Typography variant=\"h3\" align=\"left\" style={{ fontWeight: 'bolder' }}>\r\n        Reset your{' '}\r\n        <span style={{ color: 'orange' }}>\r\n             <br></br>password\r\n        </span>\r\n    </Typography>\r\n\r\n    );};\r\n    const ReSetpasswordCardHeader = () => {\r\n        return (\r\n            <Grid item>\r\n            <Typography variant=\"h5\" style={{ color: 'black', fontWeight: 'unset' }}>\r\n                We just want to Confirm your identity...\r\n            </Typography>\r\n        </Grid>\r\n\r\n        );};    \r\n\r\n    const ReSetpasswordbutton=()=>{\r\n        return(\r\n            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center' }}>\r\n            <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                Send me a link!\r\n            </RegularBtn>\r\n          </Grid>\r\n        );\r\n    };\r\n\r\n    const ReSetpasswordtextbox=()=>{\r\n        return(\r\n        <Grid\r\n            item\r\n            container\r\n            spacing={3}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item xs={12}>\r\n                 <TextField label=\"Email\"> </TextField>\r\n            </Grid>\r\n        </Grid>\r\n);\r\n    };\r\n\r\n  ","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport firebase from '../../firebase';\r\nimport app from 'firebase/app';\r\nimport SignUpScreen from '../sign-up screen/index';\r\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\r\nimport WhiteLogo from './WhiteLogo.svg';\r\nimport googleButton from './googleButton.svg';\r\n// import background from './welcome-pg.png';\r\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { Widgets } from '@material-ui/icons';\r\ninterface WelcomeProps {}\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//     createStyles({\r\n//         root: {\r\n//             flexGrow: 1,\r\n//         },\r\n//         paper: {\r\n//             padding: theme.spacing(2),\r\n//             textAlign: 'center',\r\n//             color: theme.palette.text.secondary,\r\n//         },\r\n//     }),\r\n// );\r\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\r\n    // const classes = useStyles();\r\n/* var config={\r\n   apiKey:\"\",\r\n   authDomain:\"\",\r\n   databaseURL:\"\",\r\n   project:\"\",\r\n   storeageBucket:\"\",\r\n   messageingSenderid:\"\"\r\n};*/\r\nconst GoogleSignin=()=>{\r\n    const fb = new firebase()\r\n\r\n        const provider = fb.getGoogleProvider()\r\n    fb.auth.signInWithPopup(provider).then(function(result){\r\n        console.log(result)\r\n        console.log(\"Google account is linked\")\r\n    }).catch(function(err){\r\n     console.log(err)\r\n     console.log(\"failed to login\")\r\n    })\r\n}\r\n\r\nconst Submit =()=>{\r\n   alert('error')\r\n}\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDIvlHZc4WMB_6IibnMOQc-_D9M2noB57w\",\r\n    authDomain: \"geopick-db.firebaseapp.com\",\r\n    projectId: \"geopick-db\",\r\n    storageBucket: \"geopick-db.appspot.com\",\r\n    messagingSenderId: \"165396932142\",\r\n    appId: \"1:165396932142:web:e39c9dcd9e80c5d4cfa1bf\",\r\n    measurementId: \"G-XS2DD50LZW\"\r\n  };\r\n\r\n\r\n    return (\r\n        <html>\r\n            <body>\r\n                {/* <img src ={background} width='auto'> */}\r\n                <div className=\"welcomepg\">\r\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid item>\r\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" align=\"center\">\r\n                                <span>A tool for</span>\r\n                                <br></br>shutterbugs!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid\r\n                                item\r\n                                xs={2}\r\n                                alignContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ verticalAlign: 'true' }}\r\n                            ></Grid>\r\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                                <Grid item>\r\n                                    <button onClick={GoogleSignin} className=\"g-btn\">\r\n                                        <img src={googleButton} width=\"22px\" alt=\"Google\" />\r\n                                        <p className=\"text\">Sign in</p>\r\n                                    </button>\r\n                                    <br></br>\r\n                                    <hr style={{ width: '500px' }} />\r\n                                    <div style={{ paddingBottom: '5%' }}>\r\n                                        <a href=\"/sign-up\">\r\n                                            <button className=\"sign-btn\">Sign up now!</button>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* <br></br> */}\r\n                                    <div style={{ paddingBottom: '20%' }}>\r\n                                        <a href=\"/sign-in\">\r\n                                            <button className=\"sign-btn1\">Sign in</button>\r\n                                        </a>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </body>\r\n        </html>\r\n    );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\index.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx",["137"],"import React from 'react';\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\n// const styles = {\r\n//     root: {\r\n//         background: 'red',\r\n//         borderRadius: 20,\r\n//         borderColor: 'red',\r\n//     },\r\n//     notched: {\r\n//         borderColor: 'red',\r\n//     },\r\n// };\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\nfunction TextField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\r\n    return (\r\n        <Box display=\"flex\">\r\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\r\n                <CssTextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        ...InputProps,\r\n                        disableUnderline: true,\r\n                    }}\r\n                    {...props}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default TextField;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx",["138","139","140","141","142"],"import { Checkbox as MatCheckbox, makeStyles, createStyles, Theme, withStyles, CheckboxProps } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { RadioButtonUncheckedOutlined, RadioButtonCheckedRounded } from '@material-ui/icons';\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//     createStyles({\r\n//         root: {\r\n//             color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n//             '&$checked': {\r\n//                 color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n//             },\r\n//         },\r\n//     }),\r\n// );\r\n\r\nconst box = (theme: Theme) => ({\r\n    root: {\r\n        color: 'red',\r\n        '&$checked': {\r\n            color: 'red',\r\n        },\r\n    },\r\n    checked: {},\r\n});\r\n\r\nconst Custombox = withStyles(box)((props: CheckboxProps) => (\r\n    <MatCheckbox\r\n        icon={<RadioButtonUncheckedOutlined />}\r\n        checkedIcon={<RadioButtonCheckedRounded />}\r\n        color=\"default\"\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst WhiteCheckbox = withStyles({\r\n    root: {\r\n        color: 'white',\r\n        '&$checked': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: CheckboxProps) => <MatCheckbox color=\"default\" {...props} />);\r\n\r\nfunction Checkbox(props: CheckboxProps) {\r\n    const [checked, setChecked] = React.useState(false);\r\n    return <WhiteCheckbox />;\r\n}\r\n\r\nexport default Checkbox;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\UsernameField.tsx",["143","144","145","146","147"],"import React from 'react';\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport Tick from './Tick.svg';\r\nimport cross from './cross.svg';\r\n\r\n// const styles = {\r\n//     root: {\r\n//         background: 'red',\r\n//         borderRadius: 20,\r\n//         borderColor: 'red',\r\n//     },\r\n//     notched: {\r\n//         borderColor: 'red',\r\n//     },\r\n// };\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\ninterface State {\r\n    username: string;\r\n    acceptableUsername: boolean;\r\n}\r\n\r\nexport default function UsernameField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\r\n    const [values, setValues] = React.useState<State>({\r\n        username: '',\r\n        acceptableUsername: false,\r\n    });\r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n    return (\r\n        <Box display=\"flex\">\r\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\r\n                <CssTextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        ...InputProps,\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                {values.acceptableUsername ? <img src={Tick} /> : <img src={cross} />}\r\n                            </InputAdornment>\r\n                        ),\r\n                        disableUnderline: true,\r\n                    }}\r\n                    {...props}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",["148","149"],"import React from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport UploadButton from './AddAvatarIcon';\r\nimport Avatars from './Avatar';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function BadgeAvatar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Badge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                badgeContent={<UploadButton />}\r\n            >\r\n                <Avatars />\r\n            </Badge>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",["150"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAvatar from './AddAvatar.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nexport default function UploadButton() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n            <label htmlFor=\"icon-button-file\">\r\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                    <SmallAvatar alt=\"Add Avatar Icon\" src={AddAvatar} />\r\n                </IconButton>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\context.ts",[],["151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":19},{"ruleId":"157","severity":1,"message":"161","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":17},{"ruleId":"157","severity":1,"message":"162","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":12},{"ruleId":"157","severity":1,"message":"163","line":11,"column":8,"nodeType":"159","messageId":"160","endLine":11,"endColumn":16},{"ruleId":"157","severity":1,"message":"164","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":17},{"ruleId":"157","severity":1,"message":"165","line":15,"column":18,"nodeType":"159","messageId":"160","endLine":15,"endColumn":25},{"ruleId":"157","severity":1,"message":"164","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":16},{"ruleId":"157","severity":1,"message":"166","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"167","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":11},{"ruleId":"157","severity":1,"message":"168","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"157","severity":1,"message":"169","line":6,"column":27,"nodeType":"159","messageId":"160","endLine":6,"endColumn":33},{"ruleId":"157","severity":1,"message":"170","line":6,"column":35,"nodeType":"159","messageId":"160","endLine":6,"endColumn":40},{"ruleId":"157","severity":1,"message":"171","line":6,"column":42,"nodeType":"159","messageId":"160","endLine":6,"endColumn":48},{"ruleId":"157","severity":1,"message":"172","line":6,"column":50,"nodeType":"159","messageId":"160","endLine":6,"endColumn":54},{"ruleId":"157","severity":1,"message":"173","line":6,"column":56,"nodeType":"159","messageId":"160","endLine":6,"endColumn":69},{"ruleId":"157","severity":1,"message":"174","line":10,"column":10,"nodeType":"159","messageId":"160","endLine":10,"endColumn":22},{"ruleId":"157","severity":1,"message":"175","line":10,"column":30,"nodeType":"159","messageId":"160","endLine":10,"endColumn":40},{"ruleId":"157","severity":1,"message":"176","line":10,"column":42,"nodeType":"159","messageId":"160","endLine":10,"endColumn":47},{"ruleId":"157","severity":1,"message":"177","line":11,"column":8,"nodeType":"159","messageId":"160","endLine":11,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":17},{"ruleId":"157","severity":1,"message":"166","line":14,"column":8,"nodeType":"159","messageId":"160","endLine":14,"endColumn":21},{"ruleId":"157","severity":1,"message":"162","line":15,"column":8,"nodeType":"159","messageId":"160","endLine":15,"endColumn":12},{"ruleId":"157","severity":1,"message":"178","line":16,"column":10,"nodeType":"159","messageId":"160","endLine":16,"endColumn":20},{"ruleId":"157","severity":1,"message":"179","line":17,"column":10,"nodeType":"159","messageId":"160","endLine":17,"endColumn":17},{"ruleId":"157","severity":1,"message":"180","line":55,"column":7,"nodeType":"159","messageId":"160","endLine":55,"endColumn":13},{"ruleId":"157","severity":1,"message":"181","line":58,"column":5,"nodeType":"159","messageId":"160","endLine":58,"endColumn":19},{"ruleId":"157","severity":1,"message":"182","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"175","line":1,"column":35,"nodeType":"159","messageId":"160","endLine":1,"endColumn":45},{"ruleId":"157","severity":1,"message":"174","line":1,"column":47,"nodeType":"159","messageId":"160","endLine":1,"endColumn":59},{"ruleId":"157","severity":1,"message":"183","line":26,"column":7,"nodeType":"159","messageId":"160","endLine":26,"endColumn":16},{"ruleId":"157","severity":1,"message":"184","line":46,"column":12,"nodeType":"159","messageId":"160","endLine":46,"endColumn":19},{"ruleId":"157","severity":1,"message":"185","line":46,"column":21,"nodeType":"159","messageId":"160","endLine":46,"endColumn":31},{"ruleId":"157","severity":1,"message":"182","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"186","line":58,"column":11,"nodeType":"159","messageId":"160","endLine":58,"endColumn":23},{"ruleId":"157","severity":1,"message":"187","line":62,"column":11,"nodeType":"159","messageId":"160","endLine":62,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":75,"column":62,"nodeType":"190","endLine":75,"endColumn":80},{"ruleId":"188","severity":1,"message":"189","line":75,"column":83,"nodeType":"190","endLine":75,"endColumn":102},{"ruleId":"157","severity":1,"message":"191","line":8,"column":7,"nodeType":"159","messageId":"160","endLine":8,"endColumn":18},{"ruleId":"157","severity":1,"message":"192","line":37,"column":7,"nodeType":"159","messageId":"160","endLine":37,"endColumn":18},{"ruleId":"157","severity":1,"message":"193","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"153","replacedBy":"194"},{"ruleId":"155","replacedBy":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"@typescript-eslint/no-unused-vars","'BackwardBtn' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'colors' is defined but never used.","'message' is defined but never used.","'PasswordField' is defined but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'RegularBtn' is defined but never used.","'Widgets' is defined but never used.","'Submit' is assigned a value but never used.","'firebaseConfig' is assigned a value but never used.","'clsx' is defined but never used.","'Custombox' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledBadge' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'Button' is defined but never used.",["196"],["197"],"no-global-assign","no-unsafe-negation"]