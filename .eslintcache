[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"5","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"6","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"7","/home/ms374/GeoPick/src/pages/view-points-screen/points.tsx":"8","/home/ms374/GeoPick/src/pages/search-page/index.tsx":"9","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx":"10","/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx":"11","/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx":"12","/home/ms374/GeoPick/src/pages/profile-screen/userPage.tsx":"13","/home/ms374/GeoPick/src/pages/edit-profile/editProfile.tsx":"14","/home/ms374/GeoPick/src/components/Inputs/LocationPicker.tsx":"15","/home/ms374/GeoPick/src/pages/upload-image/index.tsx":"16","/home/ms374/GeoPick/src/pages/terms/index.tsx":"17","/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx":"18","/home/ms374/GeoPick/src/pages/notificationset/index.tsx":"19","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"20","/home/ms374/GeoPick/src/pages/accessSetting/index.tsx":"21","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"22","/home/ms374/GeoPick/src/firebase/firebase.ts":"23","/home/ms374/GeoPick/src/pages/post-view/index.tsx":"24","/home/ms374/GeoPick/src/components/Layouts/userFeed.tsx":"25","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"26","/home/ms374/GeoPick/src/components/Display/profileOverview.tsx":"27","/home/ms374/GeoPick/src/firebase/index.ts":"28","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"29","/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx":"30","/home/ms374/GeoPick/src/firebase/db.ts":"31","/home/ms374/GeoPick/src/firebase/auth.ts":"32","/home/ms374/GeoPick/src/components/Display/GTLexpanded.tsx":"33","/home/ms374/GeoPick/src/components/Display/sharePost.tsx":"34","/home/ms374/GeoPick/src/components/Display/avatarSmall.tsx":"35","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"36","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"37","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx":"38","/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx":"39","/home/ms374/GeoPick/src/components/Inputs/tags.tsx":"40","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"41","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"42","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"43","/home/ms374/GeoPick/src/components/Layouts/feed.tsx":"44","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx":"45"},{"size":931,"mtime":1609151726850,"results":"46","hashOfConfig":"47"},{"size":467,"mtime":1609151726915,"results":"48","hashOfConfig":"47"},{"size":6297,"mtime":1614368495704,"results":"49","hashOfConfig":"47"},{"size":787,"mtime":1611505838448,"results":"50","hashOfConfig":"47"},{"size":4021,"mtime":1614443818696,"results":"51","hashOfConfig":"47"},{"size":1610,"mtime":1612203673126,"results":"52","hashOfConfig":"47"},{"size":3878,"mtime":1612203673107,"results":"53","hashOfConfig":"47"},{"size":2607,"mtime":1613826750503,"results":"54","hashOfConfig":"47"},{"size":5579,"mtime":1614419855403,"results":"55","hashOfConfig":"47"},{"size":5079,"mtime":1612203673141,"results":"56","hashOfConfig":"47"},{"size":4502,"mtime":1614444775121,"results":"57","hashOfConfig":"47"},{"size":5316,"mtime":1613728752202,"results":"58","hashOfConfig":"47"},{"size":4949,"mtime":1614421824632,"results":"59","hashOfConfig":"47"},{"size":5763,"mtime":1613826750410,"results":"60","hashOfConfig":"47"},{"size":956,"mtime":1614368376734,"results":"61","hashOfConfig":"47"},{"size":9170,"mtime":1614444827284,"results":"62","hashOfConfig":"47"},{"size":28118,"mtime":1613384997588,"results":"63","hashOfConfig":"47"},{"size":3124,"mtime":1614368376812,"results":"64","hashOfConfig":"47"},{"size":2828,"mtime":1614368376834,"results":"65","hashOfConfig":"47"},{"size":5261,"mtime":1613728752219,"results":"66","hashOfConfig":"47"},{"size":4546,"mtime":1614368376784,"results":"67","hashOfConfig":"47"},{"size":8428,"mtime":1614424760190,"results":"68","hashOfConfig":"47"},{"size":2685,"mtime":1614444664808,"results":"69","hashOfConfig":"47"},{"size":15027,"mtime":1613728752165,"results":"70","hashOfConfig":"47"},{"size":1958,"mtime":1614423445043,"results":"71","hashOfConfig":"47"},{"size":1407,"mtime":1612203672914,"results":"72","hashOfConfig":"47"},{"size":3723,"mtime":1614064281417,"results":"73","hashOfConfig":"47"},{"size":132,"mtime":1611505837183,"results":"74","hashOfConfig":"47"},{"size":1471,"mtime":1611505836913,"results":"75","hashOfConfig":"47"},{"size":10915,"mtime":1614420141618,"results":"76","hashOfConfig":"47"},{"size":262,"mtime":1611505837158,"results":"77","hashOfConfig":"47"},{"size":940,"mtime":1611505837137,"results":"78","hashOfConfig":"47"},{"size":2872,"mtime":1614368376683,"results":"79","hashOfConfig":"47"},{"size":3227,"mtime":1612203672846,"results":"80","hashOfConfig":"47"},{"size":1435,"mtime":1614024296257,"results":"81","hashOfConfig":"47"},{"size":864,"mtime":1612203672787,"results":"82","hashOfConfig":"47"},{"size":1976,"mtime":1611685133978,"results":"83","hashOfConfig":"47"},{"size":2656,"mtime":1612203672979,"results":"84","hashOfConfig":"47"},{"size":3295,"mtime":1613728748459,"results":"85","hashOfConfig":"47"},{"size":2468,"mtime":1613749717836,"results":"86","hashOfConfig":"47"},{"size":1756,"mtime":1611505836996,"results":"87","hashOfConfig":"47"},{"size":656,"mtime":1613941009790,"results":"88","hashOfConfig":"47"},{"size":1239,"mtime":1613214007813,"results":"89","hashOfConfig":"47"},{"size":1443,"mtime":1613150252524,"results":"90","hashOfConfig":"47"},{"size":2811,"mtime":1613215445548,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1j1dccp",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},"/home/ms374/GeoPick/src/index.tsx",[],["196","197"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",[],"/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/home-screen/home.tsx",["198","199","200"],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/home/ms374/GeoPick/src/pages/view-points-screen/points.tsx",["201","202","203"],"import * as React from 'react';\nimport { Component } from 'react';\nimport { Avatar, Box, Button, Card, CardHeader, Grid, Typography } from '@material-ui/core';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nexport interface ViewPointsProps {}\n\nexport interface ViewPointsState {}\n\nclass ViewPoints extends React.Component<ViewPointsProps, ViewPointsState> {\n    handleonclick() {\n        console.log('Share with friends!');\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', paddingTop: '10px', paddingBottom: '50px' }}>\n                <img\n                    src={WhiteLogo}\n                    alt=\"GeoPicK\"\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\n                />\n                <Card\n                    style={{\n                        height: '80%',\n                        width: '30em',\n                        maxWidth: '70%',\n                        margin: 'auto',\n                        padding: '20px',\n                        borderRadius: '50px',\n                    }}\n                >\n                    <Avatar\n                        src={'avatar comes here'}\n                        alt={'username comes here'}\n                        style={{ margin: 'auto', width: '100px', height: '100px', marginBottom: '20px' }}\n                    ></Avatar>\n                    <Typography variant=\"h5\" style={{ color: '#f56920' }}>\n                        {'username comes here'}\n                    </Typography>\n                    <Box m={5}></Box>\n\n                    <Typography variant=\"h6\">Congratulations, you have</Typography>\n                    <Typography variant=\"h1\" style={{ fontWeight: 'bolder' }}>\n                        {'10000'}\n                    </Typography>\n                    <Box m={-2}></Box>\n                    <Typography variant=\"h3\" style={{ color: '#f56920' }}>\n                        points\n                    </Typography>\n                    <Box m={3}></Box>\n                </Card>\n                <Button\n                    onClick={this.handleonclick}\n                    style={{\n                        background: '#f56920',\n                        color: '#fafafa',\n                        padding: '10px 20px 10px 20px',\n                        margin: 'auto',\n                        borderRadius: '20px',\n                        marginTop: '20px',\n                    }}\n                >\n                    Share it with your friends\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default ViewPoints;\n","/home/ms374/GeoPick/src/pages/search-page/index.tsx",["204","205","206"],"/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx",[],"/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx",["207"],"import * as React from 'react';\nimport Card from '../../components/Layouts/Card';\nimport { Component } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './styles.scss';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport NotificationImportantRoundedIcon from '@material-ui/icons/NotificationImportantRounded';\nimport AccessibilityNewRoundedIcon from '@material-ui/icons/AccessibilityNewRounded';\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport { Link } from 'react-router-dom';\nexport interface SettingsMenuProps {}\nexport interface SettingsMenuState {\n    user: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            // backgroundColor: theme.palette.background.paper,\n            backgroundColor: '#fafafa',\n        },\n    }),\n);\n\nconst SettingsMenu = () => {\n    const classes = useStyles();\n    return (\n        <div style={{ width: '100%', height: '100%' }}>\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                <ListItem button>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccountCircleRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Account Settings\" />\n                </ListItem>\n                <Divider />\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <NotificationImportantRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Notification Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccessibilityNewRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Accessibility Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <HelpRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Help and Feedback\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <GavelRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Terms and Conditions\" />\n                </ListItem>\n            </List>\n            <Box m={5} />\n            <div>\n                <Typography variant=\"body1\" style={{ color: '#1b1b1b', textAlign: 'center' }}>\n                    Designed <span style={{ color: '#f56920' }}>& </span> Developed by<br></br>The Geo\n                    <span style={{ color: '#f56920' }}>Pic</span>K team.\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default class SettingsMenuScreen extends Component<SettingsMenuProps, SettingsMenuState> {\n    constructor(SettingsMenuProps: any) {\n        super(SettingsMenuProps);\n        this.state = {\n            user: checkUserLoggedIn(),\n        };\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n                <Toolbar>\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n                    <IconButton edge=\"end\">\n                        <Avatar alt={this.state.user.User_name} src={this.state.user.Avatar} />\n                    </IconButton>\n                </Toolbar>\n                <div style={{ color: '#fafafa' }}>\n                    <Card background=\"#fafafa\" title=\"Settings\" split={1}>\n                        <div style={{ color: 'black' }}>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <SettingsMenu />\n                            </Grid>\n                        </div>\n                    </Card>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/profile-screen/userPage.tsx",["208","209","210","211","212","213","214","215","216"],"/home/ms374/GeoPick/src/pages/edit-profile/editProfile.tsx",["217"],"import { Avatar, Box, Button, Card, CardContent, Divider, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport TextField from '../../components/Inputs/TextField';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport OccupationSelect from '../../components/Inputs/occupation';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\n\nexport interface EditProfileProps {}\n\nexport interface EditProfileState {}\n\nclass EditProfile extends Component<EditProfileProps, EditProfileState> {\n    signOut = () => {\n        auth.doSignOut();\n    };\n\n    handleonclickSubmit() {\n        console.log('Profile edit changes!');\n    }\n    handleonclickChangePassword() {\n        console.log('Go to change password screen!');\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b', height: 'auto', paddingBottom: '5em' }}>\n                <img\n                    src={WhiteLogo}\n                    alt=\"GeoPicK\"\n                    style={{ width: '200px', height: '66px', margin: 'auto', paddingBottom: '1em' }}\n                />\n                <Card\n                    style={{\n                        background: '#1b1b1b',\n                        marginLeft: '15px',\n                        marginRight: '15px',\n                        border: '3px solid #f56920',\n                        borderRadius: '20px',\n                        marginBottom: '20px',\n                        maxWidth: '600px',\n                        margin: 'auto',\n                        paddingBottom: '1em',\n                    }}\n                >\n                    <Avatar\n                        style={{\n                            float: 'right',\n                            width: '120px',\n                            height: '120px',\n                            marginRight: '20px',\n                            marginTop: '20px',\n                        }}\n                    ></Avatar>\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\n                        {/* <Grid container direction=\"column\">\n                    <Grid item> */}\n\n                        <Typography variant=\"h3\" style={{ color: '#fafafa' }}>\n                            Hi<br></br>\n                            {\n                                <Typography variant=\"h4\" style={{ color: '#f56920' }}>\n                                    'mo.kvs_'\n                                </Typography>\n                            }\n                            {/* The username comes here */}\n                        </Typography>\n                    </CardContent>\n                    <div style={{ margin: '20px', textAlign: 'center' }}>\n                        <Box m={2}></Box>\n                        <TextField label=\"Name\" color=\"primary\"></TextField>\n                        <Box m={2}></Box>\n                        <TextField\n                            label=\"Something about yourself...\"\n                            color=\"primary\"\n                            multiline\n                            rows={1}\n                            rowsMax={4}\n                        ></TextField>\n                    </div>\n                    <Box m={3}></Box>\n                    <Button\n                        onClick={this.handleonclickSubmit}\n                        style={{\n                            background: '#f56920',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                            // marginBottom: '25px',\n                        }}\n                    >\n                        Submit changes\n                    </Button>\n\n                    <Box m={3}></Box>\n                    <Divider style={{ background: '#f56920' }} />\n                    <Box m={2}></Box>\n                    <Typography variant=\"body2\" style={{ color: '#fafafa' }}>\n                        looking for something else?\n                    </Typography>\n                    <Box m={-1}></Box>\n                    <Button\n                        onClick={this.handleonclickChangePassword}\n                        style={{\n                            // background: '#f56920',\n                            border: '3px solid #f56920',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                            // marginBottom: '5px',\n                        }}\n                    >\n                        Change Password\n                    </Button>\n                    <br></br>\n                    <Box m={-1.5}></Box>\n                    <Button\n                        style={{\n                            background: '#2f4858',\n                            color: '#fafafa',\n                            padding: '10px 20px 10px 20px',\n                            margin: 'auto',\n                            borderRadius: '20px',\n                            marginTop: '20px',\n                        }}\n                        onClick={this.signOut}\n                    >\n                        <Link to=\"/welcome\">\n                            <Typography variant=\"button\" style={{ color: '#fafafa' }}>\n                                Sign Out\n                            </Typography>\n                        </Link>\n                    </Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default EditProfile;\n","/home/ms374/GeoPick/src/components/Inputs/LocationPicker.tsx",["218","219","220"],"import React from 'react';\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport TextField from './TextField';\n\nfunction LocationPicker({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\n    return (\n        <Autocomplete\n            id=\"combo-box-demo\"\n            options={countries}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n        />\n    );\n}\n\nconst countries = [\n    { code: 'AD', label: 'Andorra', phone: '376' },\n    { code: 'AE', label: 'United Arab Emirates', phone: '971' },\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\n    { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\n];\n\nexport default LocationPicker;\n","/home/ms374/GeoPick/src/pages/upload-image/index.tsx",["221"],"/home/ms374/GeoPick/src/pages/terms/index.tsx",[],"/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx",[],"/home/ms374/GeoPick/src/pages/notificationset/index.tsx",["222","223","224","225","226","227","228","229","230"],"import * as React from 'react';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Card from '../../components/Layouts/Card';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nexport interface NotificationProps {}\n\nconst OrangeSwitch = withStyles({\n    switchBase: {\n        color: '#fafafa',\n        '&$checked': {\n            color: '#F56920',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#f56920',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst WhiteTypography = withStyles({\n    root: {\n        color: '#FAFAFA',\n        textAlign: 'left',\n    },\n})(Typography);\n\nexport default function Notification() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n            <Toolbar>\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n            </Toolbar>\n            <div style={{ color: '#fafafa' }}>\n                <Card background=\"#202020\" title=\"Notification Settings\" split={1}>\n                    <div style={{ color: 'black' }}>\n                        {/* <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\"> */}\n                        <WhiteTypography>\n                            Push notification\n                            <Box m={-3.7}></Box>\n                            <FormGroup style={{ float: 'right' }}>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedA}\n                                            onChange={handleChange}\n                                            name=\"checkedA\"\n                                        />\n                                    }\n                                    label=\"\"\n                                />\n                            </FormGroup>\n                        </WhiteTypography>\n                        {/* </Grid> */}\n                    </div>\n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",[],"/home/ms374/GeoPick/src/pages/accessSetting/index.tsx",["231","232","233","234","235","236","237","238","239"],"import * as React from 'react';\nimport './styles.scss';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Card from '../../components/Layouts/Card';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nexport interface AccessibilityProps {}\n\nconst OrangeSwitch = withStyles({\n    switchBase: {\n        color: '#fafafa',\n        '&$checked': {\n            color: '#F56920',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#f56920',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst WhiteTypography = withStyles({\n    root: {\n        color: '#FAFAFA',\n        textAlign: 'left',\n    },\n})(Typography);\n\nexport default function Accessibility() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n            <Toolbar>\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n            </Toolbar>\n            <div style={{ color: '#fafafa' }}>\n                <Card background=\"#202020\" title=\"Accessibility Settings\" split={1}>\n                    <div style={{ color: 'black' }}>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Dark Mode\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedA}\n                                            onChange={handleChange}\n                                            name=\"checkedA\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                        <br></br>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Change to mono colors\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedB}\n                                            onChange={handleChange}\n                                            name=\"checkedB\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                        <br></br>\n                        <FormGroup>\n                            <WhiteTypography>\n                                Increase overall text size\n                                <Box m={-3.7}></Box>\n                                <FormControlLabel\n                                    control={\n                                        <OrangeSwitch\n                                            checked={state.checkedC}\n                                            onChange={handleChange}\n                                            name=\"checkedC\"\n                                        />\n                                    }\n                                    label=\"\"\n                                    style={{ float: 'right' }}\n                                />\n                            </WhiteTypography>\n                        </FormGroup>\n                    </div>\n                </Card>\n            </div>\n            <br />\n        </div>\n    );\n}\n","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",[],"/home/ms374/GeoPick/src/firebase/firebase.ts",[],"/home/ms374/GeoPick/src/pages/post-view/index.tsx",["240"],"/* eslint-disable no-lone-blocks */\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\nimport * as React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\nimport fb from 'firebase/app';\nimport { Component } from 'react';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SharePost from '../../components/Display/sharePost';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nexport interface PostViewState {\n    newComment: string;\n    user: any;\n    Image: string;\n    caption: string;\n    likes_count: number;\n    post_time: string;\n    user_name: string;\n    favourited: boolean;\n    post_uid: string;\n    post_user: any;\n    comments: any;\n}\n\nexport interface PostViewProps {\n    state: string;\n}\n\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\n    constructor(PostViewProps: any) {\n        super(PostViewProps);\n        this.state = {\n            favourited: false,\n            user: {},\n            Image: '',\n            caption: '',\n            likes_count: 0,\n            post_time: '',\n            user_name: '',\n            newComment: '',\n            post_uid: '',\n            post_user: {},\n            comments: [],\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        const auth = checkUserLoggedIn();\n        // console.log(pid);\n        if (auth === undefined) {\n        } else {\n            fb.firestore()\n                .collection('users')\n                .doc(auth.uid)\n                .get()\n                .then((querySnapshot) => {\n                    const data = querySnapshot.data();\n                    // console.log(data);\n                    this.setState({\n                        user: data,\n                    });\n                });\n        }\n\n        await fb\n            .firestore()\n            .collection('Posts')\n            .doc(pid)\n            .get()\n            .then((doc) => {\n                // console.log(doc.data());\n                const data = doc.data();\n                if (data) {\n                    this.setState({\n                        Image: data.Image,\n                        caption: data.caption,\n                        likes_count: data.likes_count,\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\n                        user_name: data.user_name,\n                        post_uid: data.uid,\n                        comments: data.comments,\n                    });\n                }\n            });\n\n        fb.firestore()\n            .collection('users')\n            .doc(this.state.post_uid)\n            .get()\n            .then((querySnapshot) => {\n                const data = querySnapshot.data();\n                // console.log(data);\n                this.setState({\n                    post_user: data,\n                });\n            });\n\n        this.setState({\n            favourited: false,\n        });\n    }\n\n    handleColorChange = () => {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: increment,\n            });\n            this.setState({\n                likes_count: this.state.likes_count + 1,\n            });\n        } else {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: decrement,\n            });\n            this.setState({\n                likes_count: this.state.likes_count - 1,\n            });\n        }\n    };\n\n    render() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        // console.log(uid);\n        const handleChange = (event: any) => {\n            // console.log(event.target.value);\n            this.setState({\n                newComment: event.target.value as string,\n                // user: checkUserLoggedIn(),\n            });\n        };\n\n        const handleClick = (event: any) => {\n            const FieldValue = fb.firestore.FieldValue;\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\n            fb.firestore()\n                .collection('Posts')\n                .doc(pid)\n                .update({\n                    comments: FieldValue.arrayUnion(comment),\n                    comments_count: fb.firestore.FieldValue.increment(1),\n                });\n            // console.log(`${this.state.user.User_name} : ${comment}`);\n            // console.log(this.state.user);\n            this.setState({\n                comments: [...this.state.comments, comment],\n            });\n        };\n\n        return (\n            <Card\n                style={{\n                    background: '#1b1b1b',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    margin: 'auto',\n                    width: 'auto',\n                    padding: 'auto',\n                }}\n            >\n                <Card\n                    style={{\n                        maxHeight: 800,\n                        maxWidth: 600,\n                        margin: 'auto',\n                        marginBlock: '20px',\n                        background: '#1b1b1b',\n                        borderRadius: '20px',\n                    }}\n                >\n                    <CardHeader\n                        color=\"#fafafa\"\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                alt={this.state.post_user.User_name}\n                                src={this.state.post_user.Avatar}\n                                style={{ backgroundColor: 'auto' }}\n                            >\n                                {this.state.post_user.User_name}\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\n                                <MoreVertIcon />\n                            </IconButton>\n                        }\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\n                        subheader={\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        }\n                        style={{ textAlign: 'left', color: '#fafafa' }}\n                    />\n                    <CardMedia\n                        image={this.state.Image}\n                        title=\"Paella dish\"\n                        style={{\n                            borderRadius: '20px 20px 20px 20px',\n                            height: 0,\n                            paddingTop: '56.25%',\n                            marginLeft: '10px',\n                            marginRight: '10px',\n                        }}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\n                            {this.state.caption}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <SharePost sharedURL={window.location.href} />\n                        </IconButton>\n                        {/* <IconButton\n                className={clsx(classes.expand, {\n                    [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n            >\n                <ExpandMoreIcon />\n            </IconButton> */}\n                    </CardActions>\n                </Card>\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\n                            Latest comments\n                        </Typography>\n                        <ul>\n                            {this.state.comments.map((val: string, index: any) => {\n                                return (\n                                    <li key={index}>\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\n                                            {val}\n                                        </Typography>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </Grid>\n                </Grid>\n                <InputBase\n                    onChange={handleChange}\n                    placeholder=\"Start typing...\"\n                    style={{\n                        width: '80%',\n                        // marginRight: '-12%',\n                        margin: 'auto',\n                        marginTop: '20px',\n                        marginBottom: '20px',\n                        textDecorationColor: '#FAFAFA',\n                        border: '1px solid #FAFAFA',\n                        borderRadius: '10px',\n                        height: '50px',\n                        padding: '10px',\n                        color: '#fafafa',\n                    }}\n                    endAdornment={\n                        <IconButton\n                            onClick={handleClick}\n                            aria-label=\"upload\"\n                            type=\"submit\"\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\n                        >\n                            <PublishRoundedIcon />\n                        </IconButton>\n                    }\n                />\n            </Card>\n        );\n    }\n}\n\n{\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\n                    <Grid\n                        item\n                        justify=\"flex-start\"\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\n                    >\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\n                    </Grid>\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_user.User_name}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\n                        <Card\n                            style={{\n                                color: '#F56920',\n                                borderRadius: '22px',\n                                justifyContent: 'center',\n                            }}\n                            className=\"boxField\"\n                        >\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <br></br>\n                <Grid container spacing={2} justify=\"center\">\n                    <Container>\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\n                            <img\n                                src={this.state.Image}\n                                alt=\"not loading...\"\n                                // width= \"80%\"\n                                width=\"600px\"\n                                height=\"500px\"\n                                className=\"postImage\"\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\n                            ></img>\n                        </div>\n                    </Container>\n                </Grid>\n                <br />\n                <Grid container spacing={2} justify=\"center\">\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <span>{this.state.caption}</span>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\n                >\n                    <Grid item>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {this.state.likes_count}\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <SharePost sharedURL={window.location.href} />\n                    </Grid>\n                </Grid> */\n}\n","/home/ms374/GeoPick/src/components/Layouts/userFeed.tsx",["241"],"/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",[],"/home/ms374/GeoPick/src/components/Display/profileOverview.tsx",["242","243","244","245","246","247","248"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAvatar from './AddAvatar.png';\n// import Avatar from '@material-ui/core/Avatar';\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\nimport { Avatar, Button, Card, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport AvatarSmall from '../../components/Display/avatarSmall';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst SmallAvatar = withStyles((theme) => ({\n    root: {\n        width: 22,\n        height: 22,\n        border: `2px solid ${theme.palette.background.paper}`,\n    },\n}))(Avatar);\n\nexport default function ProfileOverview(props: any) {\n    const classes = useStyles();\n\n    return (\n        <Card\n                    style={{\n                        background: '#1b1b1b',\n                        marginLeft: '15px',\n                        marginRight: '15px',\n                        border: '3px solid #f56920',\n                        borderRadius: '20px',\n                    }}\n                >\n                    <CardContent style={{ textAlign: 'left', padding: '50px 10px 50px 10px' }}>\n                        {/* <Grid container direction=\"column\">\n                            <Grid item> */}\n                        {/* <Avatar\n                            style={{ float: 'right', width: '18vw', height: '18vw', marginRight: '20px' }}\n                        ></Avatar> */}\n                        <Grid style ={{float: 'right'}}>\n                            <AvatarSmall uid = {props.uid} User_name = {props.User_name} Avatar = {props.Avatar} Size = {props.Size} />\n                        </Grid>\n                        <Typography style={{ color: '#fafafa', fontSize: '3vw' }}>\n                            Hi,<br></br>\n                            </Typography>\n                        <Typography style={{ color: '#f56920', fontSize: '2vw' }}>\n                                {props.User_name}\n                            </Typography>\n                    \n                        \n                        \n\n                        {/* </Grid>\n                            <Grid item></Grid> */}\n                        {/* </Grid> */}\n                        <br></br>\n                        {/* <Card style={{ width: 'fit-content', height: 'fit-content', padding: '-5px' }}>\n                            <CardContent> */}\n                        <Button style={{ padding: '1px' }}>\n                            <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                                <span style={{ color: '#fafafa' }}>2</span>\n                                <br></br>\n                                <span style={{ color: '#f56920' }}>posts</span>\n                            </Typography>\n                            {/* Number of posts by user */}\n                        </Button>\n\n                        <Button style={{ marginLeft: '10px', padding: '1px' }}>\n                            <Typography variant=\"button\" style={{ justifyContent: 'center' }}>\n                                <span style={{ color: '#fafafa' }}>{props.User.GamePoint}</span>\n                                <br></br>\n                                <span style={{ color: '#f56920' }}>points</span>\n                            </Typography>\n                            {/* Number of posts by user */}\n                        </Button>\n                    </CardContent>\n                </Card>\n    );\n}\n","/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx",["249","250"],"/home/ms374/GeoPick/src/firebase/db.ts",[],"/home/ms374/GeoPick/src/firebase/auth.ts",[],"/home/ms374/GeoPick/src/components/Display/GTLexpanded.tsx",["251"],"import { Box, Button, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport GTLicon from '../Inputs/The pin.svg';\nexport interface GTLexpandedProps {}\n\nexport interface GTLexpandedState {}\n\nconst GTLexpanded = (props: { location1: String; location2: String; location3: String }) => {\n    return (\n        // <div id={props.id}>\n        <Box\n            style={{\n                padding: '5px 20px 5px 20px',\n                // position: 'static',\n                // // float: 'right',\n                // right: '200px',\n                marginLeft: 'auto',\n                marginRight: '3px',\n                background: '#202020',\n                color: '#F56920',\n                borderRadius: '20px',\n                fontSize: '10px',\n                maxWidth: '100px',\n                maxHeight: '400px',\n            }}\n        >\n            <img src={GTLicon} alt=\"GeoPin\" style={{ float: 'right' }}></img>\n            <Typography variant=\"body2\" color=\"primary\" style={{ textAlign: 'left', marginBottom: '10px' }}>\n                Guess The Location\n            </Typography>\n            <span style={{ paddingBottom: '10px', paddingTop: '10px' }}>\n                <Button\n                    style={{\n                        marginLeft: '3px',\n                        marginRight: '3px',\n                        textAlign: 'center',\n                        fontSize: '10px',\n                        marginBottom: '5px',\n                        background: '#fafafa',\n                        width: '90%',\n                        borderRadius: '20px',\n                    }}\n                >\n                    {props.location1}\n                </Button>\n                {/* The correct option */}\n                <Button\n                    style={{\n                        marginLeft: '3px',\n                        marginRight: '3px',\n                        textAlign: 'center',\n                        fontSize: '10px',\n                        marginBottom: '5px',\n                        background: '#fafafa',\n                        width: '90%',\n                        borderRadius: '20px',\n                    }}\n                >\n                    {props.location2}\n                </Button>\n                <Button\n                    style={{\n                        marginLeft: '3px',\n                        marginRight: '3px',\n                        textAlign: 'center',\n                        fontSize: '10px',\n                        marginBottom: '5px',\n                        background: '#fafafa',\n                        width: '90%',\n                        borderRadius: '20px',\n                    }}\n                >\n                    {props.location3}\n                </Button>\n            </span>\n        </Box>\n        // </div>\n    );\n};\n\nexport default GTLexpanded;\n","/home/ms374/GeoPick/src/components/Display/sharePost.tsx",[],"/home/ms374/GeoPick/src/components/Display/avatarSmall.tsx",["252","253","254","255","256","257","258"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(24),\n        height: theme.spacing(24),\n    },\n}));\n\nexport default function AvatarSmall(props: any) {\n    const [user, setUser] = useState({});\n    \n    const classes = useStyles();\n    if (props.uid != undefined)\n    return (\n                <Link to={{ pathname: `/user/${props.uid}`, state: props.uid }}>\n                <IconButton edge=\"end\">\n                    {props.Size == \"small\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\n                    }\n                    {props.Size == \"large\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\n                    }\n                </IconButton>\n                </Link>\n    );\n    else return (\n        <IconButton edge=\"end\">\n                    {props.Size == \"small\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar}/>\n                    }\n                    {props.Size == \"large\" &&\n                        <Avatar alt={props.User_name} src={props.Avatar} className={classes.large}/>\n                    }\n        </IconButton>\n    );\n}\n","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/occupation.tsx",[],"/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx",["259","260","261"],"import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\nimport { Fab, IconButton } from '@material-ui/core';\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\n\nimport UploadPic from './uploadPic';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // transform: 'translateZ(0px)',\n            flexGrow: 1,\n            backgroundColor: 'transparent',\n        },\n        speedDial: {\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n            '&.MuiFab-primary': {\n                backgroundColor: 'transparent',\n            },\n        },\n        options: {\n            width: '80px',\n            height: '40px',\n            textSizeAdjust: 'auto',\n            fontSize: '0.7em',\n            borderRadius: '0%',\n        },\n        fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n        transform: 'translate(0em, -6em)',\n\n        },\n         input: {\n        display: 'none',\n    },\n    }),\n);\n\nexport default function UploadIcon(props: any) {\n    const classes = useStyles();\n    const [direction] = React.useState<SpeedDialProps['direction']>('up');\n    const [open, setOpen] = React.useState(false);\n    const [hidden] = React.useState(false);\n\n    const actions = [\n        { icon: <p>Select From Gallery</p>, name: 'gallery' },\n        { icon: <p>Take a photo</p>, name: 'camera' },\n    ];\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        //   <div className={classes.exampleWrapper}>\n        <SpeedDial\n            className={classes.fabButton}\n            ariaLabel=\"SpeedDial example\"\n            // className={classes.speedDial}\n            hidden={hidden}\n            icon={\n                <Fab color=\"secondary\" aria-label=\"add\" >\n                    <CameraAltRoundedIcon />\n                </Fab>\n            }\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            <SpeedDialAction\n                key=\"gallery\"\n                className={classes.options}\n                icon={<div>\n                        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\n                        <label htmlFor=\"icon-button-file\">\n                            <IconButton className={classes.options} color=\"inherit\" aria-label=\"upload picture\" component=\"span\" > Select from Gallery </IconButton>\n                        </label>\n                        </div>}\n                tooltipTitle=\"gallery\"\n                onClick={handleClose}\n            />\n            <SpeedDialAction\n                key=\"camera\"\n                className={classes.options}\n                icon={<p> Take Photo </p>}\n                tooltipTitle=\"camera\"\n                onClick={handleClose}\n            />\n        </SpeedDial>\n    );\n}\n","/home/ms374/GeoPick/src/components/Inputs/tags.tsx",["262","263","264","265"],"import React from \"react\";\nimport \"./tags.scss\";\nimport Textfield from \"./TextField\";\n\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: 'black',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'black',\n        },\n        '& .MuiFilledInput-root': {\n            borderRadius: 20,\n            background: 'white',\n            color: 'black',\n            '& fieldset': {\n                borderColor: 'black',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black',\n            },\n        },\n    },\n})(MatTextField);\n\nconst Tags = (props: any) => {\n    const [tags, setTags] = React.useState(Array());\n\n    const addTags = (event: any) => {\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\n            setTags([...tags, event.target.value.toLowerCase()]);\n            props.selectedTags([...tags, event.target.value.toLowerCase()]);\n            event.target.value = \"\";\n        }\n    };\n    const removeTags = (index: any) => {\n        setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\n    };\n    return (\n        <div className=\"tags-input\">\n            <ul id=\"tags\">\n                {tags.map((tag, index) => (\n                    <li key={index} className=\"tag\">\n                        <span className='tag-title'>{tag}</span>\n                        <span className='tag-close-icon'\n                        onClick={() => removeTags(index)}\n                        >\n                        x\n                        </span>\n                    </li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                id=\"tags-input\"\n                style={{display: 'none'}}\n                \n                placeholder=\"Press enter to add tags\"\n            />\n            <label htmlFor=\"tags-input\">\n                <Textfield\n                    // variant=\"filled\"\n                    // fullWidth\n                    className=\"tags-input\"\n                    label=\"Press Enter To Add Tags\"\n                    onKeyUp={event => addTags(event)}\n                />\n            </label>\n        </div>\n    );\n};\nexport default Tags;","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/components/Display/Avatar.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/feed.tsx",[],"/home/ms374/GeoPick/src/components/NavBar/navbar.tsx",["266"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport UploadIcon from '../Display/uploadIcon';\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 50,\n    },\n    list: {\n        marginBottom: theme.spacing(10),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        justifyContent: 'space-evenly',\n        // marginTop: 20,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function LabelBottomNavigation() {\n    // const classes = useStyles();\n    // const [value, setValue] = React.useState('recents');\n\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    //     setValue(newValue);\n    // };\n\n    // return (\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\n    //     </BottomNavigation>\n    // );\n\n    \n    const classes = useStyles();\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <HomeRoundedIcon />\n                </IconButton>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <SearchRoundedIcon />\n                </IconButton>\n                <UploadIcon/>\n                <div className={classes.grow} />\n                <IconButton color=\"inherit\">\n                    <ExploreRoundedIcon/>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                    <SettingsRoundedIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n}\n",{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":7,"column":10,"nodeType":"273","messageId":"274","endLine":7,"endColumn":16},{"ruleId":"271","severity":1,"message":"275","line":7,"column":39,"nodeType":"273","messageId":"274","endLine":7,"endColumn":42},{"ruleId":"276","severity":1,"message":"277","line":37,"column":17,"nodeType":"278","messageId":"279","endLine":37,"endColumn":19},{"ruleId":"271","severity":1,"message":"280","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":19},{"ruleId":"271","severity":1,"message":"281","line":3,"column":37,"nodeType":"273","messageId":"274","endLine":3,"endColumn":47},{"ruleId":"271","severity":1,"message":"282","line":3,"column":49,"nodeType":"273","messageId":"274","endLine":3,"endColumn":53},{"ruleId":"271","severity":1,"message":"283","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":20},{"ruleId":"284","severity":1,"message":"285","line":18,"column":40,"nodeType":"286","messageId":"287","endLine":18,"endColumn":47,"fix":"288"},{"ruleId":"284","severity":1,"message":"285","line":19,"column":40,"nodeType":"286","messageId":"287","endLine":19,"endColumn":47,"fix":"289"},{"ruleId":"271","severity":1,"message":"290","line":20,"column":10,"nodeType":"273","messageId":"274","endLine":20,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":16},{"ruleId":"271","severity":1,"message":"291","line":1,"column":26,"nodeType":"273","messageId":"274","endLine":1,"endColumn":30},{"ruleId":"271","severity":1,"message":"292","line":1,"column":32,"nodeType":"273","messageId":"274","endLine":1,"endColumn":43},{"ruleId":"271","severity":1,"message":"281","line":1,"column":45,"nodeType":"273","messageId":"274","endLine":1,"endColumn":55},{"ruleId":"271","severity":1,"message":"282","line":1,"column":57,"nodeType":"273","messageId":"274","endLine":1,"endColumn":61},{"ruleId":"271","severity":1,"message":"293","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":19},{"ruleId":"271","severity":1,"message":"294","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":21},{"ruleId":"271","severity":1,"message":"295","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":27},{"ruleId":"271","severity":1,"message":"296","line":86,"column":31,"nodeType":"273","messageId":"274","endLine":86,"endColumn":33},{"ruleId":"271","severity":1,"message":"297","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":24},{"ruleId":"271","severity":1,"message":"275","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":13},{"ruleId":"271","severity":1,"message":"298","line":2,"column":28,"nodeType":"273","messageId":"274","endLine":2,"endColumn":40},{"ruleId":"271","severity":1,"message":"299","line":2,"column":58,"nodeType":"273","messageId":"274","endLine":2,"endColumn":68},{"ruleId":"271","severity":1,"message":"300","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"301","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":28},{"ruleId":"271","severity":1,"message":"282","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":16},{"ruleId":"271","severity":1,"message":"300","line":6,"column":18,"nodeType":"273","messageId":"274","endLine":6,"endColumn":28},{"ruleId":"271","severity":1,"message":"302","line":7,"column":22,"nodeType":"273","messageId":"274","endLine":7,"endColumn":27},{"ruleId":"271","severity":1,"message":"303","line":7,"column":29,"nodeType":"273","messageId":"274","endLine":7,"endColumn":41},{"ruleId":"271","severity":1,"message":"304","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":16},{"ruleId":"271","severity":1,"message":"305","line":11,"column":18,"nodeType":"273","messageId":"274","endLine":11,"endColumn":32},{"ruleId":"271","severity":1,"message":"306","line":11,"column":34,"nodeType":"273","messageId":"274","endLine":11,"endColumn":45},{"ruleId":"271","severity":1,"message":"301","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":28},{"ruleId":"271","severity":1,"message":"282","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":7,"column":10,"nodeType":"273","messageId":"274","endLine":7,"endColumn":16},{"ruleId":"271","severity":1,"message":"300","line":7,"column":18,"nodeType":"273","messageId":"274","endLine":7,"endColumn":28},{"ruleId":"271","severity":1,"message":"302","line":8,"column":22,"nodeType":"273","messageId":"274","endLine":8,"endColumn":27},{"ruleId":"271","severity":1,"message":"303","line":8,"column":29,"nodeType":"273","messageId":"274","endLine":8,"endColumn":41},{"ruleId":"271","severity":1,"message":"304","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"271","severity":1,"message":"305","line":12,"column":18,"nodeType":"273","messageId":"274","endLine":12,"endColumn":32},{"ruleId":"271","severity":1,"message":"306","line":12,"column":34,"nodeType":"273","messageId":"274","endLine":12,"endColumn":45},{"ruleId":"271","severity":1,"message":"307","line":2,"column":54,"nodeType":"273","messageId":"274","endLine":2,"endColumn":63},{"ruleId":"271","severity":1,"message":"308","line":2,"column":20,"nodeType":"273","messageId":"274","endLine":2,"endColumn":29},{"ruleId":"271","severity":1,"message":"300","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":18},{"ruleId":"271","severity":1,"message":"309","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"293","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":19},{"ruleId":"271","severity":1,"message":"281","line":7,"column":45,"nodeType":"273","messageId":"274","endLine":7,"endColumn":55},{"ruleId":"271","severity":1,"message":"290","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":14},{"ruleId":"271","severity":1,"message":"310","line":22,"column":7,"nodeType":"273","messageId":"274","endLine":22,"endColumn":18},{"ruleId":"271","severity":1,"message":"311","line":31,"column":11,"nodeType":"273","messageId":"274","endLine":31,"endColumn":18},{"ruleId":"271","severity":1,"message":"312","line":21,"column":8,"nodeType":"273","messageId":"274","endLine":21,"endColumn":28},{"ruleId":"271","severity":1,"message":"313","line":140,"column":13,"nodeType":"273","messageId":"274","endLine":140,"endColumn":22},{"ruleId":"271","severity":1,"message":"280","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":19},{"ruleId":"271","severity":1,"message":"314","line":17,"column":12,"nodeType":"273","messageId":"274","endLine":17,"endColumn":16},{"ruleId":"271","severity":1,"message":"315","line":17,"column":18,"nodeType":"273","messageId":"274","endLine":17,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":20,"column":19,"nodeType":"278","messageId":"279","endLine":20,"endColumn":21},{"ruleId":"276","severity":1,"message":"316","line":24,"column":33,"nodeType":"278","messageId":"279","endLine":24,"endColumn":35},{"ruleId":"276","severity":1,"message":"316","line":27,"column":33,"nodeType":"278","messageId":"279","endLine":27,"endColumn":35},{"ruleId":"276","severity":1,"message":"316","line":35,"column":33,"nodeType":"278","messageId":"279","endLine":35,"endColumn":35},{"ruleId":"276","severity":1,"message":"316","line":38,"column":33,"nodeType":"278","messageId":"279","endLine":38,"endColumn":35},{"ruleId":"271","severity":1,"message":"317","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":30},{"ruleId":"271","severity":1,"message":"318","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":17},{"ruleId":"271","severity":1,"message":"319","line":53,"column":11,"nodeType":"273","messageId":"274","endLine":53,"endColumn":18},{"ruleId":"271","severity":1,"message":"275","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":13},{"ruleId":"271","severity":1,"message":"320","line":5,"column":42,"nodeType":"273","messageId":"274","endLine":5,"endColumn":56},{"ruleId":"271","severity":1,"message":"321","line":7,"column":7,"nodeType":"273","messageId":"274","endLine":7,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":36,"column":44,"nodeType":"286","messageId":"287","endLine":36,"endColumn":51,"fix":"322"},{"ruleId":"271","severity":1,"message":"323","line":9,"column":18,"nodeType":"273","messageId":"274","endLine":9,"endColumn":21},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"@typescript-eslint/no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'RegularBtn' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"326","text":"327"},{"range":"328","text":"327"},"'Link' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'BadgeAvatar' is defined but never used.","'SinglePostNew' is defined but never used.","'checkUserLoggedIn' is defined but never used.","'id' is assigned a value but never used.","'OccupationSelect' is defined but never used.","'MatTextField' is defined but never used.","'withStyles' is defined but never used.","'IconButton' is defined but never used.","'ArrowBackRoundedIcon' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'purple' is defined but never used.","'SwitchClassKey' is defined but never used.","'SwitchProps' is defined but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'AddAvatar' is defined but never used.","'SmallAvatar' is assigned a value but never used.","'classes' is assigned a value but never used.","'GuessTheLocationPlay' is defined but never used.","'questions' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '===' and instead saw '=='.","'GuessTheLocationButton' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.",{"range":"329","text":"327"},"'Fab' is defined but never used.","no-global-assign","no-unsafe-negation",[721,728],"[]",[770,777],[953,960]]