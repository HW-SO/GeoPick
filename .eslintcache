<<<<<<< HEAD
[{"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\index.tsx":"1","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts":"2","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\App.tsx":"3","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts":"4","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"5","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx":"6","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"7","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"8","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"9","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx":"10","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"11","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"12","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx":"13","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx":"14","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts":"15","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx":"16","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePost.tsx":"17","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts":"18","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts":"19","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts":"20","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"21","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"22","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"23","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx":"24","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"25","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx":"26"},{"size":956,"mtime":1610619353016,"results":"27","hashOfConfig":"28"},{"size":482,"mtime":1610619353246,"results":"29","hashOfConfig":"28"},{"size":3268,"mtime":1611123301133,"results":"30","hashOfConfig":"28"},{"size":821,"mtime":1610619353247,"results":"31","hashOfConfig":"28"},{"size":4102,"mtime":1611123301149,"results":"32","hashOfConfig":"28"},{"size":1726,"mtime":1610619353097,"results":"33","hashOfConfig":"28"},{"size":3703,"mtime":1611123301151,"results":"34","hashOfConfig":"28"},{"size":4761,"mtime":1611123301152,"results":"35","hashOfConfig":"28"},{"size":1523,"mtime":1610619352976,"results":"36","hashOfConfig":"28"},{"size":2367,"mtime":1611131503932,"results":"37","hashOfConfig":"28"},{"size":4662,"mtime":1610619353180,"results":"38","hashOfConfig":"28"},{"size":6776,"mtime":1611226029934,"results":"39","hashOfConfig":"28"},{"size":1894,"mtime":1610619352987,"results":"40","hashOfConfig":"28"},{"size":1017,"mtime":1611131503931,"results":"41","hashOfConfig":"28"},{"size":137,"mtime":1610619353014,"results":"42","hashOfConfig":"28"},{"size":2449,"mtime":1611147553268,"results":"43","hashOfConfig":"28"},{"size":8290,"mtime":1611213611647,"results":"44","hashOfConfig":"28"},{"size":2743,"mtime":1611123301142,"results":"45","hashOfConfig":"28"},{"size":272,"mtime":1610619353013,"results":"46","hashOfConfig":"28"},{"size":969,"mtime":1611123301141,"results":"47","hashOfConfig":"28"},{"size":1695,"mtime":1610619352984,"results":"48","hashOfConfig":"28"},{"size":2292,"mtime":1611123301135,"results":"49","hashOfConfig":"28"},{"size":1808,"mtime":1610949371776,"results":"50","hashOfConfig":"28"},{"size":1570,"mtime":1611123301138,"results":"51","hashOfConfig":"28"},{"size":1108,"mtime":1611123301136,"results":"52","hashOfConfig":"28"},{"size":723,"mtime":1611123301137,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"10ad72d",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\index.tsx",[],["121","122"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\App.tsx",["123","124","125","126","127"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport WelcomeScreen from './pages/welcome screen';\r\nimport SignInScreen from './pages/sign-in screen/SignInForm';\r\nimport SignUpScreen from './pages/sign-up screen/SignupForm';\r\nimport BottomNavigation from './components/NavBar/navbar';\r\nimport BackwardBtn from './components/Buttons/BackwardBtn';\r\nimport TextField from './components/Inputs/TextField';\r\nimport Card from './components/Layouts/Card';\r\nimport Checkbox from './components/Inputs/Checkbox';\r\nimport { RegularBtn } from './components/Buttons/RegularBtn';\r\nimport CreateProfileScreen from './pages/create-profile-screen';\r\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\r\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\r\nimport { HomeScreen } from './pages/home-screen/home';\r\n\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Nav />\r\n                <div style={{ background: 'black' }}>\r\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\r\n                </div>\r\n                <div>{/* <BottomNavigation /> */}</div>\r\n                <Switch>\r\n                    <Route exact path=\"/welcome\">\r\n                        <WelcomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-in\">\r\n                        <SignInScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-up\">\r\n                        <SignUpScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/create-profile\">\r\n                        <CreateProfileScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Set-password\">\r\n                        <SetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ReSet-password\">\r\n                        <ReSetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/home\">\r\n                        <HomeScreen />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/welcome\">Welcome</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-up\">Sign-Up</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-profile\">Create Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Set-password\">Set new password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ReSet-password\">reset password </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home Screen</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",["128"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nexport interface SignInProps {}\r\n\r\nexport default function SignInScreens() {\r\n    return (\r\n        <div className=\"bg\">\r\n            <Card background=\"white\" title=\"Sign in\" split={1}>\r\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    <SignInHeader title=\"You know what to do...\" />\r\n                    <SignInForm />\r\n                </Grid>\r\n            </Card>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SignInHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h3\" style={{ color: '#f56920', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n            <br />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignInFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                    error={errors.password ? true : false}\r\n                />\r\n                <br />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignInForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log('trying ');\r\n        auth.doSignInWithEmailAndPassword(data.email, data.password)\r\n            .then((u) => {\r\n                console.log('sucessfully signed up');\r\n                alert('sucessfully signed up ');\r\n                push('/home');\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error ' + err);\r\n                alert(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <SignInFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    ></Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Sign In\r\n                    </RegularBtn>\r\n                </Grid>\r\n                <br />\r\n                <Link to=\"/ReSet-password\"> Forgot Password ?</Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx",["129","130"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport './styles.scss';\r\nexport interface SetNewPassProps {}\r\n\r\nexport default class SetNewPass extends React.Component<SetNewPassProps> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <div className=\"bgnewpass\">\r\n                    <Card background=\"white\" title=\"Set a new Password\" split={2}>\r\n                        <Grid container spacing={5} direction=\"row\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12}>\r\n                                    <PasswordField> </PasswordField>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <PasswordField> Confirm Password </PasswordField>{' '}\r\n                                    {/* ask to add the cofirm text in the components */}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\r\n                                        Set Password\r\n                                    </RegularBtn>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",["131","132","133","134"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nexport interface ResetProps {}\r\n\r\nexport default function ResetScreens() {\r\n    return (\r\n        <div className=\"bg\">\r\n            <Card background=\"white\" title=\"Reset password\" split={1}>\r\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    <ResetHeader title=\"We just want to combine your identity...\" />\r\n                    <ResetForm />\r\n                </Grid>\r\n            </Card>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ResetHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h3\" style={{ color: '#f56920', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n            \r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst ResetFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst ResetForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log('trying ');\r\n        auth.doPasswordReset(data.email)\r\n            .then((u) => {\r\n                console.log('reset password link send to your mail');\r\n                alert('reset password link sent to your mail');\r\n                \r\n            })\r\n            .catch((err) => {\r\n                console.log('Error ' + err);\r\n                alert(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <ResetFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    ></Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '100%', borderRadius: '15px' }}>\r\n                        Send me a Link\r\n                    </RegularBtn>\r\n                </Grid>\r\n                <br />\r\n                \r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",["135"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport interface SignUpProps {}\r\n\r\nexport default function SignUpScreen() {\r\n    return (\r\n        <Card title=\"Sign Up!\" split={1}>\r\n            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                <SignUpHeader title=\"Enter some of your personal details\" />\r\n                <SignUpForm />\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst SignUpHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h5\" style={{ color: 'white', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                    error={errors.password ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"confirmpassword\"\r\n                    id=\"ConformPassword\"\r\n                    label=\"Confirm Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log(\"trying \");\r\n        if(data.password==data.confirmpassword){\r\n        auth.doCreateUserWithEmailAndPassword(data.email,data.password).then((u)=>{\r\n            console.log(\"sucessfully signed up\");\r\n            push('/create-profile');    \r\n        }).catch((err)=>{\r\n            console.log(\"Error \"+ err);\r\n            alert(err)\r\n        });\r\n    }\r\n     else{\r\n         alert(\"type the same password in conformation password\")\r\n     }   \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <SignUpFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid item xs={2} alignContent=\"center\" alignItems=\"center\" style={{ verticalAlign: 'true' }}>\r\n                        <Checkbox required/>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    >\r\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\r\n                            By signing up I conform that I have read and accepted the terms and conditions of using the\r\n                            application.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Sign Up!\r\n                    </RegularBtn>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx",["136","137","138"],"import * as React from 'react';\r\nimport { Component, useEffect } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\n// import SinglePost from './singlePost';\r\nimport Picture from './welcome-pg.png';\r\nimport {storage} from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any\r\n}\r\n\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n\r\n    constructor(HomeScreenProps: any){\r\n        super(HomeScreenProps)\r\n        this.state ={\r\n            posts: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase.firestore().collection(\"Posts\").onSnapshot((snapshot: any) => {\r\n            this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n        });\r\n        console.log(this.state);\r\n\r\n    }\r\n\r\n    getData = () => {\r\n        firebase.firestore().collection(\"Posts\").orderBy(\"likes_count\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(doc.id, \" => \", doc.data());\r\n            });\r\n        }\r\n        ).catch((err)=>{\r\n            console.log(\"Error getting documents: \", err);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} onLoad = {this.getData}>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\"></img>\r\n                <br></br>\r\n                {/* <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} />\r\n                <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} /> */}\r\n\r\n                {/* {this.state.posts.map(({ id, post } : {id: any; post: any}) => {\r\n                    return (\r\n                    <SinglePost\r\n                        key={id}\r\n                        // id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.username}\r\n                        postPic={post.photoUrl}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                    />\r\n                    );\r\n                })} */}\r\n                <Feed />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport { auth } from '../../firebase';\r\nimport app from 'firebase/app';\r\nimport SignUpScreen from '../sign-up screen/index';\r\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter } from 'react-router-dom';\r\nimport WhiteLogo from './WhiteLogo.svg';\r\nimport googleButton from './googleButton.svg';\r\n// import background from './welcome-pg.png';\r\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { AlternateEmailTwoTone, Widgets } from '@material-ui/icons';\r\ninterface WelcomeProps {}\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//     createStyles({\r\n//         root: {\r\n//             flexGrow: 1,\r\n//         },\r\n//         paper: {\r\n//             padding: theme.spacing(2),\r\n//             textAlign: 'center',\r\n//             color: theme.palette.text.secondary,\r\n//         },\r\n//     }),\r\n// );\r\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\r\n    // const classes = useStyles();\r\n    /* var config={\r\n   apiKey:\"\",\r\n   authDomain:\"\",\r\n   databaseURL:\"\",\r\n   project:\"\",\r\n   storeageBucket:\"\",\r\n   messageingSenderid:\"\"\r\n};*/\r\n    const GoogleSignin = () => {\r\n        auth.doGoogleSignUp().catch((error) => {\r\n            console.log(error);\r\n            window.alert('Failed to login');\r\n        });\r\n    };\r\n    return (\r\n        <html>\r\n            <body>\r\n                {/* <img src ={background} width='auto'> */}\r\n                <div className=\"welcomepg\">\r\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid item>\r\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" align=\"center\">\r\n                                <span>A tool for</span>\r\n                                <br></br>shutterbugs!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid\r\n                                item\r\n                                xs={2}\r\n                                alignContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ verticalAlign: 'true' }}\r\n                            ></Grid>\r\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                                <Grid item>\r\n                                    <button onClick={GoogleSignin} className=\"g-btn\">\r\n                                        <img src={googleButton} width=\"22px\" alt=\"Google\" />\r\n                                        <p className=\"text\">Sign in</p>\r\n                                    </button>\r\n                                    <br></br>\r\n                                    <hr style={{ width: '500px' }} />\r\n                                    <div style={{ paddingBottom: '5%' }}>\r\n                                        <a href=\"/sign-up\">\r\n                                            <button className=\"sign-btn\">Sign up now!</button>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* <br></br> */}\r\n                                    <div style={{ paddingBottom: '20%' }}>\r\n                                        <a href=\"/sign-in\">\r\n                                            <button className=\"sign-btn1\">Sign in</button>\r\n                                        </a>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </body>\r\n        </html>\r\n    );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",["157","158","159","160"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx",["161","162"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\nborderRadius: 20,\r\n    position: 'relative',\r\n    backgroundColor: 'white',\r\n    borderColor: 'white',\r\n    fontSize: 14,\r\n    width: '100%',\r\n    // transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n    //   borderRadius: 20,\r\n    //   borderColor: '#80bdff',\r\n    //   boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n    },\r\n}));\r\n\r\nexport default function OccupationSelect({control} : {control: any}) {\r\n  const classes = useStyles();\r\n  const [occ, setOcc] = React.useState('');\r\n  const handleChange = (event: any) => {\r\n    setOcc(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" className={classes.root}>\r\n        <InputLabel id=\"occupation-select\">Occupation (Optional)</InputLabel>\r\n        <Controller\r\n          name=\"Occupation\"\r\n          control={control}\r\n          as={\r\n            <Select\r\n              labelId=\"occupation-outlines\"\r\n              id=\"occupation-select\"\r\n              value={occ}\r\n              onChange={handleChange}\r\n              label=\"Occupation\"\r\n            >\r\n              <MenuItem value=\"\"></MenuItem>\r\n              <MenuItem value={\"Historian\"}>Historian</MenuItem>\r\n              <MenuItem value={\"Student\"}>Student</MenuItem>\r\n              <MenuItem value={\"Teacher\"}>Teacher</MenuItem>\r\n              <MenuItem value={\"Photographer\"}>Photographer</MenuItem>\r\n              <MenuItem value={\"Collector\"}>Collector</MenuItem>\r\n              <MenuItem value={\"Academcian\"}>Academcian</MenuItem>\r\n              <MenuItem value={\"Gamer\"}>Gamer</MenuItem>\r\n            </Select>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePost.tsx",["163"],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts",["164"],"/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport firebase from 'firebase';\r\nimport cred from '../constants/firebase-creds.json';\r\nimport 'dot-env';\r\nimport 'firebase/storage';\r\n//import './sign-in screen';\r\nconst prodConfig = {\r\n    apiKey: cred.REACT_APP_API_KEY,\r\n    authDomain: cred.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: cred.REACT_APP_DATABASE_URL,\r\n    projectId: cred.REACT_APP_PROJECT_ID,\r\n    storageBucket: cred.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: cred.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nconst devConfig = {\r\n    apiKey: cred.REACT_APP_DEV_API_KEY,\r\n    authDomain: cred.REACT_APP_DEV_AUTH_DOMAIN,\r\n    databaseURL: cred.REACT_APP_DEV_DATABASE_URL,\r\n    projectId: cred.REACT_APP_DEV_PROJECT_ID,\r\n    storageBucket: cred.REACT_APP_DEV_STORAGE_BUCKET,\r\n    messagingSenderId: cred.REACT_APP_DEV_MESSAGING_SENDER_ID,\r\n};\r\n\r\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\r\n\r\n// class firebase {\r\n//     auth: app.auth.Auth; // variable assigned for auth\r\n//     static auth: app.auth.Auth;\r\n//     providerGoogle: app.auth.GoogleAuthProvider | undefined;\r\n\r\n//     constructor() {\r\n//         app.initializeApp(config);\r\n//         this.auth = app.auth(); // auth api, use this.auth to use it\r\n//     }\r\n\r\n//     /**============================================\r\n//      **               AUTH API\r\n//      *=============================================**/\r\n\r\n//     // signup with email and pass\r\n//     doCreateUserWithEmailAndPassword = (email: string, password: string) =>\r\n//         this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n//     doSignInWithEmailAndPassword = (email: string, password: string) =>\r\n//         this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n//     doSignOut = () => this.auth.signOut();\r\n\r\n//     getGoogleProvider = () => {\r\n//         this.providerGoogle = new app.auth.GoogleAuthProvider();\r\n//         return this.providerGoogle;\r\n//     };\r\n\r\n//     getApp = () => {\r\n//         return app;\r\n//     }\r\n\r\n//     getStorage = () => {\r\n//         return app.storage();\r\n//     }\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\n// app.initializeApp(config);\r\n\r\nconst signIn=(email:string,password:string)=>{\r\n    auth.signInWithEmailAndPassword(email,password).then((u)=>{\r\n        console.log(\"sucessfully logged\");\r\n        \r\n    }).catch((err)=>{\r\n        console.log(\"Error \"+ err.toString);\r\n    })\r\n}\r\nexport const auth = firebase.auth();\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const db = firebase.database();\r\nexport default auth;\r\nexport const storage = firebase.storage();","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx",["165"],"import React from 'react';\r\nimport { Box, TextField as MatTextField, TextFieldProps, withStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\n// const styles = {\r\n//     root: {\r\n//         background: 'red',\r\n//         borderRadius: 20,\r\n//         borderColor: 'red',\r\n//     },\r\n//     notched: {\r\n//         borderColor: 'red',\r\n//     },\r\n// };\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiFilledInput-root': {\r\n            borderRadius: 20,\r\n            background: 'white',\r\n            color: 'black',\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n        },\r\n    },\r\n})(MatTextField);\r\n\r\nfunction TextField({ InputProps, variant = 'filled', ...props }: TextFieldProps) {\r\n    return (\r\n        <Box display=\"flex\">\r\n            <Box boxShadow={5} maxWidth={380} minWidth={200} width=\"100%\" m=\"auto\" borderRadius={20}>\r\n                <CssTextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        ...InputProps,\r\n                        disableUnderline: true,\r\n                    }}\r\n                    {...props}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default TextField;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",["166","167","168","169"],"import React, {useState}from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport UploadButton from './AddAvatarIcon';\r\nimport Avatars from './Avatar';\r\n\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\ninterface Image {\r\n    src: string\r\n}\r\n\r\nexport default function BadgeAvatar(props: any) {\r\n    const classes = useStyles();\r\n\r\n    // const [avat, setAvat] = useState({})\r\n    // const [changeDetected, setChangeDetected] = useState(false);\r\n    // const changeAvatar = (newAvat: File) => {\r\n    //     setAvat(newAvat);\r\n    //     console.log(avat);\r\n    //     setChangeDetected(true);\r\n    //     // props.newAvatar(avat);\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Badge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                badgeContent={<UploadButton onChange = {props.onChange} />}\r\n            >\r\n                <Avatars imgsrc={props.src}/>\r\n            </Badge>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx",["170","171","172"],"import { Checkbox as MatCheckbox, makeStyles, createStyles, Theme, withStyles, CheckboxProps } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { RadioButtonUncheckedOutlined, RadioButtonCheckedRounded } from '@material-ui/icons';\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//     createStyles({\r\n//         root: {\r\n//             color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n//             '&$checked': {\r\n//                 color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n//             },\r\n//         },\r\n//     }),\r\n// );\r\n\r\nconst box = (theme: Theme) => ({\r\n    root: {\r\n        color: 'red',\r\n        '&$checked': {\r\n            color: 'red',\r\n        },\r\n    },\r\n    checked: {},\r\n});\r\n\r\nconst Custombox = withStyles(box)((props: CheckboxProps) => (\r\n    <MatCheckbox\r\n        icon={<RadioButtonUncheckedOutlined />}\r\n        checkedIcon={<RadioButtonCheckedRounded />}\r\n        color=\"default\"\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst WhiteCheckbox = withStyles({\r\n    root: {\r\n        color: 'white',\r\n        '&$checked': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: CheckboxProps) => <MatCheckbox color=\"default\" {...props} />);\r\n\r\nfunction Checkbox(props: CheckboxProps) {\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return <WhiteCheckbox checked={checked} onChange={handleChange}/>;\r\n}\r\n\r\nexport default Checkbox;\r\n","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",["173"],"\r\nimport React, {useState} from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddAvatar from './AddAvatar.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n      width: 22,\r\n      height: 22,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\n\r\nexport default function UploadButton(props: any) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\r\n      <label htmlFor=\"icon-button-file\">\r\n      \r\n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" >\r\n      <SmallAvatar alt=\"Add Avatar Icon\" src={AddAvatar} />\r\n      </IconButton>\r\n      </label>\r\n    </div>\r\n  );\r\n}","C:\\Users\\adith\\OneDrive\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx",["174"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    large: {\r\n        width: theme.spacing(24),\r\n        height: theme.spacing(24),\r\n    },\r\n}));\r\n\r\ninterface Image {\r\n    imgsrc: string\r\n}\r\n\r\nexport default function Avatars(props: any) {\r\n    const classes = useStyles();\r\n    console.log(props.imgsrc);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar alt=\"Avatar Image\" src={props.imgsrc} className={classes.large} />\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":24},{"ruleId":"179","severity":1,"message":"183","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":19},{"ruleId":"179","severity":1,"message":"184","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":17},{"ruleId":"179","severity":1,"message":"185","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":12},{"ruleId":"179","severity":1,"message":"186","line":11,"column":8,"nodeType":"181","messageId":"182","endLine":11,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"187","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"184","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"179","severity":1,"message":"186","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"188","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":21},{"ruleId":"179","severity":1,"message":"189","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":14},{"ruleId":"179","severity":1,"message":"190","line":64,"column":13,"nodeType":"181","messageId":"182","endLine":64,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":80,"column":25,"nodeType":"193","messageId":"194","endLine":80,"endColumn":27},{"ruleId":"179","severity":1,"message":"195","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":30},{"ruleId":"179","severity":1,"message":"196","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"197","line":7,"column":9,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"198","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":11},{"ruleId":"179","severity":1,"message":"199","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":20},{"ruleId":"179","severity":1,"message":"200","line":6,"column":27,"nodeType":"181","messageId":"182","endLine":6,"endColumn":33},{"ruleId":"179","severity":1,"message":"201","line":6,"column":35,"nodeType":"181","messageId":"182","endLine":6,"endColumn":40},{"ruleId":"179","severity":1,"message":"202","line":6,"column":42,"nodeType":"181","messageId":"182","endLine":6,"endColumn":48},{"ruleId":"179","severity":1,"message":"189","line":6,"column":50,"nodeType":"181","messageId":"182","endLine":6,"endColumn":54},{"ruleId":"179","severity":1,"message":"203","line":6,"column":56,"nodeType":"181","messageId":"182","endLine":6,"endColumn":69},{"ruleId":"179","severity":1,"message":"204","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":22},{"ruleId":"179","severity":1,"message":"205","line":10,"column":30,"nodeType":"181","messageId":"182","endLine":10,"endColumn":40},{"ruleId":"179","severity":1,"message":"206","line":10,"column":42,"nodeType":"181","messageId":"182","endLine":10,"endColumn":47},{"ruleId":"179","severity":1,"message":"207","line":11,"column":8,"nodeType":"181","messageId":"182","endLine":11,"endColumn":15},{"ruleId":"179","severity":1,"message":"186","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":16},{"ruleId":"179","severity":1,"message":"184","line":13,"column":8,"nodeType":"181","messageId":"182","endLine":13,"endColumn":17},{"ruleId":"179","severity":1,"message":"188","line":14,"column":8,"nodeType":"181","messageId":"182","endLine":14,"endColumn":21},{"ruleId":"179","severity":1,"message":"185","line":15,"column":8,"nodeType":"181","messageId":"182","endLine":15,"endColumn":12},{"ruleId":"179","severity":1,"message":"208","line":16,"column":10,"nodeType":"181","messageId":"182","endLine":16,"endColumn":20},{"ruleId":"179","severity":1,"message":"209","line":17,"column":10,"nodeType":"181","messageId":"182","endLine":17,"endColumn":31},{"ruleId":"179","severity":1,"message":"210","line":17,"column":33,"nodeType":"181","messageId":"182","endLine":17,"endColumn":40},{"ruleId":"179","severity":1,"message":"211","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"212","line":14,"column":19,"nodeType":"181","messageId":"182","endLine":14,"endColumn":29},{"ruleId":"179","severity":1,"message":"213","line":17,"column":10,"nodeType":"181","messageId":"182","endLine":17,"endColumn":17},{"ruleId":"191","severity":1,"message":"214","line":144,"column":17,"nodeType":"193","messageId":"194","endLine":144,"endColumn":19},{"ruleId":"179","severity":1,"message":"215","line":2,"column":22,"nodeType":"181","messageId":"182","endLine":2,"endColumn":32},{"ruleId":"179","severity":1,"message":"216","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":54,"column":35,"nodeType":"193","messageId":"194","endLine":54,"endColumn":37},{"ruleId":"179","severity":1,"message":"217","line":70,"column":7,"nodeType":"181","messageId":"182","endLine":70,"endColumn":13},{"ruleId":"179","severity":1,"message":"218","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":12},{"ruleId":"179","severity":1,"message":"219","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":24},{"ruleId":"179","severity":1,"message":"220","line":9,"column":7,"nodeType":"181","messageId":"182","endLine":9,"endColumn":18},{"ruleId":"179","severity":1,"message":"221","line":38,"column":7,"nodeType":"181","messageId":"182","endLine":38,"endColumn":18},{"ruleId":"179","severity":1,"message":"222","line":55,"column":11,"nodeType":"181","messageId":"182","endLine":55,"endColumn":16},{"ruleId":"179","severity":1,"message":"205","line":1,"column":35,"nodeType":"181","messageId":"182","endLine":1,"endColumn":45},{"ruleId":"179","severity":1,"message":"204","line":1,"column":47,"nodeType":"181","messageId":"182","endLine":1,"endColumn":59},{"ruleId":"179","severity":1,"message":"223","line":26,"column":7,"nodeType":"181","messageId":"182","endLine":26,"endColumn":16},{"ruleId":"179","severity":1,"message":"219","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":24},{"ruleId":"179","severity":1,"message":"222","line":18,"column":11,"nodeType":"181","messageId":"182","endLine":18,"endColumn":16},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"@typescript-eslint/no-unused-vars","'BottomNavigation' is defined but never used.","Identifier","unusedVar","'BackwardBtn' is defined but never used.","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'PasswordField' is defined but never used.","'Link' is defined but never used.","'push' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Picture' is defined but never used.","'storage' is defined but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'RegularBtn' is defined but never used.","'AlternateEmailTwoTone' is defined but never used.","'Widgets' is defined but never used.","'UsernameField' is defined but never used.","'Controller' is defined but never used.","'resolve' is defined but never used.","Expected '!==' and instead saw '!='.","'withStyles' is defined but never used.","'useForm' is defined but never used.","'signIn' is assigned a value but never used.","'clsx' is defined but never used.","'useState' is defined but never used.","'StyledBadge' is assigned a value but never used.","'SmallAvatar' is assigned a value but never used.","'Image' is defined but never used.","'Custombox' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx":"1","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"2","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx":"3","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"4","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"5","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"6","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts":"7","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts":"8","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePost.tsx":"9","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"10","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"11"},{"size":956,"mtime":1609746471077,"results":"12","hashOfConfig":"13"},{"size":4761,"mtime":1610977910799,"results":"14","hashOfConfig":"13"},{"size":2367,"mtime":1611131412288,"results":"15","hashOfConfig":"13"},{"size":1523,"mtime":1610352321101,"results":"16","hashOfConfig":"13"},{"size":4102,"mtime":1610977910793,"results":"17","hashOfConfig":"13"},{"size":6139,"mtime":1611212196162,"results":"18","hashOfConfig":"13"},{"size":2743,"mtime":1610977910776,"results":"19","hashOfConfig":"13"},{"size":272,"mtime":1610611184529,"results":"20","hashOfConfig":"13"},{"size":10120,"mtime":1611237926543,"results":"21","hashOfConfig":"13"},{"size":3703,"mtime":1611128829473,"results":"22","hashOfConfig":"13"},{"size":1108,"mtime":1610977910745,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1t5v4mh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx",[],["51","52"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",["53"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport interface SignUpProps {}\r\n\r\nexport default function SignUpScreen() {\r\n    return (\r\n        <Card title=\"Sign Up!\" split={1}>\r\n            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                <SignUpHeader title=\"Enter some of your personal details\" />\r\n                <SignUpForm />\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst SignUpHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h5\" style={{ color: 'white', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                    error={errors.password ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"confirmpassword\"\r\n                    id=\"ConformPassword\"\r\n                    label=\"Confirm Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log(\"trying \");\r\n        if(data.password==data.confirmpassword){\r\n        auth.doCreateUserWithEmailAndPassword(data.email,data.password).then((u)=>{\r\n            console.log(\"sucessfully signed up\");\r\n            push('/create-profile');    \r\n        }).catch((err)=>{\r\n            console.log(\"Error \"+ err);\r\n            alert(err)\r\n        });\r\n    }\r\n     else{\r\n         alert(\"type the same password in conformation password\")\r\n     }   \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <SignUpFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid item xs={2} alignContent=\"center\" alignItems=\"center\" style={{ verticalAlign: 'true' }}>\r\n                        <Checkbox required/>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    >\r\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\r\n                            By signing up I conform that I have read and accepted the terms and conditions of using the\r\n                            application.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Sign Up!\r\n                    </RegularBtn>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx",["54","55","56"],"import * as React from 'react';\r\nimport { Component, useEffect } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\n// import SinglePost from './singlePost';\r\nimport Picture from './welcome-pg.png';\r\nimport {storage} from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any\r\n}\r\n\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n\r\n    constructor(HomeScreenProps: any){\r\n        super(HomeScreenProps)\r\n        this.state ={\r\n            posts: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase.firestore().collection(\"Posts\").onSnapshot((snapshot: any) => {\r\n            this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n        });\r\n        console.log(this.state);\r\n\r\n    }\r\n\r\n    getData = () => {\r\n        firebase.firestore().collection(\"Posts\").orderBy(\"likes_count\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(doc.id, \" => \", doc.data());\r\n            });\r\n        }\r\n        ).catch((err)=>{\r\n            console.log(\"Error getting documents: \", err);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} onLoad = {this.getData}>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\"></img>\r\n                <br></br>\r\n                {/* <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} />\r\n                <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} /> */}\r\n\r\n                {/* {this.state.posts.map(({ id, post } : {id: any; post: any}) => {\r\n                    return (\r\n                    <SinglePost\r\n                        key={id}\r\n                        // id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.username}\r\n                        postPic={post.photoUrl}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                    />\r\n                    );\r\n                })} */}\r\n                <Feed />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",["57"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",["58","59","60"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport UsernameField from '../../components/Inputs/UsernameField';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport sampleavatar from './sample-avatar.png';\r\nimport {storage} from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Compress from \"react-image-file-resizer\";\r\nimport OccupationSelect from '../../components/Inputs/occupation';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nexport interface CreateProfileProps {}\r\n\r\nexport default class CreateProfileScreen extends React.Component<CreateProfileProps> {\r\n\r\n    state = {\r\n        img: {},\r\n        imgurl : sampleavatar,\r\n    }\r\n\r\n    changeAvatar = async (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        if(event.target.files && event.target.files[0])\r\n        {\r\n            const file = await event.target.files[0];\r\n            this.setState({img: file})\r\n            console.log(this.state.img);\r\n            const user = auth.checkUserLoggedIn();\r\n            if (!user) return;\r\n                Compress.imageFileResizer(\r\n                    file,\r\n                    20,\r\n                    20,\r\n                    \"PNG\",\r\n                    100,\r\n                    0,\r\n                    async (uri) => {\r\n                        if (typeof uri === 'string')\r\n                        {\r\n                        const urinew = uri.split('base64,')[1]\r\n                        storage.ref(`/Images/${user.uid}/Avatar/${file.name}`).putString(urinew, 'base64').then(data => {\r\n                            data.ref.getDownloadURL().then(url => {\r\n                                this.setState({imgurl: url});\r\n                                firebase\r\n                                .firestore()\r\n                                .collection('users/').doc(`${user.uid}/`)\r\n                                .update({\r\n                                    Avatar: url,\r\n                                })\r\n                            });\r\n                        });;\r\n                        }   \r\n                    },\r\n                    \"base64\"\r\n                    ); \r\n            \r\n            }\r\n        }\r\n    \r\n    public render(): JSX.Element {\r\n        return (\r\n            <html>\r\n                <body>\r\n                    <div className=\"Create-Profile-Page\">\r\n                        <Card title=\"Create Profile\" split={1}>\r\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid item>\r\n                                    <BadgeAvatar src={this.state.imgurl} onChange = {this.changeAvatar} />\r\n                                </Grid>\r\n                                <CreateProfileForm img={this.state.imgurl}/>\r\n                            </Grid>\r\n                        </Card>\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst CreateProfileFields = ({ register, errors, control}: { register: any; errors: any; control: any }) => {\r\n    \r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    label=\"username\"\r\n                    type=\"username\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9_]{3,8}$/i,\r\n                            message: 'invalid username',\r\n                        },\r\n                    })}\r\n                    error={errors.username ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <OccupationSelect control={control}/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst CreateProfileForm = ({img }: {img: string;}) => {\r\n    const { handleSubmit, errors, register, control } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        const user = auth.checkUserLoggedIn()\r\n        if(user != undefined){\r\n            firebase.firestore()\r\n            .collection('users/').doc(user.uid)\r\n            .set({\r\n                Avatar: img,\r\n                Bio: \"\",\r\n                GamePoint: 0,\r\n                Occupation: data.Occupation,\r\n                User_name: data.username,\r\n            }).catch((err)=>{\r\n                console.log(\"Error \"+ err);\r\n                alert(err)\r\n            });\r\n            push('/home');\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <CreateProfileFields register={register} errors={errors} control={control} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid item xs={10} alignContent=\"center\" alignItems=\"center\" style={{ paddingTop: '20px', verticalAlign: 'true' }}>\r\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\r\n                            *Other users will be able to view your username and display picture as\r\n                            set above\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Complete Registration\r\n                    </RegularBtn>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};",["61","62"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts",["63"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePost.tsx",["64","65","66"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",["67","68","69","70"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":80,"column":25,"nodeType":"78","messageId":"79","endLine":80,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":2,"column":21,"nodeType":"82","messageId":"83","endLine":2,"endColumn":30},{"ruleId":"80","severity":1,"message":"84","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":7,"column":9,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"87","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":21},{"ruleId":"80","severity":1,"message":"88","line":14,"column":19,"nodeType":"82","messageId":"83","endLine":14,"endColumn":29},{"ruleId":"76","severity":1,"message":"89","line":118,"column":17,"nodeType":"78","messageId":"79","endLine":118,"endColumn":19},{"ruleId":"72","replacedBy":"90"},{"ruleId":"74","replacedBy":"91"},{"ruleId":"80","severity":1,"message":"92","line":70,"column":7,"nodeType":"82","messageId":"83","endLine":70,"endColumn":13},{"ruleId":"80","severity":1,"message":"93","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":15},{"ruleId":"80","severity":1,"message":"94","line":11,"column":5,"nodeType":"82","messageId":"83","endLine":11,"endColumn":9},{"ruleId":"76","severity":1,"message":"77","line":65,"column":35,"nodeType":"78","messageId":"79","endLine":65,"endColumn":37},{"ruleId":"80","severity":1,"message":"86","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"95","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":21},{"ruleId":"80","severity":1,"message":"96","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":64,"column":13,"nodeType":"82","messageId":"83","endLine":64,"endColumn":17},{"ruleId":"80","severity":1,"message":"98","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Picture' is defined but never used.","'storage' is defined but never used.","'Checkbox' is defined but never used.","'UsernameField' is defined but never used.","'Controller' is defined but never used.","Expected '!==' and instead saw '!='.",["99"],["100"],"'signIn' is assigned a value but never used.","'CardHeader' is defined but never used.","'Zoom' is defined but never used.","'PasswordField' is defined but never used.","'Link' is defined but never used.","'push' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 80ce926ce286251d8829780c78a02f530dbd7ece
