[{"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx":"1","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"2","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx":"3","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"4","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"5","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"6","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts":"7","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts":"8","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePost.tsx":"9","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"10","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"11"},{"size":956,"mtime":1609746471077,"results":"12","hashOfConfig":"13"},{"size":4761,"mtime":1610977910799,"results":"14","hashOfConfig":"13"},{"size":2367,"mtime":1611131412288,"results":"15","hashOfConfig":"13"},{"size":1523,"mtime":1610352321101,"results":"16","hashOfConfig":"13"},{"size":4102,"mtime":1610977910793,"results":"17","hashOfConfig":"13"},{"size":6139,"mtime":1611212196162,"results":"18","hashOfConfig":"13"},{"size":2743,"mtime":1610977910776,"results":"19","hashOfConfig":"13"},{"size":272,"mtime":1610611184529,"results":"20","hashOfConfig":"13"},{"size":10120,"mtime":1611237926543,"results":"21","hashOfConfig":"13"},{"size":3703,"mtime":1611128829473,"results":"22","hashOfConfig":"13"},{"size":1108,"mtime":1610977910745,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1t5v4mh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\index.tsx",[],["51","52"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",["53"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport interface SignUpProps {}\r\n\r\nexport default function SignUpScreen() {\r\n    return (\r\n        <Card title=\"Sign Up!\" split={1}>\r\n            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                <SignUpHeader title=\"Enter some of your personal details\" />\r\n                <SignUpForm />\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst SignUpHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h5\" style={{ color: 'white', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                    error={errors.password ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"confirmpassword\"\r\n                    id=\"ConformPassword\"\r\n                    label=\"Confirm Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignUpForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log(\"trying \");\r\n        if(data.password==data.confirmpassword){\r\n        auth.doCreateUserWithEmailAndPassword(data.email,data.password).then((u)=>{\r\n            console.log(\"sucessfully signed up\");\r\n            push('/create-profile');    \r\n        }).catch((err)=>{\r\n            console.log(\"Error \"+ err);\r\n            alert(err)\r\n        });\r\n    }\r\n     else{\r\n         alert(\"type the same password in conformation password\")\r\n     }   \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <SignUpFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid item xs={2} alignContent=\"center\" alignItems=\"center\" style={{ verticalAlign: 'true' }}>\r\n                        <Checkbox required/>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    >\r\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\r\n                            By signing up I conform that I have read and accepted the terms and conditions of using the\r\n                            application.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Sign Up!\r\n                    </RegularBtn>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\home-screen\\home.tsx",["54","55","56"],"import * as React from 'react';\r\nimport { Component, useEffect } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\n// import SinglePost from './singlePost';\r\nimport Picture from './welcome-pg.png';\r\nimport {storage} from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any\r\n}\r\n\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n\r\n    constructor(HomeScreenProps: any){\r\n        super(HomeScreenProps)\r\n        this.state ={\r\n            posts: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase.firestore().collection(\"Posts\").onSnapshot((snapshot: any) => {\r\n            this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n        });\r\n        console.log(this.state);\r\n\r\n    }\r\n\r\n    getData = () => {\r\n        firebase.firestore().collection(\"Posts\").orderBy(\"likes_count\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(doc.id, \" => \", doc.data());\r\n            });\r\n        }\r\n        ).catch((err)=>{\r\n            console.log(\"Error getting documents: \", err);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} onLoad = {this.getData}>\r\n                <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\"></img>\r\n                <br></br>\r\n                {/* <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} />\r\n                <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} /> */}\r\n\r\n                {/* {this.state.posts.map(({ id, post } : {id: any; post: any}) => {\r\n                    return (\r\n                    <SinglePost\r\n                        key={id}\r\n                        // id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.username}\r\n                        postPic={post.photoUrl}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                    />\r\n                    );\r\n                })} */}\r\n                <Feed />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",["57"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",["58","59","60"],"import * as React from 'react';\r\nimport './styles.scss';\r\nimport UsernameField from '../../components/Inputs/UsernameField';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport sampleavatar from './sample-avatar.png';\r\nimport {storage} from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Compress from \"react-image-file-resizer\";\r\nimport OccupationSelect from '../../components/Inputs/occupation';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nexport interface CreateProfileProps {}\r\n\r\nexport default class CreateProfileScreen extends React.Component<CreateProfileProps> {\r\n\r\n    state = {\r\n        img: {},\r\n        imgurl : sampleavatar,\r\n    }\r\n\r\n    changeAvatar = async (event:React.ChangeEvent<HTMLInputElement>) => {\r\n        if(event.target.files && event.target.files[0])\r\n        {\r\n            const file = await event.target.files[0];\r\n            this.setState({img: file})\r\n            console.log(this.state.img);\r\n            const user = auth.checkUserLoggedIn();\r\n            if (!user) return;\r\n                Compress.imageFileResizer(\r\n                    file,\r\n                    20,\r\n                    20,\r\n                    \"PNG\",\r\n                    100,\r\n                    0,\r\n                    async (uri) => {\r\n                        if (typeof uri === 'string')\r\n                        {\r\n                        const urinew = uri.split('base64,')[1]\r\n                        storage.ref(`/Images/${user.uid}/Avatar/${file.name}`).putString(urinew, 'base64').then(data => {\r\n                            data.ref.getDownloadURL().then(url => {\r\n                                this.setState({imgurl: url});\r\n                                firebase\r\n                                .firestore()\r\n                                .collection('users/').doc(`${user.uid}/`)\r\n                                .update({\r\n                                    Avatar: url,\r\n                                })\r\n                            });\r\n                        });;\r\n                        }   \r\n                    },\r\n                    \"base64\"\r\n                    ); \r\n            \r\n            }\r\n        }\r\n    \r\n    public render(): JSX.Element {\r\n        return (\r\n            <html>\r\n                <body>\r\n                    <div className=\"Create-Profile-Page\">\r\n                        <Card title=\"Create Profile\" split={1}>\r\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid item>\r\n                                    <BadgeAvatar src={this.state.imgurl} onChange = {this.changeAvatar} />\r\n                                </Grid>\r\n                                <CreateProfileForm img={this.state.imgurl}/>\r\n                            </Grid>\r\n                        </Card>\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst CreateProfileFields = ({ register, errors, control}: { register: any; errors: any; control: any }) => {\r\n    \r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    label=\"username\"\r\n                    type=\"username\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9_]{3,8}$/i,\r\n                            message: 'invalid username',\r\n                        },\r\n                    })}\r\n                    error={errors.username ? true : false}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <OccupationSelect control={control}/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst CreateProfileForm = ({img }: {img: string;}) => {\r\n    const { handleSubmit, errors, register, control } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        const user = auth.checkUserLoggedIn()\r\n        if(user != undefined){\r\n            firebase.firestore()\r\n            .collection('users/').doc(user.uid)\r\n            .set({\r\n                Avatar: img,\r\n                Bio: \"\",\r\n                GamePoint: 0,\r\n                Occupation: data.Occupation,\r\n                User_name: data.username,\r\n            }).catch((err)=>{\r\n                console.log(\"Error \"+ err);\r\n                alert(err)\r\n            });\r\n            push('/home');\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <CreateProfileFields register={register} errors={errors} control={control} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid item xs={10} alignContent=\"center\" alignItems=\"center\" style={{ paddingTop: '20px', verticalAlign: 'true' }}>\r\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\r\n                            *Other users will be able to view your username and display picture as\r\n                            set above\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Complete Registration\r\n                    </RegularBtn>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};",["61","62"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\firebase.ts",["63"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\firebase\\db.ts",[],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\singlePost.tsx",["64","65","66"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",["67","68","69","70"],"D:\\College\\_Year 3\\F29SO\\Group CW\\The App\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":80,"column":25,"nodeType":"78","messageId":"79","endLine":80,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":2,"column":21,"nodeType":"82","messageId":"83","endLine":2,"endColumn":30},{"ruleId":"80","severity":1,"message":"84","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":7,"column":9,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"87","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":21},{"ruleId":"80","severity":1,"message":"88","line":14,"column":19,"nodeType":"82","messageId":"83","endLine":14,"endColumn":29},{"ruleId":"76","severity":1,"message":"89","line":118,"column":17,"nodeType":"78","messageId":"79","endLine":118,"endColumn":19},{"ruleId":"72","replacedBy":"90"},{"ruleId":"74","replacedBy":"91"},{"ruleId":"80","severity":1,"message":"92","line":70,"column":7,"nodeType":"82","messageId":"83","endLine":70,"endColumn":13},{"ruleId":"80","severity":1,"message":"93","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":15},{"ruleId":"80","severity":1,"message":"94","line":11,"column":5,"nodeType":"82","messageId":"83","endLine":11,"endColumn":9},{"ruleId":"76","severity":1,"message":"77","line":65,"column":35,"nodeType":"78","messageId":"79","endLine":65,"endColumn":37},{"ruleId":"80","severity":1,"message":"86","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"95","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":21},{"ruleId":"80","severity":1,"message":"96","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":64,"column":13,"nodeType":"82","messageId":"83","endLine":64,"endColumn":17},{"ruleId":"80","severity":1,"message":"98","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Picture' is defined but never used.","'storage' is defined but never used.","'Checkbox' is defined but never used.","'UsernameField' is defined but never used.","'Controller' is defined but never used.","Expected '!==' and instead saw '!='.",["99"],["100"],"'signIn' is assigned a value but never used.","'CardHeader' is defined but never used.","'Zoom' is defined but never used.","'PasswordField' is defined but never used.","'Link' is defined but never used.","'push' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]