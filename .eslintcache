[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"5","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"6","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"7","/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx":"8","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"9","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx":"10","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"11","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"12","/home/ms374/GeoPick/src/pages/post-view/index.tsx":"13","/home/ms374/GeoPick/src/firebase/auth.ts":"14","/home/ms374/GeoPick/src/components/Layouts/feed.tsx":"15","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx":"16","/home/ms374/GeoPick/src/firebase/firebase.ts":"17","/home/ms374/GeoPick/src/firebase/index.ts":"18","/home/ms374/GeoPick/src/components/Display/sharePost.tsx":"19","/home/ms374/GeoPick/src/firebase/db.ts":"20","/home/ms374/GeoPick/src/components/Display/singlePost.tsx":"21","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx":"22","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"23","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"24","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"25","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"26","/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx":"27","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"28","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"29","/home/ms374/GeoPick/src/components/Game/guessPlay.tsx":"30"},{"size":931,"mtime":1609151726850,"results":"31","hashOfConfig":"32"},{"size":467,"mtime":1609151726915,"results":"33","hashOfConfig":"32"},{"size":3190,"mtime":1611819948365,"results":"34","hashOfConfig":"32"},{"size":787,"mtime":1611505838448,"results":"35","hashOfConfig":"32"},{"size":1681,"mtime":1611683017637,"results":"36","hashOfConfig":"32"},{"size":2275,"mtime":1611684019807,"results":"37","hashOfConfig":"32"},{"size":1471,"mtime":1611505836913,"results":"38","hashOfConfig":"32"},{"size":4565,"mtime":1611816311182,"results":"39","hashOfConfig":"32"},{"size":4033,"mtime":1611816423058,"results":"40","hashOfConfig":"32"},{"size":5410,"mtime":1611816662961,"results":"41","hashOfConfig":"32"},{"size":7023,"mtime":1611816759414,"results":"42","hashOfConfig":"32"},{"size":5817,"mtime":1611814265834,"results":"43","hashOfConfig":"32"},{"size":10986,"mtime":1611817265147,"results":"44","hashOfConfig":"32"},{"size":940,"mtime":1611505837137,"results":"45","hashOfConfig":"32"},{"size":1144,"mtime":1611505837060,"results":"46","hashOfConfig":"32"},{"size":3101,"mtime":1611814265728,"results":"47","hashOfConfig":"32"},{"size":2683,"mtime":1611505837177,"results":"48","hashOfConfig":"32"},{"size":132,"mtime":1611505837183,"results":"49","hashOfConfig":"32"},{"size":4414,"mtime":1611683017595,"results":"50","hashOfConfig":"32"},{"size":262,"mtime":1611505837158,"results":"51","hashOfConfig":"32"},{"size":7263,"mtime":1611694297800,"results":"52","hashOfConfig":"32"},{"size":2815,"mtime":1611505837037,"results":"53","hashOfConfig":"32"},{"size":2249,"mtime":1611505836920,"results":"54","hashOfConfig":"32"},{"size":1636,"mtime":1611505837004,"results":"55","hashOfConfig":"32"},{"size":1976,"mtime":1611685133978,"results":"56","hashOfConfig":"32"},{"size":1756,"mtime":1611505836996,"results":"57","hashOfConfig":"32"},{"size":1536,"mtime":1611505836975,"results":"58","hashOfConfig":"32"},{"size":702,"mtime":1611505836934,"results":"59","hashOfConfig":"32"},{"size":1056,"mtime":1611505836929,"results":"60","hashOfConfig":"32"},{"size":3620,"mtime":1611505836971,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1j1dccp",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},"/home/ms374/GeoPick/src/index.tsx",[],["133","134"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",["135","136","137","138","139"],"/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",["140","141"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport './styles.scss';\nexport interface SetNewPassProps {}\n\nexport default class SetNewPass extends React.Component<SetNewPassProps> {\n    public render(): JSX.Element {\n        return (\n            <div>\n                <div className=\"bgnewpass\">\n                    <Card background=\"white\" title=\"Set a new Password\" split={2}>\n                        <Grid container spacing={5} direction=\"row\">\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n                                    <PasswordField> </PasswordField>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <PasswordField label=\"Confirm Password\" />{' '}\n                                    {/* ask to add the cofirm text in the components */}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\n                                        Set Password\n                                    </RegularBtn>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/home-screen/home.tsx",["142","143","144","145","146","147","148"],"import * as React from 'react';\nimport { Component, useEffect } from 'react';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './homesStyles.scss';\n// import SinglePost from './singlePost';\nimport Picture from './welcome-pg.png';\nimport { storage } from '../../firebase/firebase';\nimport firebase from 'firebase';\nimport Feed from '../../components/Layouts/feed';\nimport { AppBar, Avatar, Button, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport BottomNavigation from '../../components/NavBar/navbar';\n\nexport interface HomeScreenProps {}\nexport interface HomeScreenState {\n    posts: any;\n    user: any;\n}\n\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\n    constructor(HomeScreenProps: any) {\n        super(HomeScreenProps);\n        this.state = {\n            posts: [],\n            user: checkUserLoggedIn(),\n        };\n    }\n\n    componentDidUpdate() {\n        firebase\n            .firestore()\n            .collection('Posts')\n            .onSnapshot((snapshot: any) => {\n                this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\n            });\n        console.log(this.state);\n    }\n\n    getData = () => {\n        firebase\n            .firestore()\n            .collection('Posts')\n            .orderBy('likes_count')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach(function (doc) {\n                    console.log(doc.id, ' => ', doc.data());\n                });\n            })\n            .catch((err) => {\n                console.log('Error getting documents: ', err);\n            });\n    };\n\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b' }} onLoad={this.getData}>\n                <Toolbar>\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n                    <IconButton edge=\"end\">\n                        <Avatar alt={this.state.user.User_name}src={this.state.user.Avatar} />\n                    </IconButton>\n                </Toolbar>\n\n                <Feed />\n                <BottomNavigation />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx",["149"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { auth } from '../../firebase';\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\nexport interface SignInProps {}\n\nexport default function SignInScreens() {\n    return (\n        <div className=\"bg\">\n            <Card background=\"white\" title=\"Sign in\" split={1}>\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                    <SignInHeader title=\"You know what to do...\" />\n                    <SignInForm />\n                </Grid>\n            </Card>\n            <br />\n        </div>\n    );\n}\n\nconst SignInHeader = (props: { title: string }) => {\n    return (\n        <Grid item>\n            <Typography variant=\"h4\" style={{ color: '#f56920', fontWeight: 'unset', textAlign: 'left' }}>\n                {props.title}\n            </Typography>\n            <br />\n        </Grid>\n    );\n};\n\nconst SignInFields = ({ register, errors }: { register: any; errors: any }) => {\n    console.log(errors);\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%' }}>\n                <TextField\n                    name=\"email\"\n                    id=\"Email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: 'invalid email address',\n                        },\n                    })}\n                    error={errors.email ? true : false}\n                    helperText={errors.email ? 'invalid email' : null}\n                />\n            </Grid>\n            <Grid item style={{ width: '100%' }}>\n                <PasswordField\n                    name=\"password\"\n                    id=\"Password\"\n                    inputRef={register({ required: true, minLength: 8 })}\n                    error={errors.password ? true : false}\n                    helperText={errors.password ? 'invalid password' : null}\n                />\n                <br />\n            </Grid>\n        </Grid>\n    );\n};\n\nconst SignInForm = () => {\n    const { handleSubmit, errors, register } = useForm();\n    const { push } = useHistory();\n    const onSubmit = (data: any) => {\n        console.log('trying ');\n        auth.doSignInWithEmailAndPassword(data.email, data.password)\n            .then((u) => {\n                console.log('sucessfully signed up');\n                alert('sucessfully signed up ');\n                push('/home');\n            })\n            .catch((err) => {\n                console.log('Error ' + err);\n                alert(err);\n            });\n    };\n\n    \n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <SignInFields register={register} errors={errors} />\n                <Grid item container spacing={3}>\n                    <Grid\n                        item\n                        xs={10}\n                        alignContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\n                    ></Grid>\n                </Grid>\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\n                        Sign In\n                    </RegularBtn>\n                </Grid>\n                <br />\n                <Link to=\"/ReSet-password\"> Forgot Password ?</Link>\n                <br />\n                <br />\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <Link to=\"/welcome\">\n                        <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\n                            Go Back\n                        </RegularBtn>\n                    </Link>\n                </Grid>\n            </form>\n        </>\n    );\n};\n","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",["150","151","152"],"import { Grid, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { auth } from '../../firebase';\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\nexport interface ResetProps {}\n\nexport default function ResetScreens() {\n    return (\n        <div className=\"bg\">\n            <Card background=\"white\" title=\"Reset password\" split={1}>\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                    <ResetHeader title=\"We just want to confirm your identity...\" />\n                    <ResetForm />\n                </Grid>\n            </Card>\n            <br />\n        </div>\n    );\n}\n\nconst ResetHeader = (props: { title: string }) => {\n    return (\n        <Grid item>\n            <Typography variant=\"h4\" style={{ color: '#f56920', fontWeight: 'unset', textAlign: 'left' }}>\n                {props.title}\n            </Typography>\n        </Grid>\n    );\n};\n\nconst ResetFields = ({ register, errors }: { register: any; errors: any }) => {\n    console.log(errors);\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%' }}>\n                <TextField\n                    name=\"email\"\n                    id=\"Email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: 'invalid email address',\n                        },\n                    })}\n                    error={errors.email ? true : false}\n                    helperText={errors.email ? 'invalid Email ID' : null}/>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst ResetForm = () => {\n    const { handleSubmit, errors, register } = useForm();\n    const { push } = useHistory();\n    const onSubmit = (data: any) => {\n        console.log('trying ');\n        auth.doPasswordReset(data.email)\n            .then((u) => {\n                console.log('reset password link send to your mail');\n                alert('reset password link sent to your mail');\n            })\n            .catch((err) => {\n                console.log('Error ' + err);\n                alert(err);\n            });\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <ResetFields register={register} errors={errors} />\n                <Grid item container spacing={3}>\n                    <Grid\n                        item\n                        xs={10}\n                        alignContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\n                    ></Grid>\n                </Grid>\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '100%', borderRadius: '15px' }}>\n                        Send me a Link\n                    </RegularBtn>\n                </Grid>\n                <br />\n                <br />\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <Link to=\"/sign-in\">\n                        <RegularBtn colorType=\"orange\" style={{ width: '100%', borderRadius: '15px' }}>\n                            Go Back\n                        </RegularBtn>\n                    </Link>\n                </Grid>\n                <br />\n            </form>\n        </>\n    );\n};\n","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx",[],"/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",["153"],"import * as React from 'react';\nimport './styles.scss';\nimport TextField from '../../components/Inputs/TextField';\nimport Card from '../../components/Layouts/Card';\nimport { Grid, Typography } from '@material-ui/core';\nimport BadgeAvatar from '../../components/Display/AddAvatarBadge';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport sampleavatar from './sample-avatar.png';\nimport {storage} from '../../firebase/firebase';\nimport firebase from 'firebase';\nimport Compress from \"react-image-file-resizer\";\nimport OccupationSelect from '../../components/Inputs/occupation';\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { resolve } from 'url';\nexport interface CreateProfileProps {}\n\nexport default class CreateProfileScreen extends React.Component<CreateProfileProps> {\n\n    state: {img: {}, height: number|null, width: number|null, imgurl: string} = {\n        img: {},\n        height: 0,\n        width: 0,\n        imgurl : sampleavatar,\n    }\n\n    \n    changeAvatar = async (event:React.ChangeEvent<HTMLInputElement>) => {\n        if(!event.target.files || !event.target.files[0])\n            return\n        const file = await event.target.files[0];\n        this.setState({img: file})\n        console.log(this.state.img);\n        const user = auth.checkUserLoggedIn();\n\n        if (!user) return;\n        const image = new Image();\n        let fr = new FileReader();\n\n        fr.onload = async function() {\n        if (fr !== null && typeof fr.result == \"string\") {\n            image.src = fr.result;\n            console.log(\"in frload\")\n            console.log(\"frwidg\",image.width);\n        console.log(\"frhigg\",image.height);\n        }\n        }\n        fr.readAsDataURL(file);\n        \n        var width = 0;\n        var height = 0;\n        \n        image.onload = function() {\n            height = image.height;\n            width = image.width;\n        }\n\n        setTimeout(() => {\n            Compress.imageFileResizer(\n                file,\n                width,\n                height,\n                \"JPEG\",\n                50,\n                0,\n                async (uri) => {\n                    if (typeof uri === 'string')\n                    {\n                    const urinew = uri.split('base64,')[1]\n                    storage.ref(`/Images/${user.uid}/Avatar/${file.name}`).putString(urinew, 'base64').then(data => {\n                        data.ref.getDownloadURL().then(url => {\n                            this.setState({imgurl: url});\n                            firebase\n                            .firestore()\n                            .collection('users/').doc(`${user.uid}/`)\n                            .update({\n                                Avatar: url,\n                            })\n                        });\n                    });;\n                    }   \n                },\n                \"base64\"\n                );\n        },2500)\n    }\n    \n    public render(): JSX.Element {\n        return (\n            <html>\n                <body>\n                    <div className=\"Create-Profile-Page\">\n                        <Card title=\"Create Profile\" split={1}>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Grid item>\n                                    <BadgeAvatar src={this.state.imgurl} onChange = {this.changeAvatar} />\n                                </Grid>\n                                <CreateProfileForm img={this.state.imgurl}/>\n                            </Grid>\n                        </Card>\n                    </div>\n                </body>\n            </html>\n        );\n    }\n}\n\n\nconst CreateProfileFields = ({ register, errors, control}: { register: any; errors: any; control: any }) => {\n    \n    console.log(errors);\n    return (\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Grid item style={{ width: '100%' }}>\n                <TextField\n                    name=\"username\"\n                    id=\"username\"\n                    label=\"username\"\n                    type=\"username\"\n                    inputRef={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9_]{3,8}$/i,\n                            message: 'invalid username',\n                        },\n                    })}\n                    error={errors.username ? true : false}\n                    helperText={errors.username ? 'invalid user name' : null} \n                />\n            </Grid>\n            <Grid item style={{ width: '100%' }}>\n                <OccupationSelect control={control}/>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst CreateProfileForm = ({img }: {img: string;}) => {\n    const { handleSubmit, errors, register, control } = useForm();\n    const { push } = useHistory();\n    const onSubmit = (data: any) => {\n        const user = auth.checkUserLoggedIn()\n        if(user !== undefined){\n            firebase.firestore()\n            .collection('users/').doc(user.uid)\n            .set({\n                Avatar: img,\n                Bio: \"\",\n                GamePoint: 0,\n                Occupation: data.Occupation,\n                User_name: data.username,\n            }).catch((err)=>{\n                console.log(\"Error \"+ err);\n                alert(err)\n            });\n            push('/home');\n        }\n        \n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <CreateProfileFields register={register} errors={errors} control={control} />\n                <Grid item container spacing={3}>\n                    <Grid item xs={10} alignContent=\"center\" alignItems=\"center\" style={{ paddingTop: '20px', verticalAlign: 'true' }}>\n                        <Typography align=\"left\" style={{ fontSize: '12px', color: '1B1B1E' }}>\n                            *Other users will be able to view your username and display picture as\n                            set above\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <RegularBtn type=\"submit\" colorType=\"white\" style={{ width: '50%', borderRadius: '15px' }}>\n                        Complete Registration\n                    </RegularBtn>\n                </Grid>\n                <br />\n                <br />\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                    <Link to=\"/sign-up\">\n                        <RegularBtn colorType=\"white\" style={{ width: '100%', borderRadius: '15px' }}>\n                            Go Back\n                        </RegularBtn>\n                    </Link>\n                </Grid>\n            </form>\n        </>\n    );\n};","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import * as React from 'react';\nimport './styles.scss';\nimport { auth } from '../../firebase';\nimport app from 'firebase/app';\nimport SignUpScreen from '../sign-up screen/index';\nimport { BrowserRouter as Router, Route, Switch, Link, BrowserRouter, useHistory } from 'react-router-dom';\nimport WhiteLogo from './WhiteLogo.svg';\nimport googleButton from './googleButton.svg';\n// import background from './welcome-pg.png';\nimport { createStyles, Grid, makeStyles, Theme, Typography, Button } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '../../components/Inputs/Checkbox';\nimport TextField from '../../components/Inputs/TextField';\nimport PasswordField from '../../components/Inputs/PasswordField';\nimport Card from '../../components/Layouts/Card';\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\nimport { AlternateEmailTwoTone, Widgets } from '@material-ui/icons';\ninterface WelcomeProps {}\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             flexGrow: 1,\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//             color: theme.palette.text.secondary,\n//         },\n//     }),\n// );\nconst WelcomeScreen: React.FunctionComponent<WelcomeProps> = (props) => {\n    // const classes = useStyles();\n    /* var config={\n   apiKey:\"\",\n   authDomain:\"\",\n   databaseURL:\"\",\n   project:\"\",\n   storeageBucket:\"\",\n   messageingSenderid:\"\"\n};*/const { push } = useHistory();\n    const GoogleSignin = () => {\n        \n        auth.doGoogleSignUp().then((u)=>{push('/create-profile');}).catch((error) => {\n            console.log(error);\n            window.alert('Failed to login');\n        });\n    };\n    return (\n        <html>\n            <body>\n                {/* <img src ={background} width='auto'> */}\n                <div className=\"welcomepg\">\n                    <Grid container spacing={10} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                        <Grid item>\n                            <img src={WhiteLogo} alt=\"GeoPicK Logo\" />\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h3\" align=\"center\">\n                                <span>A tool for</span>\n                                <br></br>shutterbugs!\n                            </Typography>\n                        </Grid>\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <Grid\n                                item\n                                xs={2}\n                                alignContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ verticalAlign: 'true' }}\n                            ></Grid>\n                            <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\n                                <Grid item>\n                                    <RegularBtn colorType=\"dark\" onClick={GoogleSignin} className=\"g-btn\">\n                                        <img\n                                            src={googleButton}\n                                            width=\"22px\"\n                                            alt=\"Google\"\n                                            style={{ marginLeft: '10px' }}\n                                        />\n                                        <p className=\"text\">Sign in</p>\n                                    </RegularBtn>\n                                    <br></br>\n                                    <hr style={{ width: '500px' }} />\n                                    <div style={{ paddingBottom: '5%' }}>\n                                        <a href=\"/sign-up\">\n                                            <RegularBtn\n                                                // className=\"sign-btn\"\n                                                colorType=\"orange\"\n                                                style={{\n                                                    // color: '#fafafa',\n                                                    borderRadius: '20px',\n                                                    width: '195px',\n                                                    height: '45px',\n                                                    // background: '#f56920',\n                                                }}\n                                            >\n                                                <div style={{ color: '#fafafa' }}>Sign up now!</div>\n                                            </RegularBtn>\n                                        </a>\n                                    </div>\n                                    {/* <br></br> */}\n                                    <div style={{ paddingBottom: '20%' }}>\n                                        <a href=\"/sign-in\">\n                                            <RegularBtn colorType=\"dark\" className=\"sign-btn1\">\n                                                Sign in\n                                            </RegularBtn>\n                                        </a>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </body>\n        </html>\n    );\n};\n\nexport default WelcomeScreen;\n","/home/ms374/GeoPick/src/pages/post-view/index.tsx",["172","173","174","175"],"/home/ms374/GeoPick/src/firebase/auth.ts",[],"/home/ms374/GeoPick/src/components/Layouts/feed.tsx",[],"/home/ms374/GeoPick/src/components/NavBar/navbar.tsx",["176","177"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 50,\n    },\n    list: {\n        marginBottom: theme.spacing(10),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        justifyContent: 'space-evenly',\n        // marginTop: 20,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function LabelBottomNavigation() {\n    // const classes = useStyles();\n    // const [value, setValue] = React.useState('recents');\n\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    //     setValue(newValue);\n    // };\n\n    // return (\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\n    //     </BottomNavigation>\n    // );\n    const classes = useStyles();\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <HomeRoundedIcon />\n                </IconButton>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <SearchRoundedIcon />\n                </IconButton>\n                <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n                    <CameraAltRoundedIcon />\n                </Fab>\n                <div className={classes.grow} />\n                <IconButton color=\"inherit\">\n                    <ExploreRoundedIcon />\n                </IconButton>\n                <IconButton color=\"inherit\">\n                    <SettingsRoundedIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","/home/ms374/GeoPick/src/firebase/firebase.ts",[],"/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/components/Display/sharePost.tsx",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\nimport { Icon, IconButton } from '@material-ui/core';\nimport {\n    FacebookShareButton,\n    TwitterShareButton,\n    TelegramShareButton,\n    WhatsappShareButton,\n    EmailShareButton,\n    FacebookIcon,\n    TwitterIcon,\n    TelegramIcon,\n    WhatsappIcon,\n    EmailIcon,\n} from 'react-share';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            transform: 'translateZ(0px)',\n            flexGrow: 1,\n            backgroundColor: 'transparent',\n        },\n        speedDial: {\n            '&.MuiFab-primary': {\n                backgroundColor: 'transparent',\n            },\n            width: '40px',\n            height: '40px',\n        },\n        options: {\n            width: '0px',\n            height: '0px',\n            padding: '10px',\n            backgroundColor: 'transparent',\n        },\n    }),\n);\n\nexport default function SharePost({ sharedURL }: { sharedURL: string }) {\n    const classes = useStyles();\n    const [direction, setDirection] = React.useState<SpeedDialProps['direction']>('right');\n    const [open, setOpen] = React.useState(false);\n    const [hidden, setHidden] = React.useState(false);\n\n    const actions = [\n        {\n            icon: (\n                <FacebookShareButton url={sharedURL}>\n                    <FacebookIcon size={32} round />\n                </FacebookShareButton>\n            ),\n            name: 'Facebook',\n        },\n        {\n            icon: (\n                <TwitterShareButton url={sharedURL}>\n                    <TwitterIcon size={32} round />\n                </TwitterShareButton>\n            ),\n            name: 'Twitter',\n        },\n        {\n            icon: (\n                <TelegramShareButton url={sharedURL}>\n                    <TelegramIcon size={32} round />\n                </TelegramShareButton>\n            ),\n            name: 'Telegram',\n        },\n        {\n            icon: (\n                <WhatsappShareButton url={sharedURL}>\n                    <WhatsappIcon size={32} round />\n                </WhatsappShareButton>\n            ),\n            name: 'WhatsApp',\n        },\n        {\n            icon: (\n                <EmailShareButton url={sharedURL}>\n                    <EmailIcon size={32} round />\n                </EmailShareButton>\n            ),\n            name: 'Email',\n        },\n    ];\n\n    const handleDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDirection((event.target as HTMLInputElement).value as SpeedDialProps['direction']);\n    };\n\n    const handleHiddenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setHidden(event.target.checked);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        //   <div className={classes.exampleWrapper}>\n        <SpeedDial\n            ariaLabel=\"SpeedDial example\"\n            className={classes.speedDial}\n            hidden={hidden}\n            icon={<ShareIcon />}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            {actions.map((action) => (\n                <SpeedDialAction\n                    key={action.name}\n                    className={classes.options}\n                    icon={action.icon}\n                    tooltipTitle={action.name}\n                    onClick={handleClose}\n                />\n            ))}\n        </SpeedDial>\n        //   </div>\n    );\n}\n","/home/ms374/GeoPick/src/firebase/db.ts",[],"/home/ms374/GeoPick/src/components/Display/singlePost.tsx",["193","194","195","196","197","198","199","200"],"import {\n    Avatar,\n    Grid,\n    Card,\n    Typography,\n    IconButton,\n    CardActions,\n    Button,\n    Box,\n    Container,\n    // Link,\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\nimport ShareIcon from '@material-ui/icons/Share';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport './singlePostStyles.scss';\nimport InputBase from '@material-ui/core/InputBase';\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport firebase from 'firebase';\nimport fb from 'firebase/app';\nimport AddIcon from '@material-ui/icons/Add';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport GuessTheLocationPlay from '../Game/guessPlay';\nimport { Link } from 'react-router-dom';\nimport SharePost from './sharePost';\n\nexport interface SinglePostProps {\n    username?: string;\n    postPic: string;\n    date?: string;\n    avatar?: string;\n    uid?: string;\n    likes_count?: number;\n    caption?: string;\n    id?: string;\n    sharedURL: string;\n    hidden: boolean;\n    comments_count: number;\n}\n\nexport interface SinglePostState {\n    favourited: boolean;\n    user: any;\n    post_user: any;\n    open_share: boolean;\n    isOpen: boolean;\n    path_name: string;\n}\n\n\nclass SinglePost extends Component<SinglePostProps, SinglePostState> {\n    constructor(SinglePostProps: any) {\n        super(SinglePostProps);\n        this.state = {\n            favourited: false,\n            user: checkUserLoggedIn(),\n            post_user: {},\n            open_share: false,\n            isOpen: false,\n            path_name: \"/post/\" + `${this.props.uid}`,\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n\n    handleColorChange = () => {\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: increment,\n            });\n        } else {\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: decrement,\n            });\n        }\n    };\n    share_area = React.createRef();\n\n    componentDidMount() {\n        firebase\n            .firestore()\n            .collection('users')\n            .doc(this.props.uid)\n            .get()\n            .then((querySnapshot) => {\n                const data = querySnapshot.data();\n                // console.log(data);\n                this.setState({\n                    post_user: data,\n                });\n            });\n    }\n\n    handleButtonClick = () => {\n        this.setState((state) => {\n            return {\n                open_share: !state.open_share,\n            };\n        });\n    };\n\n    \n\n    render() {\n        return (\n            <Card\n                style={{\n                    background: '#1b1b1b',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    margin: 'auto',\n                    width: '700px',\n                    padding: 'auto',\n                }}\n            >\n                <Grid container direction=\"row\" spacing={1} justify=\"center\">\n                    <Grid item justify=\"flex-start\" style={{ marginLeft: '5em', position: 'relative' }}>\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\n                    </Grid>\n                    <Grid item justify=\"flex-start\" xs={7}>\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_user.User_name}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative' }}>\n                        <Card\n                            style={{\n                                color: '#F56920',\n                                borderRadius: '22px',\n                                justifyContent: 'center',\n                            }}\n                            className=\"boxField\"\n                        >\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.props.date}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <br></br>\n\n                <Container>\n                    <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\n                        <img\n                            src={this.props.postPic}\n                            alt=\"not loading...\"\n                            width= \"80%\"\n                            max-width= \"600px\"\n                            height= \"500px\"\n                            className=\"postImage\"\n                            style={{ borderRadius: '20px 20px 0px 0px', position: 'sticky' }}\n                        ></img>\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\n                        <Box m={-30} />\n                    </div>\n                </Container>\n                <Grid container spacing={2} justify=\"center\">\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <span>{this.props.caption}</span> \n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                    <Grid item>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {this.props.likes_count}\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <SharePost sharedURL= {this.state.path_name}/>\n                    </Grid>\n                    <Grid item>\n                        <Link to={{pathname:`/post/${ this.props.id}`, state:this.props.uid,}}>\n                            <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA' }}>\n                                <AddCommentRoundedIcon />\n                                <span>{this.props.comments_count}</span>\n                            </IconButton>\n                        </Link>\n                    </Grid>\n                </Grid>\n                <div style={{ padding: '25px' }}></div>\n            </Card>\n            // {/* // </Container> */}\n        );\n    }\n}\n\nexport default SinglePost;\n","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/Checkbox.tsx",[],"/home/ms374/GeoPick/src/components/Display/Avatar.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",[],"/home/ms374/GeoPick/src/components/Game/guessPlay.tsx",["201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\nimport { Icon, IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            transform: 'translateZ(0px)',\n            flexGrow: 1,\n            backgroundColor: 'transparent',\n        },\n        speedDial: {\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n            '&.MuiFab-primary': {\n                backgroundColor: 'transparent',\n            },\n        },\n        options: {\n            width: '80px',\n            height: '40px',\n            textSizeAdjust: 'auto',\n            fontSize: '0.7em',\n        },\n    }),\n);\n\nexport default function GuessTheLocationPlay({ city1, city2, city3 }: { city1: string; city2: string; city3: string }) {\n    const classes = useStyles();\n    const [direction, setDirection] = React.useState<SpeedDialProps['direction']>('up');\n    const [open, setOpen] = React.useState(false);\n    const [hidden, setHidden] = React.useState(false);\n\n    const actions = [\n        { icon: <p>{city1}</p>, name: '' },\n        { icon: <p>{city2}</p>, name: '' },\n        { icon: <p>{city3}</p>, name: '' },\n    ];\n\n    const handleDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDirection((event.target as HTMLInputElement).value as SpeedDialProps['direction']);\n    };\n\n    const handleHiddenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setHidden(event.target.checked);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        //   <div className={classes.exampleWrapper}>\n        <SpeedDial\n            style={{ transform: 'translate(15em, -16em)', height: 'fit-content' }}\n            ariaLabel=\"SpeedDial example\"\n            // className={classes.speedDial}\n            hidden={hidden}\n            icon={\n                <IconButton style={{ position: 'sticky' }}>\n                    <img\n                        src={GuessTheLocationButton}\n                        alt=\"Guess The Location\"\n                        style={{ backfaceVisibility: 'hidden' }}\n                    ></img>\n                </IconButton>\n            }\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            {actions.map((action) => (\n                <SpeedDialAction\n                    key={action.name}\n                    className={classes.options}\n                    icon={action.icon}\n                    tooltipTitle={action.name}\n                    onClick={handleClose}\n                />\n            ))}\n        </SpeedDial>\n        //   </div>\n    );\n}\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":17},{"ruleId":"219","severity":1,"message":"224","line":10,"column":8,"nodeType":"221","messageId":"222","endLine":10,"endColumn":12},{"ruleId":"219","severity":1,"message":"225","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":16},{"ruleId":"219","severity":1,"message":"226","line":12,"column":10,"nodeType":"221","messageId":"222","endLine":12,"endColumn":20},{"ruleId":"219","severity":1,"message":"227","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"223","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":17},{"ruleId":"219","severity":1,"message":"228","line":2,"column":21,"nodeType":"221","messageId":"222","endLine":2,"endColumn":30},{"ruleId":"219","severity":1,"message":"229","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":15},{"ruleId":"219","severity":1,"message":"230","line":7,"column":10,"nodeType":"221","messageId":"222","endLine":7,"endColumn":17},{"ruleId":"219","severity":1,"message":"231","line":10,"column":10,"nodeType":"221","messageId":"222","endLine":10,"endColumn":16},{"ruleId":"219","severity":1,"message":"232","line":10,"column":26,"nodeType":"221","messageId":"222","endLine":10,"endColumn":32},{"ruleId":"219","severity":1,"message":"227","line":10,"column":55,"nodeType":"221","messageId":"222","endLine":10,"endColumn":65},{"ruleId":"219","severity":1,"message":"233","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":16},{"ruleId":"219","severity":1,"message":"225","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},{"ruleId":"219","severity":1,"message":"225","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},{"ruleId":"219","severity":1,"message":"234","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":21},{"ruleId":"219","severity":1,"message":"235","line":63,"column":13,"nodeType":"221","messageId":"222","endLine":63,"endColumn":17},{"ruleId":"219","severity":1,"message":"236","line":16,"column":10,"nodeType":"221","messageId":"222","endLine":16,"endColumn":17},{"ruleId":"219","severity":1,"message":"237","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":11},{"ruleId":"219","severity":1,"message":"238","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":20},{"ruleId":"219","severity":1,"message":"239","line":6,"column":27,"nodeType":"221","messageId":"222","endLine":6,"endColumn":33},{"ruleId":"219","severity":1,"message":"240","line":6,"column":35,"nodeType":"221","messageId":"222","endLine":6,"endColumn":40},{"ruleId":"219","severity":1,"message":"241","line":6,"column":42,"nodeType":"221","messageId":"222","endLine":6,"endColumn":48},{"ruleId":"219","severity":1,"message":"242","line":6,"column":50,"nodeType":"221","messageId":"222","endLine":6,"endColumn":54},{"ruleId":"219","severity":1,"message":"243","line":6,"column":56,"nodeType":"221","messageId":"222","endLine":6,"endColumn":69},{"ruleId":"219","severity":1,"message":"244","line":10,"column":10,"nodeType":"221","messageId":"222","endLine":10,"endColumn":22},{"ruleId":"219","severity":1,"message":"245","line":10,"column":30,"nodeType":"221","messageId":"222","endLine":10,"endColumn":40},{"ruleId":"219","severity":1,"message":"246","line":10,"column":42,"nodeType":"221","messageId":"222","endLine":10,"endColumn":47},{"ruleId":"219","severity":1,"message":"232","line":10,"column":61,"nodeType":"221","messageId":"222","endLine":10,"endColumn":67},{"ruleId":"219","severity":1,"message":"247","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":15},{"ruleId":"219","severity":1,"message":"225","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":16},{"ruleId":"219","severity":1,"message":"223","line":13,"column":8,"nodeType":"221","messageId":"222","endLine":13,"endColumn":17},{"ruleId":"219","severity":1,"message":"234","line":14,"column":8,"nodeType":"221","messageId":"222","endLine":14,"endColumn":21},{"ruleId":"219","severity":1,"message":"224","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":12},{"ruleId":"219","severity":1,"message":"248","line":17,"column":10,"nodeType":"221","messageId":"222","endLine":17,"endColumn":31},{"ruleId":"219","severity":1,"message":"249","line":17,"column":33,"nodeType":"221","messageId":"222","endLine":17,"endColumn":40},{"ruleId":"219","severity":1,"message":"250","line":7,"column":5,"nodeType":"221","messageId":"222","endLine":7,"endColumn":16},{"ruleId":"219","severity":1,"message":"232","line":8,"column":5,"nodeType":"221","messageId":"222","endLine":8,"endColumn":11},{"ruleId":"219","severity":1,"message":"251","line":9,"column":5,"nodeType":"221","messageId":"222","endLine":9,"endColumn":8},{"ruleId":"219","severity":1,"message":"252","line":15,"column":10,"nodeType":"221","messageId":"222","endLine":15,"endColumn":16},{"ruleId":"219","severity":1,"message":"253","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":24},{"ruleId":"219","severity":1,"message":"254","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":30},{"ruleId":"219","severity":1,"message":"255","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":24},{"ruleId":"219","severity":1,"message":"256","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":17},{"ruleId":"219","severity":1,"message":"257","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":13},{"ruleId":"219","severity":1,"message":"258","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":18},{"ruleId":"219","severity":1,"message":"241","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":14},{"ruleId":"219","severity":1,"message":"259","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":21},{"ruleId":"219","severity":1,"message":"260","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":20},{"ruleId":"219","severity":1,"message":"261","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":16},{"ruleId":"219","severity":1,"message":"262","line":13,"column":8,"nodeType":"221","messageId":"222","endLine":13,"endColumn":17},{"ruleId":"219","severity":1,"message":"263","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":20},{"ruleId":"219","severity":1,"message":"264","line":16,"column":8,"nodeType":"221","messageId":"222","endLine":16,"endColumn":30},{"ruleId":"219","severity":1,"message":"265","line":17,"column":10,"nodeType":"221","messageId":"222","endLine":17,"endColumn":14},{"ruleId":"219","severity":1,"message":"266","line":17,"column":16,"nodeType":"221","messageId":"222","endLine":17,"endColumn":26},{"ruleId":"219","severity":1,"message":"267","line":103,"column":11,"nodeType":"221","messageId":"222","endLine":103,"endColumn":32},{"ruleId":"219","severity":1,"message":"268","line":107,"column":11,"nodeType":"221","messageId":"222","endLine":107,"endColumn":29},{"ruleId":"219","severity":1,"message":"250","line":7,"column":5,"nodeType":"221","messageId":"222","endLine":7,"endColumn":16},{"ruleId":"219","severity":1,"message":"232","line":8,"column":5,"nodeType":"221","messageId":"222","endLine":8,"endColumn":11},{"ruleId":"219","severity":1,"message":"269","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":17},{"ruleId":"219","severity":1,"message":"270","line":19,"column":8,"nodeType":"221","messageId":"222","endLine":19,"endColumn":17},{"ruleId":"219","severity":1,"message":"271","line":20,"column":8,"nodeType":"221","messageId":"222","endLine":20,"endColumn":26},{"ruleId":"219","severity":1,"message":"272","line":24,"column":8,"nodeType":"221","messageId":"222","endLine":24,"endColumn":15},{"ruleId":"219","severity":1,"message":"273","line":25,"column":8,"nodeType":"221","messageId":"222","endLine":25,"endColumn":15},{"ruleId":"274","severity":1,"message":"275","line":63,"column":33,"nodeType":"276","messageId":"277","endLine":63,"endColumn":34},{"ruleId":"219","severity":1,"message":"255","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":24},{"ruleId":"219","severity":1,"message":"256","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":17},{"ruleId":"219","severity":1,"message":"257","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":13},{"ruleId":"219","severity":1,"message":"258","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":18},{"ruleId":"219","severity":1,"message":"241","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":14},{"ruleId":"219","severity":1,"message":"259","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":21},{"ruleId":"219","severity":1,"message":"260","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":20},{"ruleId":"219","severity":1,"message":"261","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":16},{"ruleId":"219","severity":1,"message":"262","line":13,"column":8,"nodeType":"221","messageId":"222","endLine":13,"endColumn":17},{"ruleId":"219","severity":1,"message":"269","line":14,"column":8,"nodeType":"221","messageId":"222","endLine":14,"endColumn":17},{"ruleId":"219","severity":1,"message":"263","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":20},{"ruleId":"219","severity":1,"message":"265","line":17,"column":10,"nodeType":"221","messageId":"222","endLine":17,"endColumn":14},{"ruleId":"219","severity":1,"message":"267","line":54,"column":11,"nodeType":"221","messageId":"222","endLine":54,"endColumn":32},{"ruleId":"219","severity":1,"message":"268","line":58,"column":11,"nodeType":"221","messageId":"222","endLine":58,"endColumn":29},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"@typescript-eslint/no-unused-vars","'BackwardBtn' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'RegularBtn' is defined but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.","'Picture' is defined but never used.","'storage' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'PasswordField' is defined but never used.","'push' is assigned a value but never used.","'resolve' is defined but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'AlternateEmailTwoTone' is defined but never used.","'Widgets' is defined but never used.","'CardActions' is defined but never used.","'Box' is defined but never used.","'render' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'SpeedDialIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'SaveIcon' is defined but never used.","'PrintIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'GuessTheLocationButton' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'handleDirectionChange' is assigned a value but never used.","'handleHiddenChange' is assigned a value but never used.","'ShareIcon' is defined but never used.","'InputBase' is defined but never used.","'PublishRoundedIcon' is defined but never used.","'AddIcon' is defined but never used.","'SvgIcon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]