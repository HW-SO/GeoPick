[{"/home/ms374/GeoPick/src/index.tsx":"1","/home/ms374/GeoPick/src/reportWebVitals.ts":"2","/home/ms374/GeoPick/src/App.tsx":"3","/home/ms374/GeoPick/src/theme/index.ts":"4","/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx":"5","/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx":"6","/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx":"7","/home/ms374/GeoPick/src/pages/home-screen/home.tsx":"8","/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx":"9","/home/ms374/GeoPick/src/pages/profile-screen/ProfilePage.tsx":"10","/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx":"11","/home/ms374/GeoPick/src/pages/upload-image/index.tsx":"12","/home/ms374/GeoPick/src/pages/terms/index.tsx":"13","/home/ms374/GeoPick/src/pages/welcome screen/index.tsx":"14","/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx":"15","/home/ms374/GeoPick/src/pages/accessSetting/index.tsx":"16","/home/ms374/GeoPick/src/pages/post-view/index.tsx":"17","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx":"18","/home/ms374/GeoPick/src/firebase/firebase.ts":"19","/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx":"20","/home/ms374/GeoPick/src/firebase/index.ts":"21","/home/ms374/GeoPick/src/components/Inputs/TextField.tsx":"22","/home/ms374/GeoPick/src/firebase/auth.ts":"23","/home/ms374/GeoPick/src/firebase/db.ts":"24","/home/ms374/GeoPick/src/components/Display/sharePost.tsx":"25","/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx":"26","/home/ms374/GeoPick/src/components/Inputs/occupation.tsx":"27","/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx":"28","/home/ms374/GeoPick/src/components/Layouts/Card.tsx":"29","/home/ms374/GeoPick/src/components/Inputs/tags.tsx":"30","/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx":"31","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx":"32","/home/ms374/GeoPick/src/components/Layouts/feed.tsx":"33","/home/ms374/GeoPick/src/components/NavBar/navbar.tsx":"34","/home/ms374/GeoPick/src/components/Display/Avatar.tsx":"35","/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx":"36","/home/ms374/GeoPick/src/pages/search-page/index.tsx":"37","/home/ms374/GeoPick/src/components/Display/profileOverview.tsx":"38"},{"size":931,"mtime":1609151726850,"results":"39","hashOfConfig":"40"},{"size":467,"mtime":1609151726915,"results":"41","hashOfConfig":"40"},{"size":4962,"mtime":1613750041319,"results":"42","hashOfConfig":"40"},{"size":787,"mtime":1611505838448,"results":"43","hashOfConfig":"40"},{"size":3878,"mtime":1612203673107,"results":"44","hashOfConfig":"40"},{"size":1610,"mtime":1612203673126,"results":"45","hashOfConfig":"40"},{"size":4502,"mtime":1612203673069,"results":"46","hashOfConfig":"40"},{"size":3726,"mtime":1613418052130,"results":"47","hashOfConfig":"40"},{"size":5079,"mtime":1612203673141,"results":"48","hashOfConfig":"40"},{"size":2346,"mtime":1613752588897,"results":"49","hashOfConfig":"40"},{"size":5316,"mtime":1613728752202,"results":"50","hashOfConfig":"40"},{"size":8325,"mtime":1613738516593,"results":"51","hashOfConfig":"40"},{"size":28118,"mtime":1613384997588,"results":"52","hashOfConfig":"40"},{"size":5261,"mtime":1613728752219,"results":"53","hashOfConfig":"40"},{"size":2597,"mtime":1613728752134,"results":"54","hashOfConfig":"40"},{"size":249,"mtime":1613728752117,"results":"55","hashOfConfig":"40"},{"size":15027,"mtime":1613728752165,"results":"56","hashOfConfig":"40"},{"size":8428,"mtime":1613213116067,"results":"57","hashOfConfig":"40"},{"size":2683,"mtime":1611505837177,"results":"58","hashOfConfig":"40"},{"size":8219,"mtime":1613728752101,"results":"59","hashOfConfig":"40"},{"size":132,"mtime":1611505837183,"results":"60","hashOfConfig":"40"},{"size":1407,"mtime":1612203672914,"results":"61","hashOfConfig":"40"},{"size":940,"mtime":1611505837137,"results":"62","hashOfConfig":"40"},{"size":262,"mtime":1611505837158,"results":"63","hashOfConfig":"40"},{"size":3227,"mtime":1612203672846,"results":"64","hashOfConfig":"40"},{"size":864,"mtime":1612203672787,"results":"65","hashOfConfig":"40"},{"size":2656,"mtime":1612203672979,"results":"66","hashOfConfig":"40"},{"size":1471,"mtime":1611505836913,"results":"67","hashOfConfig":"40"},{"size":1976,"mtime":1611685133978,"results":"68","hashOfConfig":"40"},{"size":2468,"mtime":1613749717836,"results":"69","hashOfConfig":"40"},{"size":3295,"mtime":1613728748459,"results":"70","hashOfConfig":"40"},{"size":1756,"mtime":1611505836996,"results":"71","hashOfConfig":"40"},{"size":1443,"mtime":1613150252524,"results":"72","hashOfConfig":"40"},{"size":2811,"mtime":1613215445548,"results":"73","hashOfConfig":"40"},{"size":653,"mtime":1612203672825,"results":"74","hashOfConfig":"40"},{"size":1239,"mtime":1613214007813,"results":"75","hashOfConfig":"40"},{"size":2254,"mtime":1613752377413,"results":"76","hashOfConfig":"40"},{"size":3458,"mtime":1613754365184,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1j1dccp",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ms374/GeoPick/src/index.tsx",[],["160","161"],"/home/ms374/GeoPick/src/reportWebVitals.ts",[],"/home/ms374/GeoPick/src/App.tsx",[],"/home/ms374/GeoPick/src/theme/index.ts",[],"/home/ms374/GeoPick/src/pages/sign-in screen/resetpass.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/setnewpass.tsx",[],"/home/ms374/GeoPick/src/pages/sign-in screen/SignInForm.tsx",[],"/home/ms374/GeoPick/src/pages/home-screen/home.tsx",[],"/home/ms374/GeoPick/src/pages/sign-up screen/SignupForm.tsx",[],"/home/ms374/GeoPick/src/pages/profile-screen/ProfilePage.tsx",["162","163","164","165","166","167"],"/home/ms374/GeoPick/src/pages/settings-screen/SettingsMenu.tsx",["168"],"import * as React from 'react';\nimport Card from '../../components/Layouts/Card';\nimport { Component } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\nimport './styles.scss';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport { Avatar, IconButton, Toolbar } from '@material-ui/core';\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport NotificationImportantRoundedIcon from '@material-ui/icons/NotificationImportantRounded';\nimport AccessibilityNewRoundedIcon from '@material-ui/icons/AccessibilityNewRounded';\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport { Link } from 'react-router-dom';\nexport interface SettingsMenuProps {}\nexport interface SettingsMenuState {\n    user: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            // backgroundColor: theme.palette.background.paper,\n            backgroundColor: '#fafafa',\n        },\n    }),\n);\n\nconst SettingsMenu = () => {\n    const classes = useStyles();\n    return (\n        <div style={{ width: '100%', height: '100%' }}>\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                <ListItem button>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccountCircleRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Account Settings\" />\n                </ListItem>\n                <Divider />\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <NotificationImportantRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Notification Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <AccessibilityNewRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Accessibility Settings\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <HelpRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Help and Feedback\" />\n                </ListItem>\n                <ListItem button divider>\n                    <ListItemAvatar>\n                        <Avatar style={{ background: '#fafafa' }}>\n                            <GavelRoundedIcon style={{ color: 'black' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Terms and Conditions\" />\n                </ListItem>\n            </List>\n            <Box m={5} />\n            <div>\n                <Typography variant=\"body1\" style={{ color: '#1b1b1b', textAlign: 'center' }}>\n                    Designed <span style={{ color: '#f56920' }}>& </span> Developed by<br></br>The Geo\n                    <span style={{ color: '#f56920' }}>Pic</span>K team.\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default class SettingsMenuScreen extends Component<SettingsMenuProps, SettingsMenuState> {\n    constructor(SettingsMenuProps: any) {\n        super(SettingsMenuProps);\n        this.state = {\n            user: checkUserLoggedIn(),\n        };\n    }\n    render() {\n        return (\n            <div style={{ background: '#1b1b1b' }} className=\"bgg\">\n                <Toolbar>\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\n                    <IconButton edge=\"end\">\n                        <Avatar alt={this.state.user.User_name} src={this.state.user.Avatar} />\n                    </IconButton>\n                </Toolbar>\n                <div style={{ color: '#fafafa' }}>\n                    <Card background=\"#fafafa\" title=\"Settings\" split={1}>\n                        <div style={{ color: 'black' }}>\n                            <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <SettingsMenu />\n                            </Grid>\n                        </div>\n                    </Card>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n","/home/ms374/GeoPick/src/pages/upload-image/index.tsx",["169","170"],"/home/ms374/GeoPick/src/pages/terms/index.tsx",[],"/home/ms374/GeoPick/src/pages/welcome screen/index.tsx",[],"/home/ms374/GeoPick/src/pages/helpandfeedback/index.tsx",[],"/home/ms374/GeoPick/src/pages/accessSetting/index.tsx",[],"/home/ms374/GeoPick/src/pages/post-view/index.tsx",["171"],"/* eslint-disable no-lone-blocks */\nimport { Avatar, Grid, Card, Typography, IconButton, Container, Divider } from '@material-ui/core';\nimport * as React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\nimport fb from 'firebase/app';\nimport { Component } from 'react';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SharePost from '../../components/Display/sharePost';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nexport interface PostViewState {\n    newComment: string;\n    user: any;\n    Image: string;\n    caption: string;\n    likes_count: number;\n    post_time: string;\n    user_name: string;\n    favourited: boolean;\n    post_uid: string;\n    post_user: any;\n    comments: any;\n}\n\nexport interface PostViewProps {\n    state: string;\n}\n\nexport default class PostViewScreen extends Component<PostViewProps, PostViewState> {\n    constructor(PostViewProps: any) {\n        super(PostViewProps);\n        this.state = {\n            favourited: false,\n            user: {},\n            Image: '',\n            caption: '',\n            likes_count: 0,\n            post_time: '',\n            user_name: '',\n            newComment: '',\n            post_uid: '',\n            post_user: {},\n            comments: [],\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        const auth = checkUserLoggedIn();\n        // console.log(pid);\n        if (auth === undefined) {\n        } else {\n            fb.firestore()\n                .collection('users')\n                .doc(auth.uid)\n                .get()\n                .then((querySnapshot) => {\n                    const data = querySnapshot.data();\n                    // console.log(data);\n                    this.setState({\n                        user: data,\n                    });\n                });\n        }\n\n        await fb\n            .firestore()\n            .collection('Posts')\n            .doc(pid)\n            .get()\n            .then((doc) => {\n                // console.log(doc.data());\n                const data = doc.data();\n                if (data) {\n                    this.setState({\n                        Image: data.Image,\n                        caption: data.caption,\n                        likes_count: data.likes_count,\n                        post_time: new Date(data.post_time.seconds * 1000).toLocaleDateString('en-US'),\n                        user_name: data.user_name,\n                        post_uid: data.uid,\n                        comments: data.comments,\n                    });\n                }\n            });\n\n        fb.firestore()\n            .collection('users')\n            .doc(this.state.post_uid)\n            .get()\n            .then((querySnapshot) => {\n                const data = querySnapshot.data();\n                // console.log(data);\n                this.setState({\n                    post_user: data,\n                });\n            });\n\n        this.setState({\n            favourited: false,\n        });\n    }\n\n    handleColorChange = () => {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: increment,\n            });\n            this.setState({\n                likes_count: this.state.likes_count + 1,\n            });\n        } else {\n            fb.firestore().collection('Posts').doc(pid).update({\n                likes_count: decrement,\n            });\n            this.setState({\n                likes_count: this.state.likes_count - 1,\n            });\n        }\n    };\n\n    render() {\n        const path = window.location.pathname.split('/');\n        const pid = path[path.length - 1];\n        // console.log(uid);\n        const handleChange = (event: any) => {\n            // console.log(event.target.value);\n            this.setState({\n                newComment: event.target.value as string,\n                // user: checkUserLoggedIn(),\n            });\n        };\n\n        const handleClick = (event: any) => {\n            const FieldValue = fb.firestore.FieldValue;\n            const comment = `${this.state.user.User_name} : ${this.state.newComment}`;\n            fb.firestore()\n                .collection('Posts')\n                .doc(pid)\n                .update({\n                    comments: FieldValue.arrayUnion(comment),\n                    comments_count: fb.firestore.FieldValue.increment(1),\n                });\n            // console.log(`${this.state.user.User_name} : ${comment}`);\n            // console.log(this.state.user);\n            this.setState({\n                comments: [...this.state.comments, comment],\n            });\n        };\n\n        return (\n            <Card\n                style={{\n                    background: '#1b1b1b',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    margin: 'auto',\n                    width: 'auto',\n                    padding: 'auto',\n                }}\n            >\n                <Card\n                    style={{\n                        maxHeight: 800,\n                        maxWidth: 600,\n                        margin: 'auto',\n                        marginBlock: '20px',\n                        background: '#1b1b1b',\n                        borderRadius: '20px',\n                    }}\n                >\n                    <CardHeader\n                        color=\"#fafafa\"\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                alt={this.state.post_user.User_name}\n                                src={this.state.post_user.Avatar}\n                                style={{ backgroundColor: 'auto' }}\n                            >\n                                {this.state.post_user.User_name}\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\n                                <MoreVertIcon />\n                            </IconButton>\n                        }\n                        title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\n                        subheader={\n                            <Typography style={{ color: '#fafafa', fontSize: '10px' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        }\n                        style={{ textAlign: 'left', color: '#fafafa' }}\n                    />\n                    <CardMedia\n                        image={this.state.Image}\n                        title=\"Paella dish\"\n                        style={{\n                            borderRadius: '20px 20px 20px 20px',\n                            height: 0,\n                            paddingTop: '56.25%',\n                            marginLeft: '10px',\n                            marginRight: '10px',\n                        }}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#fafafa' }}>\n                            {this.state.caption}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {<Typography style={{ color: '#fafafa' }}>{this.state.likes_count}</Typography>}\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <SharePost sharedURL={window.location.href} />\n                        </IconButton>\n                        {/* <IconButton\n                className={clsx(classes.expand, {\n                    [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n            >\n                <ExpandMoreIcon />\n            </IconButton> */}\n                    </CardActions>\n                </Card>\n                <Divider variant=\"middle\" style={{ background: '#fafafa', margin: '10px' }} />\n                <Grid container spacing={2} justify=\"flex-start\" style={{ justifyItems: 'normal', marginLeft: '10%' }}>\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <Typography variant=\"h4\" style={{ marginBottom: '20px', color: '#f56920' }}>\n                            Latest comments\n                        </Typography>\n                        <ul>\n                            {this.state.comments.map((val: string, index: any) => {\n                                return (\n                                    <li key={index}>\n                                        <Typography variant=\"body2\" style={{ textAlign: 'left', color: 'white' }}>\n                                            {val}\n                                        </Typography>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </Grid>\n                </Grid>\n                <InputBase\n                    onChange={handleChange}\n                    placeholder=\"Start typing...\"\n                    style={{\n                        width: '80%',\n                        // marginRight: '-12%',\n                        margin: 'auto',\n                        marginTop: '20px',\n                        marginBottom: '20px',\n                        textDecorationColor: '#FAFAFA',\n                        border: '1px solid #FAFAFA',\n                        borderRadius: '10px',\n                        height: '50px',\n                        padding: '10px',\n                        color: '#fafafa',\n                    }}\n                    endAdornment={\n                        <IconButton\n                            onClick={handleClick}\n                            aria-label=\"upload\"\n                            type=\"submit\"\n                            style={{ color: '#FAFAFA', alignContent: 'end' }}\n                        >\n                            <PublishRoundedIcon />\n                        </IconButton>\n                    }\n                />\n            </Card>\n        );\n    }\n}\n\n{\n    /* <Grid container direction=\"row\" spacing={1} justify=\"center\">\n                    <Grid\n                        item\n                        justify=\"flex-start\"\n                        style={{ marginLeft: '5em', position: 'relative', marginTop: '20px' }}\n                    >\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\n                    </Grid>\n                    <Grid item justify=\"flex-start\" xs={7} style={{ marginTop: '20px' }}>\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_user.User_name}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative', marginTop: '20px' }}>\n                        <Card\n                            style={{\n                                color: '#F56920',\n                                borderRadius: '22px',\n                                justifyContent: 'center',\n                            }}\n                            className=\"boxField\"\n                        >\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\n                                {this.state.post_time}\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <br></br>\n                <Grid container spacing={2} justify=\"center\">\n                    <Container>\n                        <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\n                            <img\n                                src={this.state.Image}\n                                alt=\"not loading...\"\n                                // width= \"80%\"\n                                width=\"600px\"\n                                height=\"500px\"\n                                className=\"postImage\"\n                                style={{ borderRadius: '20px 20px 0px 0px' }}\n                            ></img>\n                        </div>\n                    </Container>\n                </Grid>\n                <br />\n                <Grid container spacing={2} justify=\"center\">\n                    <Grid item style={{ color: 'white', fontSize: '12' }}>\n                        <span>{this.state.caption}</span>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{ justifyItems: 'normal', marginLeft: '10%' }}\n                >\n                    <Grid item>\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                            onClick={this.handleColorChange}\n                        >\n                            <FavoriteIcon />\n                            {this.state.likes_count}\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <SharePost sharedURL={window.location.href} />\n                    </Grid>\n                </Grid> */\n}\n","/home/ms374/GeoPick/src/pages/create-profile-screen/index.tsx",[],"/home/ms374/GeoPick/src/firebase/firebase.ts",[],"/home/ms374/GeoPick/src/components/Display/singlePostNew.tsx",["172"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\nimport SharePost from './sharePost';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\nimport './singlePostStyles.scss';\nimport { checkUserLoggedIn } from '../../firebase/auth';\nimport firebase from 'firebase';\nimport fb from 'firebase/app';\nimport GuessTheLocationPlay from '../Game/guessPlay';\nimport { Box } from '@material-ui/core';\nexport interface SinglePostNewProps {\n    username?: string;\n    postPic?: string;\n    date?: string;\n    avatar?: string;\n    uid?: string;\n    likes_count?: number;\n    caption?: string;\n    id?: string;\n    sharedURL?: string;\n    hidden?: boolean;\n    comments_count?: number;\n}\n\nexport interface SinglePostNewState {\n    favourited: boolean;\n    user: any;\n    post_user: any;\n    open_share: boolean;\n    isOpen: boolean;\n    path_name: string;\n    isAuthenticated: boolean;\n}\nclass SinglePostNew extends Component<SinglePostNewProps, SinglePostNewState> {\n    constructor(SinglePostNewProps: any) {\n        super(SinglePostNewProps);\n        this.state = {\n            favourited: false,\n            user: checkUserLoggedIn(),\n            post_user: {},\n            open_share: false,\n            isOpen: false,\n            path_name: `/post/${this.props.uid}`,\n            isAuthenticated: false,\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n\n    handleColorChange = () => {\n        this.setState({\n            favourited: !this.state.favourited,\n        });\n\n        const increment = fb.firestore.FieldValue.increment(1);\n        const decrement = fb.firestore.FieldValue.increment(-1);\n\n        if (this.state.favourited === false) {\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: increment,\n            });\n        } else {\n            fb.firestore().collection('Posts').doc(this.props.id).update({\n                likes_count: decrement,\n            });\n        }\n    };\n    share_area = React.createRef();\n\n    componentDidMount() {\n        this.getUser().then(\n            (user) => {\n                this.setState({ isAuthenticated: true, post_user: user });\n            },\n            (error) => {\n                this.setState({ isAuthenticated: true });\n            },\n        );\n    }\n\n    getUser = () => {\n        const uid = this.props.uid;\n        return new Promise(function (resolve, reject) {\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(uid)\n                .get()\n                .then((querySnapshot) => {\n                    const data = querySnapshot.data();\n                    if (data) {\n                        resolve(data);\n                    } else {\n                        reject('User not authenticated');\n                    }\n                });\n        });\n    };\n\n    handleButtonClick = () => {\n        this.setState((state) => {\n            return {\n                open_share: !state.open_share,\n            };\n        });\n    };\n    render() {\n        // const classes = useStyles();\n        const path = window.location.href.split('/');\n        const root = path[path.length - 2];\n        if (!this.state.isAuthenticated) return null;\n        return (\n            <Card\n                style={{\n                    maxHeight: 800,\n                    maxWidth: 600,\n                    margin: 'auto',\n                    marginBlock: '20px',\n                    background: '#1b1b1b',\n                    // border: '3px solid #fafafa',\n                    borderRadius: '20px',\n                }}\n            >\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            aria-label=\"recipe\"\n                            alt={this.state.post_user.User_name}\n                            src={this.state.post_user.Avatar}\n                            style={{ backgroundColor: 'auto' }}\n                        >\n                            {this.state.post_user.User_name}\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"settings\" style={{ color: '#fafafa' }}>\n                            <MoreVertIcon />\n                        </IconButton>\n                    }\n                    title={<Typography variant=\"h6\">{this.state.post_user.User_name}</Typography>}\n                    subheader={\n                        <Typography style={{ color: '#fafafa', fontSize: '10px' }}>{this.props.date}</Typography>\n                    }\n                    style={{ textAlign: 'left', color: '#fafafa' }}\n                />\n                <CardMedia\n                    image={this.props.postPic}\n                    title={`A Photo by ${this.state.post_user.User_name}`}\n                    style={{\n                        borderRadius: '20px 20px 20px 20px',\n                        height: 0,\n                        paddingTop: '56.25%',\n                        marginLeft: '10px',\n                        marginRight: '10px',\n                    }}\n                />\n                <CardContent>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        style={{ color: '#fafafa', textAlign: 'center' }}\n                    >\n                        {this.props.caption}\n                    </Typography>\n                </CardContent>\n                <Box m={-2} />\n                <CardActions disableSpacing>\n                    <IconButton\n                        aria-label=\"add to favorites\"\n                        style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\n                        onClick={this.handleColorChange}\n                    >\n                        <FavoriteIcon />\n                        {<Typography style={{ color: '#fafafa' }}>{this.props.likes_count}</Typography>}\n                    </IconButton>\n                    <Link to={{ pathname: `/post/${this.props.id}`, state: this.props.uid }}>\n                        <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA', position: 'relative' }}>\n                            <AddCommentRoundedIcon />\n                            <span>\n                                {<Typography style={{ color: '#fafafa' }}>{this.props.comments_count}</Typography>}\n                            </span>\n                        </IconButton>\n                    </Link>\n                    <Box m={1} />\n                    <IconButton aria-label=\"share\">\n                        <SharePost sharedURL={`${root}${this.state.path_name}`} />\n                    </IconButton>\n                    {/* <div>\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\n                    </div> */}\n\n                    {/* <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton> */}\n                </CardActions>\n            </Card>\n        );\n    }\n}\nexport default SinglePostNew;\n","/home/ms374/GeoPick/src/firebase/index.ts",[],"/home/ms374/GeoPick/src/components/Inputs/TextField.tsx",[],"/home/ms374/GeoPick/src/firebase/auth.ts",[],"/home/ms374/GeoPick/src/firebase/db.ts",[],"/home/ms374/GeoPick/src/components/Display/sharePost.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarBadge.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/occupation.tsx",[],"/home/ms374/GeoPick/src/components/Buttons/RegularBtn.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/Card.tsx",[],"/home/ms374/GeoPick/src/components/Inputs/tags.tsx",["173","174","175","176"],"/home/ms374/GeoPick/src/components/Display/uploadIcon.tsx",["177","178","179"],"import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\nimport { Fab, IconButton } from '@material-ui/core';\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\n\nimport UploadPic from './uploadPic';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // transform: 'translateZ(0px)',\n            flexGrow: 1,\n            backgroundColor: 'transparent',\n        },\n        speedDial: {\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n            '&.MuiFab-primary': {\n                backgroundColor: 'transparent',\n            },\n        },\n        options: {\n            width: '80px',\n            height: '40px',\n            textSizeAdjust: 'auto',\n            fontSize: '0.7em',\n            borderRadius: '0%',\n        },\n        fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n        transform: 'translate(0em, -6em)',\n\n        },\n         input: {\n        display: 'none',\n    },\n    }),\n);\n\nexport default function UploadIcon(props: any) {\n    const classes = useStyles();\n    const [direction] = React.useState<SpeedDialProps['direction']>('up');\n    const [open, setOpen] = React.useState(false);\n    const [hidden] = React.useState(false);\n\n    const actions = [\n        { icon: <p>Select From Gallery</p>, name: 'gallery' },\n        { icon: <p>Take a photo</p>, name: 'camera' },\n    ];\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        //   <div className={classes.exampleWrapper}>\n        <SpeedDial\n            className={classes.fabButton}\n            ariaLabel=\"SpeedDial example\"\n            // className={classes.speedDial}\n            hidden={hidden}\n            icon={\n                <Fab color=\"secondary\" aria-label=\"add\" >\n                    <CameraAltRoundedIcon />\n                </Fab>\n            }\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            <SpeedDialAction\n                key=\"gallery\"\n                className={classes.options}\n                icon={<div>\n                        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={props.onChange}/>\n                        <label htmlFor=\"icon-button-file\">\n                            <IconButton className={classes.options} color=\"inherit\" aria-label=\"upload picture\" component=\"span\" > Select from Gallery </IconButton>\n                        </label>\n                        </div>}\n                tooltipTitle=\"gallery\"\n                onClick={handleClose}\n            />\n            <SpeedDialAction\n                key=\"camera\"\n                className={classes.options}\n                icon={<p> Take Photo </p>}\n                tooltipTitle=\"camera\"\n                onClick={handleClose}\n            />\n        </SpeedDial>\n    );\n}\n","/home/ms374/GeoPick/src/components/Inputs/PasswordField.tsx",[],"/home/ms374/GeoPick/src/components/Layouts/feed.tsx",[],"/home/ms374/GeoPick/src/components/NavBar/navbar.tsx",["180"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport UploadIcon from '../Display/uploadIcon';\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 50,\n    },\n    list: {\n        marginBottom: theme.spacing(10),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        justifyContent: 'space-evenly',\n        // marginTop: 20,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function LabelBottomNavigation() {\n    // const classes = useStyles();\n    // const [value, setValue] = React.useState('recents');\n\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    //     setValue(newValue);\n    // };\n\n    // return (\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\n    //     </BottomNavigation>\n    // );\n\n    \n    const classes = useStyles();\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <HomeRoundedIcon />\n                </IconButton>\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\n                    <SearchRoundedIcon />\n                </IconButton>\n                <UploadIcon/>\n                <div className={classes.grow} />\n                <IconButton color=\"inherit\">\n                    <ExploreRoundedIcon/>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                    <SettingsRoundedIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","/home/ms374/GeoPick/src/components/Display/Avatar.tsx",[],"/home/ms374/GeoPick/src/components/Display/AddAvatarIcon.tsx",[],"/home/ms374/GeoPick/src/pages/search-page/index.tsx",["181","182","183"],"/home/ms374/GeoPick/src/components/Display/profileOverview.tsx",["184","185","186","187","188","189","190","191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":16},{"ruleId":"196","severity":1,"message":"200","line":1,"column":26,"nodeType":"198","messageId":"199","endLine":1,"endColumn":30},{"ruleId":"196","severity":1,"message":"201","line":1,"column":32,"nodeType":"198","messageId":"199","endLine":1,"endColumn":43},{"ruleId":"196","severity":1,"message":"202","line":1,"column":45,"nodeType":"198","messageId":"199","endLine":1,"endColumn":55},{"ruleId":"196","severity":1,"message":"203","line":1,"column":57,"nodeType":"198","messageId":"199","endLine":1,"endColumn":61},{"ruleId":"196","severity":1,"message":"204","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"205","line":20,"column":10,"nodeType":"198","messageId":"199","endLine":20,"endColumn":14},{"ruleId":"196","severity":1,"message":"206","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"207","line":127,"column":15,"nodeType":"198","messageId":"199","endLine":127,"endColumn":22},{"ruleId":"196","severity":1,"message":"208","line":2,"column":54,"nodeType":"198","messageId":"199","endLine":2,"endColumn":63},{"ruleId":"196","severity":1,"message":"209","line":21,"column":8,"nodeType":"198","messageId":"199","endLine":21,"endColumn":28},{"ruleId":"196","severity":1,"message":"210","line":5,"column":10,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":5,"column":42,"nodeType":"198","messageId":"199","endLine":5,"endColumn":56},{"ruleId":"196","severity":1,"message":"212","line":7,"column":7,"nodeType":"198","messageId":"199","endLine":7,"endColumn":19},{"ruleId":"213","severity":1,"message":"214","line":36,"column":44,"nodeType":"215","messageId":"216","endLine":36,"endColumn":51,"fix":"217"},{"ruleId":"196","severity":1,"message":"218","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"196","severity":1,"message":"219","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":17},{"ruleId":"196","severity":1,"message":"220","line":53,"column":11,"nodeType":"198","messageId":"199","endLine":53,"endColumn":18},{"ruleId":"196","severity":1,"message":"221","line":9,"column":18,"nodeType":"198","messageId":"199","endLine":9,"endColumn":21},{"ruleId":"196","severity":1,"message":"222","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":20},{"ruleId":"196","severity":1,"message":"223","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":15,"column":40,"nodeType":"215","messageId":"216","endLine":15,"endColumn":47,"fix":"224"},{"ruleId":"196","severity":1,"message":"206","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"225","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"204","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"202","line":7,"column":45,"nodeType":"198","messageId":"199","endLine":7,"endColumn":55},{"ruleId":"196","severity":1,"message":"203","line":7,"column":57,"nodeType":"198","messageId":"199","endLine":7,"endColumn":61},{"ruleId":"196","severity":1,"message":"205","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":14},{"ruleId":"196","severity":1,"message":"226","line":21,"column":7,"nodeType":"198","messageId":"199","endLine":21,"endColumn":18},{"ruleId":"196","severity":1,"message":"227","line":30,"column":11,"nodeType":"198","messageId":"199","endLine":30,"endColumn":18},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"@typescript-eslint/no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Grid' is defined but never used.","'BadgeAvatar' is defined but never used.","'Link' is defined but never used.","'IconButton' is defined but never used.","'postRef' is assigned a value but never used.","'Container' is defined but never used.","'GuessTheLocationPlay' is defined but never used.","'Box' is defined but never used.","'TextFieldProps' is defined but never used.","'CssTextField' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"230","text":"231"},"'GuessTheLocationButton' is defined but never used.","'UploadPic' is defined but never used.","'actions' is assigned a value but never used.","'Fab' is defined but never used.","'RegularBtn' is defined but never used.","'Typography' is defined but never used.",{"range":"232","text":"231"},"'AddAvatar' is defined but never used.","'SmallAvatar' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[953,960],"[]",[612,619]]