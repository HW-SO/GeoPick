[{"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\index.tsx":"1","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts":"2","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\App.tsx":"3","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts":"4","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx":"5","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx":"6","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx":"7","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx":"8","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx":"9","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx":"10","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx":"11","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx":"12","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\post-view\\index.tsx":"13","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx":"14","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts":"15","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts":"16","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts":"17","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts":"18","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx":"19","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx":"20","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx":"21","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx":"22","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx":"23","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx":"24","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx":"25","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx":"26","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx":"27","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePost.tsx":"28","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\sharePost.tsx":"29","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Game\\guessPlay.tsx":"30"},{"size":956,"mtime":1609159220764,"results":"31","hashOfConfig":"32"},{"size":482,"mtime":1609106075345,"results":"33","hashOfConfig":"32"},{"size":3540,"mtime":1611670047660,"results":"34","hashOfConfig":"32"},{"size":821,"mtime":1609330750321,"results":"35","hashOfConfig":"32"},{"size":4258,"mtime":1611755211893,"results":"36","hashOfConfig":"32"},{"size":1719,"mtime":1611670047705,"results":"37","hashOfConfig":"32"},{"size":5111,"mtime":1611759971988,"results":"38","hashOfConfig":"32"},{"size":3710,"mtime":1611759929569,"results":"39","hashOfConfig":"32"},{"size":2996,"mtime":1611637160374,"results":"40","hashOfConfig":"32"},{"size":1523,"mtime":1610289923936,"results":"41","hashOfConfig":"32"},{"size":6777,"mtime":1611759892503,"results":"42","hashOfConfig":"32"},{"size":5944,"mtime":1611759476175,"results":"43","hashOfConfig":"32"},{"size":3222,"mtime":1611670047691,"results":"44","hashOfConfig":"32"},{"size":3159,"mtime":1611637160363,"results":"45","hashOfConfig":"32"},{"size":137,"mtime":1610610893398,"results":"46","hashOfConfig":"32"},{"size":2764,"mtime":1611552274421,"results":"47","hashOfConfig":"32"},{"size":969,"mtime":1611020853317,"results":"48","hashOfConfig":"32"},{"size":272,"mtime":1610610893350,"results":"49","hashOfConfig":"32"},{"size":2889,"mtime":1611552274421,"results":"50","hashOfConfig":"32"},{"size":1698,"mtime":1611552274417,"results":"51","hashOfConfig":"32"},{"size":2335,"mtime":1611552274409,"results":"52","hashOfConfig":"32"},{"size":1894,"mtime":1610289923952,"results":"53","hashOfConfig":"32"},{"size":1183,"mtime":1611552274421,"results":"54","hashOfConfig":"32"},{"size":1808,"mtime":1610897670559,"results":"55","hashOfConfig":"32"},{"size":1591,"mtime":1611552274417,"results":"56","hashOfConfig":"32"},{"size":732,"mtime":1611552274409,"results":"57","hashOfConfig":"32"},{"size":1096,"mtime":1611552274409,"results":"58","hashOfConfig":"32"},{"size":12405,"mtime":1611637160353,"results":"59","hashOfConfig":"32"},{"size":4557,"mtime":1611728180195,"results":"60","hashOfConfig":"32"},{"size":3723,"mtime":1611552274417,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ly2p8e",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\index.tsx",[],["132","133"],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\reportWebVitals.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\App.tsx",["134","135","136","137"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport WelcomeScreen from './pages/welcome screen';\r\nimport SignInScreen from './pages/sign-in screen/SignInForm';\r\nimport SignUpScreen from './pages/sign-up screen/SignupForm';\r\n\r\nimport BackwardBtn from './components/Buttons/BackwardBtn';\r\nimport TextField from './components/Inputs/TextField';\r\nimport Card from './components/Layouts/Card';\r\nimport Checkbox from './components/Inputs/Checkbox';\r\nimport { RegularBtn } from './components/Buttons/RegularBtn';\r\nimport CreateProfileScreen from './pages/create-profile-screen';\r\nimport SetNewPasswordScreen from './pages/sign-in screen/setnewpass';\r\nimport ReSetNewPasswordScreen from './pages/sign-in screen/resetpass';\r\nimport { HomeScreen } from './pages/home-screen/home';\r\nimport PostViewScreen from './pages/post-view';\r\n\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Nav />\r\n                <div style={{ background: 'black' }}>\r\n                    <RegularBtn colorType=\"auto\">Hello</RegularBtn>\r\n                </div>\r\n                {/* <div>\r\n                    <BottomNavigation />\r\n                </div> */}\r\n                <Switch>\r\n                    <Route exact path=\"/welcome\">\r\n                        <WelcomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-in\">\r\n                        <SignInScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/sign-up\">\r\n                        <SignUpScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/create-profile\">\r\n                        <CreateProfileScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/Set-password\">\r\n                        <SetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/ReSet-password\">\r\n                        <ReSetNewPasswordScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/home\">\r\n                        <HomeScreen />\r\n                    </Route>\r\n                    <Route exact path=\"/post\">\r\n                        <PostViewScreen />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/welcome\">Welcome</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/sign-up\">Sign-Up</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-profile\">Create Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Set-password\">Set new password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/ReSet-password\">reset password </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home Screen</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/post\">Post View Screen</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\theme\\index.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\SignInForm.tsx",["138"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport Checkbox from '../../components/Inputs/Checkbox';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nexport interface SignInProps {}\r\n\r\nexport default function SignInScreens() {\r\n    return (\r\n        <div className=\"bg\">\r\n            <Card background=\"white\" title=\"Sign in\" split={1}>\r\n                <Grid container spacing={4} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    <SignInHeader title=\"You know what to do...\" />\r\n                    <SignInForm />\r\n                </Grid>\r\n            </Card>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SignInHeader = (props: { title: string }) => {\r\n    return (\r\n        <Grid item>\r\n            <Typography variant=\"h4\" style={{ color: '#f56920', fontWeight: 'unset', textAlign: 'left' }}>\r\n                {props.title}\r\n            </Typography>\r\n            <br />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignInFields = ({ register, errors }: { register: any; errors: any }) => {\r\n    console.log(errors);\r\n    return (\r\n        <Grid item container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style={{ width: '100%' }}>\r\n                <TextField\r\n                    name=\"email\"\r\n                    id=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    inputRef={register({\r\n                        required: true,\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                            message: 'invalid email address',\r\n                        },\r\n                    })}\r\n                    error={errors.email ? true : false}\r\n                    helperText={errors.email ? 'invalid email' : null}\r\n                />\r\n            </Grid>\r\n            <Grid item style={{ width: '100%' }}>\r\n                <PasswordField\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    inputRef={register({ required: true, minLength: 8 })}\r\n                    error={errors.password ? true : false}\r\n                    helperText={errors.password ? 'invalid password' : null}\r\n                />\r\n                <br />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SignInForm = () => {\r\n    const { handleSubmit, errors, register } = useForm();\r\n    const { push } = useHistory();\r\n    const onSubmit = (data: any) => {\r\n        console.log('trying ');\r\n        auth.doSignInWithEmailAndPassword(data.email, data.password)\r\n            .then((u) => {\r\n                console.log('sucessfully signed up');\r\n                alert('sucessfully signed up ');\r\n                push('/home');\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error ' + err);\r\n                alert(err);\r\n            });\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <SignInFields register={register} errors={errors} />\r\n                <Grid item container spacing={3}>\r\n                    <Grid\r\n                        item\r\n                        xs={10}\r\n                        alignContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ paddingTop: '20px', verticalAlign: 'true' }}\r\n                    ></Grid>\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\" justify=\"center\" style={{ textAlign: 'center' }}>\r\n                    <RegularBtn type=\"submit\" colorType=\"orange\" style={{ width: '50%', borderRadius: '15px' }}>\r\n                        Sign In\r\n                    </RegularBtn>\r\n                </Grid>\r\n                <br />\r\n                <Link to=\"/ReSet-password\"> Forgot Password ?</Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\setnewpass.tsx",["139","140"],"import { Grid, Typography } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { RegularBtn } from '../../components/Buttons/RegularBtn';\r\nimport PasswordField from '../../components/Inputs/PasswordField';\r\nimport TextField from '../../components/Inputs/TextField';\r\nimport Card from '../../components/Layouts/Card';\r\nimport './styles.scss';\r\nexport interface SetNewPassProps {}\r\n\r\nexport default class SetNewPass extends React.Component<SetNewPassProps> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <div className=\"bgnewpass\">\r\n                    <Card background=\"white\" title=\"Set a new Password\" split={2}>\r\n                        <Grid container spacing={5} direction=\"row\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12}>\r\n                                    <PasswordField> </PasswordField>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <PasswordField label=\"Confirm Password\" />{' '}\r\n                                    {/* ask to add the cofirm text in the components */}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <RegularBtn colorType=\"orange\" style={{ width: '50%', borderRadius: '18px' }}>\r\n                                        Set Password\r\n                                    </RegularBtn>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-up screen\\SignupForm.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\sign-in screen\\resetpass.tsx",["141","142","143","144"],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\home-screen\\home.tsx",["145","146","147","148","149","150","151"],"import * as React from 'react';\r\nimport { Component, useEffect } from 'react';\r\nimport WhiteLogo from '../welcome screen/WhiteLogo.svg';\r\nimport './homesStyles.scss';\r\n// import SinglePost from './singlePost';\r\nimport Picture from './welcome-pg.png';\r\nimport { storage } from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Feed from '../../components/Layouts/feed';\r\nimport { AppBar, Avatar, Button, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport BottomNavigation from '../../components/NavBar/navbar';\r\n\r\nexport interface HomeScreenProps {}\r\nexport interface HomeScreenState {\r\n    posts: any;\r\n}\r\n\r\nexport class HomeScreen extends Component<HomeScreenProps, HomeScreenState> {\r\n    constructor(HomeScreenProps: any) {\r\n        super(HomeScreenProps);\r\n        this.state = {\r\n            posts: [],\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .onSnapshot((snapshot: any) => {\r\n                this.setState(snapshot.docs.map((doc: any) => ({ id: doc.id, post: doc.data() })));\r\n            });\r\n        console.log(this.state);\r\n    }\r\n\r\n    getData = () => {\r\n        firebase\r\n            .firestore()\r\n            .collection('Posts')\r\n            .orderBy('likes_count')\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach(function (doc) {\r\n                    console.log(doc.id, ' => ', doc.data());\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error getting documents: ', err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: '#1b1b1b' }} onLoad={this.getData}>\r\n                <Toolbar>\r\n                    <img src={WhiteLogo} alt=\"GeoPicK\" className=\"WhiteLogo\" />\r\n                    <IconButton edge=\"end\">\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </IconButton>\r\n                </Toolbar>\r\n\r\n                {/* <br></br> */}\r\n                {/* <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} />\r\n                <SinglePost username=\"GeoPicker\" date=\"13-01-2021\" postPic={Picture} /> */}\r\n                {/* {this.state.posts.map(({ id, post } : {id: any; post: any}) => {\r\n                    return (\r\n                    <SinglePost\r\n                        key={id}\r\n                        // id={id}\r\n                        // profileUrl={post.profileUrl}\r\n                        username={post.username}\r\n                        postPic={post.photoUrl}\r\n                        // caption={post.caption}\r\n                        // comments={post.comments}\r\n                    />\r\n                    );\r\n                })} */}\r\n                <Feed />\r\n                <BottomNavigation />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Buttons\\RegularBtn.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\create-profile-screen\\index.tsx",["152"],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\welcome screen\\index.tsx",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\pages\\post-view\\index.tsx",["171"],"import * as React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { render } from '@testing-library/react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport fb from 'firebase/app';\r\n\r\nexport interface PostViewProps {\r\n    newComment: string;\r\n}\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//     createStyles({\r\n//         root: {\r\n//             flexGrow: 1,\r\n//         },\r\n//         paper: {\r\n//             padding: theme.spacing(2),\r\n//             textAlign: 'center',\r\n//             color: theme.palette.text.secondary,\r\n//         },\r\n//     }),\r\n// );\r\n// const PostView: React.FunctionComponent<PostViewProps> = (props) =>\r\n// const classes = useStyles();\r\n/* var config={\r\n   apiKey:\"\",\r\n   authDomain:\"\",\r\n   databaseURL:\"\",\r\n   project:\"\",\r\n   storeageBucket:\"\",\r\n   messageingSenderid:\"\"\r\n;*/\r\n\r\nexport class PostViewScreen extends React.Component<{}, { newComment: string }> {\r\n    render() {\r\n        const handleChange = (event: any) => {\r\n            console.log(event.target.value);\r\n            this.setState({ newComment: event.target.value as string });\r\n        };\r\n\r\n        const handleClick = (event: any) => {\r\n            const FieldValue = fb.firestore.FieldValue;\r\n            const comment = this.state.newComment;\r\n            fb.firestore()\r\n                .collection('Posts')\r\n                .doc('tBKONbLunJRyvL1Td0SB')\r\n                .update({\r\n                    comments: FieldValue.arrayUnion(comment),\r\n                    comments_count: fb.firestore.FieldValue.increment(1),\r\n                });\r\n            console.log('state', comment);\r\n        };\r\n\r\n        return (\r\n            <html>\r\n                <body>\r\n                    {/* <img src ={background} width='auto'> */}\r\n                    <div className=\"welcomepg\">\r\n                        <InputBase\r\n                            onChange={handleChange}\r\n                            placeholder=\"Start typing...\"\r\n                            style={{\r\n                                width: '32.5%',\r\n                                marginRight: '-12%',\r\n                                textDecorationColor: '#FAFAFA',\r\n                                border: '1px solid #FAFAFA',\r\n                                borderRadius: '10px',\r\n                                height: '50px',\r\n                                padding: '10px',\r\n                                color: 'black',\r\n                            }}\r\n                            endAdornment={\r\n                                <IconButton\r\n                                    onClick={handleClick}\r\n                                    aria-label=\"upload\"\r\n                                    type=\"submit\"\r\n                                    style={{ color: '#FAFAFA', alignContent: 'end' }}\r\n                                >\r\n                                    <PublishRoundedIcon />\r\n                                </IconButton>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostViewScreen;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\NavBar\\navbar.tsx",["172","173"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport CameraAltRoundedIcon from '@material-ui/icons/CameraAltRounded';\r\nimport ExploreRoundedIcon from '@material-ui/icons/ExploreRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport { AppBar, Fab, IconButton, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nexport default function LabelBottomNavigation() {\r\n    // const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n\r\n    // const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    //     setValue(newValue);\r\n    // };\r\n\r\n    // return (\r\n    //     <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n    //         <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<HomeRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Search\" value=\"Search\" icon={<SearchRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Camera\" value=\"Add\" icon={<CameraAltRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Explore\" value=\"Explore\" icon={<ExploreRoundedIcon />} />\r\n    //         <BottomNavigationAction label=\"Settings\" value=\"Settings\" icon={<SettingsRoundedIcon />} />\r\n    //     </BottomNavigation>\r\n    // );\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <HomeRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\">\r\n                    <SearchRoundedIcon />\r\n                </IconButton>\r\n                <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\r\n                    <CameraAltRoundedIcon />\r\n                </Fab>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\">\r\n                    <ExploreRoundedIcon />\r\n                </IconButton>\r\n                <IconButton color=\"inherit\">\r\n                    <SettingsRoundedIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\index.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\firebase.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\auth.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\firebase\\db.ts",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\occupation.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\TextField.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarBadge.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\Card.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Layouts\\feed.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\PasswordField.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Inputs\\Checkbox.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\Avatar.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\AddAvatarIcon.tsx",[],"C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\singlePost.tsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import {\r\n    Avatar,\r\n    Grid,\r\n    Card,\r\n    Typography,\r\n    IconButton,\r\n    CardActions,\r\n    Button,\r\n    Box,\r\n    Container,\r\n    // Link,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddCommentRoundedIcon from '@material-ui/icons/AddCommentRounded';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './singlePostStyles.scss';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport { checkUserLoggedIn } from '../../firebase/auth';\r\nimport firebase from 'firebase';\r\nimport fb from 'firebase/app';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport GuessTheLocationPlay from '../Game/guessPlay';\r\nimport {\r\n    FacebookShareButton,\r\n    TwitterShareButton,\r\n    TelegramShareButton,\r\n    WhatsappShareButton,\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n    EmailIcon,\r\n} from 'react-share';\r\nimport SharePost from './sharePost';\r\nimport { Link } from 'react-router-dom';\r\n// import { Container, Link } from 'react-floating-action-button'\r\n\r\nexport interface SinglePostProps {\r\n    username?: string;\r\n    postPic?: string;\r\n    date?: string;\r\n    avatar?: string;\r\n    uid?: string;\r\n    likes_count?: number;\r\n    caption?: string;\r\n    id?: string;\r\n    sharedURL: string;\r\n    hidden: boolean;\r\n    comments_count: number;\r\n}\r\n\r\nexport interface SinglePostState {\r\n    favourited: boolean;\r\n    user: any;\r\n    post_user: any;\r\n    open_share: boolean;\r\n    GTLButton: any;\r\n    isOpen: boolean;\r\n}\r\n\r\nclass SinglePost extends Component<SinglePostProps, SinglePostState> {\r\n    constructor(SinglePostProps: any) {\r\n        super(SinglePostProps);\r\n        this.state = {\r\n            favourited: false,\r\n            user: checkUserLoggedIn(),\r\n            post_user: {},\r\n            open_share: false,\r\n            GTLButton: this.handleGuessTheLocationOnClick,\r\n            isOpen: false,\r\n        };\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.handleGuessTheLocationOnClick = this.handleGuessTheLocationOnClick.bind(this);\r\n    }\r\n\r\n    handleColorChange = () => {\r\n        this.setState({\r\n            favourited: !this.state.favourited,\r\n        });\r\n\r\n        const increment = fb.firestore.FieldValue.increment(1);\r\n        const decrement = fb.firestore.FieldValue.increment(-1);\r\n\r\n        if (this.state.favourited === false) {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: increment,\r\n            });\r\n        } else {\r\n            fb.firestore().collection('Posts').doc(this.props.id).update({\r\n                likes_count: decrement,\r\n            });\r\n        }\r\n    };\r\n    share_area = React.createRef();\r\n\r\n    componentDidMount() {\r\n        firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .doc(this.props.uid)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const data = querySnapshot.data();\r\n                // console.log(data);\r\n                this.setState({\r\n                    post_user: data,\r\n                });\r\n            });\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                open_share: !state.open_share,\r\n            };\r\n        });\r\n    };\r\n\r\n    handleGuessTheLocationOnClick() {\r\n        return (\r\n            // <Zoom in={checked} style={{ transitionDelay: checked ? '500ms' : '0ms' }}>\r\n            <Card style={{ borderRadius: '20px', width: '20%', height: '30%', background: '#1b1b1b' }}>\r\n                {/* <CardHeader style={{ textAlign: 'left', marginLeft: '10px' }}> */}\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{\r\n                        fontWeight: 'bolder',\r\n                        color: '#f56920',\r\n                        textAlign: 'left',\r\n                        margin: 'auto',\r\n                        padding: '10px',\r\n                    }}\r\n                >\r\n                    Guess The Location\r\n                </Typography>\r\n                {/* </CardHeader> */}\r\n\r\n                <CardActions>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                        <Grid item>\r\n                            <Button\r\n                                style={{\r\n                                    borderRadius: '20px',\r\n                                    marginLeft: '10px',\r\n                                    marginRight: '10px',\r\n                                    background: '#fafafa',\r\n                                    color: '#1b1b1b',\r\n                                    width: '80%',\r\n                                }}\r\n                            >\r\n                                Angola\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                style={{\r\n                                    borderRadius: '20px',\r\n                                    marginLeft: '10px',\r\n                                    marginRight: '10px',\r\n                                    background: '#fafafa',\r\n                                    color: '#1b1b1b',\r\n                                    width: '80%',\r\n                                }}\r\n                            >\r\n                                Dubai\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                style={{\r\n                                    borderRadius: '20px',\r\n                                    marginLeft: '10px',\r\n                                    marginRight: '10px',\r\n                                    background: '#fafafa',\r\n                                    color: '#1b1b1b',\r\n                                    width: '80%',\r\n                                }}\r\n                            >\r\n                                Abu Dhabi\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n            // </Zoom>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                style={{\r\n                    background: '#1b1b1b',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    margin: 'auto',\r\n                    width: '700px',\r\n                    padding: 'auto',\r\n                }}\r\n            >\r\n                <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                    <Grid item justify=\"flex-start\" style={{ marginLeft: '5em', position: 'relative' }}>\r\n                        <Avatar alt={this.state.post_user.User_name} src={this.state.post_user.Avatar}></Avatar>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-start\" xs={7}>\r\n                        <Card style={{ color: '#F56920', borderRadius: '22px' }} className=\"boxField\">\r\n                            <Typography variant=\"h6\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.state.post_user.User_name}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item justify=\"flex-end\" style={{ position: 'relative' }}>\r\n                        <Card\r\n                            style={{\r\n                                color: '#F56920',\r\n                                borderRadius: '22px',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            className=\"boxField\"\r\n                        >\r\n                            <Typography variant=\"body1\" style={{ justifyContent: 'space-evenly' }}>\r\n                                {this.props.date}\r\n                            </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                <Container>\r\n                    <div className=\"postImage\" style={{ justifyItems: 'normal', marginRight: '-10%' }}>\r\n                        <img\r\n                            src={this.props.postPic}\r\n                            alt=\"not loading...\"\r\n                            width=\"600px\"\r\n                            height=\"500px\"\r\n                            className=\"postImage\"\r\n                            style={{ borderRadius: '20px 20px 0px 0px', position: 'sticky' }}\r\n                        ></img>\r\n                        {/* <IconButton style={{ transform: 'translate(-145px, -35px)', position: 'sticky' }}>\r\n                                <img\r\n                                    src={GuessTheLocationButton}\r\n                                    alt=\"Guess The Location\"\r\n                                    onClick={this.state.GTLButton}\r\n                                ></img>\r\n                        </IconButton> */}\r\n                        {/* <FloatingMenu\r\n                            slideSpeed={500}\r\n                            direction={Directions.Up}\r\n                            spacing={8}\r\n                            isOpen={this.state.isOpen}\r\n                        >\r\n                            <MainButton\r\n                            iconResting={<Icon> <img src={GuessTheLocationButton} height={25} width={25}/> </Icon>}\r\n                            iconActive={<Icon> <img src={GuessTheLocationButton} height={25} width={25}/> </Icon>}\r\n                            background=\"none\"\r\n                            onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n                            size={40}\r\n                            />\r\n                            <ChildButton\r\n                            icon={<p> Dubai </p>}\r\n                            background=\"white\"\r\n                            size={40}\r\n                            onClick={() => console.log('First button clicked')}\r\n                            />\r\n                            <ChildButton\r\n                            icon={<p> Sharjah </p>}\r\n                            background=\"white\"\r\n                            size={40}\r\n                            />\r\n                            <ChildButton\r\n                            icon={<p> Abu Dhabi </p>}\r\n                            background=\"white\"\r\n                            size={40}\r\n                            />\r\n                        </FloatingMenu> */}\r\n\r\n                        <GuessTheLocationPlay city1=\"Dubai\" city2=\"Paris\" city3=\"Tokyo\" />\r\n                        <Box m={-30} />\r\n                    </div>\r\n                </Container>\r\n                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <IconButton\r\n                            aria-label=\"add to favorites\"\r\n                            style={this.state.favourited ? { color: '#dc143c' } : { color: '#FAFAFA' }}\r\n                            onClick={this.handleColorChange}\r\n                        >\r\n                            <FavoriteIcon />\r\n                            {this.props.likes_count}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <SharePost sharedURL={this.props.sharedURL} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/post\">\r\n                            <IconButton aria-label=\"add a comment\" style={{ color: '#FAFAFA' }}>\r\n                                <AddCommentRoundedIcon />\r\n                                <span>{this.props.comments_count}</span>\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{ padding: '25px' }}></div>\r\n            </Card>\r\n            // {/* // </Container> */}\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePost;\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Display\\sharePost.tsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\r\nimport { Icon, IconButton } from '@material-ui/core';\r\nimport {\r\n    FacebookShareButton,\r\n    TwitterShareButton,\r\n    TelegramShareButton,\r\n    WhatsappShareButton,\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n    EmailIcon,\r\n} from 'react-share';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            transform: 'translateZ(0px)',\r\n            flexGrow: 1,\r\n            backgroundColor: 'transparent',\r\n        },\r\n        speedDial: {\r\n            '&.MuiFab-primary': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            width: '40px',\r\n            height: '40px',\r\n        },\r\n        options: {\r\n            width: '0px',\r\n            height: '0px',\r\n            padding: '10px',\r\n            backgroundColor: 'transparent',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SharePost({ sharedURL }: { sharedURL: string }) {\r\n    const classes = useStyles();\r\n    const [direction, setDirection] = React.useState<SpeedDialProps['direction']>('right');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const actions = [\r\n        {\r\n            icon: (\r\n                <FacebookShareButton url={sharedURL}>\r\n                    <FacebookIcon size={32} round />\r\n                </FacebookShareButton>\r\n            ),\r\n            name: 'Facebook',\r\n        },\r\n        {\r\n            icon: (\r\n                <TwitterShareButton url={sharedURL}>\r\n                    <TwitterIcon size={32} round />\r\n                </TwitterShareButton>\r\n            ),\r\n            name: 'Twitter',\r\n        },\r\n        {\r\n            icon: (\r\n                <TelegramShareButton url={sharedURL}>\r\n                    <TelegramIcon size={32} round />\r\n                </TelegramShareButton>\r\n            ),\r\n            name: 'Telegram',\r\n        },\r\n        {\r\n            icon: (\r\n                <WhatsappShareButton url={sharedURL}>\r\n                    <WhatsappIcon size={32} round />\r\n                </WhatsappShareButton>\r\n            ),\r\n            name: 'WhatsApp',\r\n        },\r\n        {\r\n            icon: (\r\n                <EmailShareButton url={sharedURL}>\r\n                    <EmailIcon size={32} round />\r\n                </EmailShareButton>\r\n            ),\r\n            name: 'Email',\r\n        },\r\n    ];\r\n\r\n    const handleDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDirection((event.target as HTMLInputElement).value as SpeedDialProps['direction']);\r\n    };\r\n\r\n    const handleHiddenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setHidden(event.target.checked);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        //   <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n            ariaLabel=\"SpeedDial example\"\r\n            className={classes.speedDial}\r\n            hidden={hidden}\r\n            icon={<ShareIcon />}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            open={open}\r\n            direction={direction}\r\n        >\r\n            {actions.map((action) => (\r\n                <SpeedDialAction\r\n                    key={action.name}\r\n                    className={classes.options}\r\n                    icon={action.icon}\r\n                    tooltipTitle={action.name}\r\n                    onClick={handleClose}\r\n                />\r\n            ))}\r\n        </SpeedDial>\r\n        //   </div>\r\n    );\r\n}\r\n","C:\\Users\\Syed\\Documents\\GitHub\\GeoPick\\src\\components\\Game\\guessPlay.tsx",["204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport GuessTheLocationButton from '../Display/guess-the-location.svg';\r\nimport { Icon, IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            transform: 'translateZ(0px)',\r\n            flexGrow: 1,\r\n            backgroundColor: 'transparent',\r\n        },\r\n        speedDial: {\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n            '&.MuiFab-primary': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n        options: {\r\n            width: '80px',\r\n            height: '40px',\r\n            textSizeAdjust: 'auto',\r\n            fontSize: '0.7em',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function GuessTheLocationPlay({ city1, city2, city3 }: { city1: string; city2: string; city3: string }) {\r\n    const classes = useStyles();\r\n    const [direction, setDirection] = React.useState<SpeedDialProps['direction']>('up');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const actions = [\r\n        { icon: <p>{city1}</p>, name: '' },\r\n        { icon: <p>{city2}</p>, name: '' },\r\n        { icon: <p>{city3}</p>, name: '' },\r\n    ];\r\n\r\n    const handleDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDirection((event.target as HTMLInputElement).value as SpeedDialProps['direction']);\r\n    };\r\n\r\n    const handleHiddenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setHidden(event.target.checked);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        //   <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n            style={{ transform: 'translate(15em, -16em)', height: 'fit-content' }}\r\n            ariaLabel=\"SpeedDial example\"\r\n            // className={classes.speedDial}\r\n            hidden={hidden}\r\n            icon={\r\n                <IconButton style={{ position: 'sticky' }}>\r\n                    <img\r\n                        src={GuessTheLocationButton}\r\n                        alt=\"Guess The Location\"\r\n                        style={{ backfaceVisibility: 'hidden' }}\r\n                    ></img>\r\n                </IconButton>\r\n            }\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            open={open}\r\n            direction={direction}\r\n        >\r\n            {actions.map((action) => (\r\n                <SpeedDialAction\r\n                    key={action.name}\r\n                    className={classes.options}\r\n                    icon={action.icon}\r\n                    tooltipTitle={action.name}\r\n                    onClick={handleClose}\r\n                />\r\n            ))}\r\n        </SpeedDial>\r\n        //   </div>\r\n    );\r\n}\r\n",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":8,"column":8,"nodeType":"224","messageId":"225","endLine":8,"endColumn":19},{"ruleId":"222","severity":1,"message":"226","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":17},{"ruleId":"222","severity":1,"message":"227","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":12},{"ruleId":"222","severity":1,"message":"228","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":16},{"ruleId":"222","severity":1,"message":"228","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"229","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"226","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":17},{"ruleId":"222","severity":1,"message":"228","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"230","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":21},{"ruleId":"222","severity":1,"message":"231","line":10,"column":10,"nodeType":"224","messageId":"225","endLine":10,"endColumn":14},{"ruleId":"222","severity":1,"message":"232","line":63,"column":13,"nodeType":"224","messageId":"225","endLine":63,"endColumn":17},{"ruleId":"222","severity":1,"message":"233","line":2,"column":21,"nodeType":"224","messageId":"225","endLine":2,"endColumn":30},{"ruleId":"222","severity":1,"message":"234","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":15},{"ruleId":"222","severity":1,"message":"235","line":7,"column":10,"nodeType":"224","messageId":"225","endLine":7,"endColumn":17},{"ruleId":"222","severity":1,"message":"236","line":10,"column":10,"nodeType":"224","messageId":"225","endLine":10,"endColumn":16},{"ruleId":"222","severity":1,"message":"237","line":10,"column":26,"nodeType":"224","messageId":"225","endLine":10,"endColumn":32},{"ruleId":"222","severity":1,"message":"229","line":10,"column":55,"nodeType":"224","messageId":"225","endLine":10,"endColumn":65},{"ruleId":"222","severity":1,"message":"238","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":16},{"ruleId":"222","severity":1,"message":"239","line":16,"column":10,"nodeType":"224","messageId":"225","endLine":16,"endColumn":17},{"ruleId":"222","severity":1,"message":"240","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":11},{"ruleId":"222","severity":1,"message":"241","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":20},{"ruleId":"222","severity":1,"message":"242","line":6,"column":27,"nodeType":"224","messageId":"225","endLine":6,"endColumn":33},{"ruleId":"222","severity":1,"message":"243","line":6,"column":35,"nodeType":"224","messageId":"225","endLine":6,"endColumn":40},{"ruleId":"222","severity":1,"message":"244","line":6,"column":42,"nodeType":"224","messageId":"225","endLine":6,"endColumn":48},{"ruleId":"222","severity":1,"message":"231","line":6,"column":50,"nodeType":"224","messageId":"225","endLine":6,"endColumn":54},{"ruleId":"222","severity":1,"message":"245","line":6,"column":56,"nodeType":"224","messageId":"225","endLine":6,"endColumn":69},{"ruleId":"222","severity":1,"message":"246","line":10,"column":10,"nodeType":"224","messageId":"225","endLine":10,"endColumn":22},{"ruleId":"222","severity":1,"message":"247","line":10,"column":30,"nodeType":"224","messageId":"225","endLine":10,"endColumn":40},{"ruleId":"222","severity":1,"message":"248","line":10,"column":42,"nodeType":"224","messageId":"225","endLine":10,"endColumn":47},{"ruleId":"222","severity":1,"message":"237","line":10,"column":61,"nodeType":"224","messageId":"225","endLine":10,"endColumn":67},{"ruleId":"222","severity":1,"message":"249","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":15},{"ruleId":"222","severity":1,"message":"228","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":13,"column":8,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"230","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":21},{"ruleId":"222","severity":1,"message":"227","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"250","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":31},{"ruleId":"222","severity":1,"message":"251","line":17,"column":33,"nodeType":"224","messageId":"225","endLine":17,"endColumn":40},{"ruleId":"222","severity":1,"message":"252","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"253","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"254","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":30},{"ruleId":"222","severity":1,"message":"255","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":17},{"ruleId":"222","severity":1,"message":"256","line":19,"column":8,"nodeType":"224","messageId":"225","endLine":19,"endColumn":17},{"ruleId":"222","severity":1,"message":"257","line":20,"column":8,"nodeType":"224","messageId":"225","endLine":20,"endColumn":26},{"ruleId":"222","severity":1,"message":"258","line":24,"column":8,"nodeType":"224","messageId":"225","endLine":24,"endColumn":15},{"ruleId":"222","severity":1,"message":"259","line":25,"column":8,"nodeType":"224","messageId":"225","endLine":25,"endColumn":15},{"ruleId":"222","severity":1,"message":"260","line":28,"column":5,"nodeType":"224","messageId":"225","endLine":28,"endColumn":24},{"ruleId":"222","severity":1,"message":"261","line":29,"column":5,"nodeType":"224","messageId":"225","endLine":29,"endColumn":23},{"ruleId":"222","severity":1,"message":"262","line":30,"column":5,"nodeType":"224","messageId":"225","endLine":30,"endColumn":24},{"ruleId":"222","severity":1,"message":"263","line":31,"column":5,"nodeType":"224","messageId":"225","endLine":31,"endColumn":24},{"ruleId":"222","severity":1,"message":"264","line":32,"column":5,"nodeType":"224","messageId":"225","endLine":32,"endColumn":21},{"ruleId":"222","severity":1,"message":"265","line":33,"column":5,"nodeType":"224","messageId":"225","endLine":33,"endColumn":17},{"ruleId":"222","severity":1,"message":"266","line":34,"column":5,"nodeType":"224","messageId":"225","endLine":34,"endColumn":16},{"ruleId":"222","severity":1,"message":"267","line":35,"column":5,"nodeType":"224","messageId":"225","endLine":35,"endColumn":17},{"ruleId":"222","severity":1,"message":"268","line":36,"column":5,"nodeType":"224","messageId":"225","endLine":36,"endColumn":17},{"ruleId":"222","severity":1,"message":"269","line":37,"column":5,"nodeType":"224","messageId":"225","endLine":37,"endColumn":14},{"ruleId":"222","severity":1,"message":"270","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"271","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":17},{"ruleId":"222","severity":1,"message":"272","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":13},{"ruleId":"222","severity":1,"message":"273","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":18},{"ruleId":"222","severity":1,"message":"244","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":14},{"ruleId":"222","severity":1,"message":"274","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":21},{"ruleId":"222","severity":1,"message":"275","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":20},{"ruleId":"222","severity":1,"message":"276","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":16},{"ruleId":"222","severity":1,"message":"277","line":13,"column":8,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"278","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":20},{"ruleId":"222","severity":1,"message":"279","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":30},{"ruleId":"222","severity":1,"message":"280","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":14},{"ruleId":"222","severity":1,"message":"281","line":17,"column":16,"nodeType":"224","messageId":"225","endLine":17,"endColumn":26},{"ruleId":"222","severity":1,"message":"282","line":103,"column":11,"nodeType":"224","messageId":"225","endLine":103,"endColumn":32},{"ruleId":"222","severity":1,"message":"283","line":107,"column":11,"nodeType":"224","messageId":"225","endLine":107,"endColumn":29},{"ruleId":"222","severity":1,"message":"270","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"271","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":17},{"ruleId":"222","severity":1,"message":"272","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":13},{"ruleId":"222","severity":1,"message":"273","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":18},{"ruleId":"222","severity":1,"message":"244","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":14},{"ruleId":"222","severity":1,"message":"274","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":21},{"ruleId":"222","severity":1,"message":"275","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":20},{"ruleId":"222","severity":1,"message":"276","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":16},{"ruleId":"222","severity":1,"message":"277","line":13,"column":8,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"255","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":17},{"ruleId":"222","severity":1,"message":"278","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":20},{"ruleId":"222","severity":1,"message":"280","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":14},{"ruleId":"222","severity":1,"message":"282","line":54,"column":11,"nodeType":"224","messageId":"225","endLine":54,"endColumn":32},{"ruleId":"222","severity":1,"message":"283","line":58,"column":11,"nodeType":"224","messageId":"225","endLine":58,"endColumn":29},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"@typescript-eslint/no-unused-vars","'BackwardBtn' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'PasswordField' is defined but never used.","'Link' is defined but never used.","'push' is assigned a value but never used.","'useEffect' is defined but never used.","'Picture' is defined but never used.","'storage' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'resolve' is defined but never used.","'app' is defined but never used.","'SignUpScreen' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'AlternateEmailTwoTone' is defined but never used.","'Widgets' is defined but never used.","'render' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'ShareIcon' is defined but never used.","'InputBase' is defined but never used.","'PublishRoundedIcon' is defined but never used.","'AddIcon' is defined but never used.","'SvgIcon' is defined but never used.","'FacebookShareButton' is defined but never used.","'TwitterShareButton' is defined but never used.","'TelegramShareButton' is defined but never used.","'WhatsappShareButton' is defined but never used.","'EmailShareButton' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'WhatsappIcon' is defined but never used.","'EmailIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'SpeedDialIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'SaveIcon' is defined but never used.","'PrintIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'GuessTheLocationButton' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'handleDirectionChange' is assigned a value but never used.","'handleHiddenChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]